program: WHILE
##
## Ends in an error in state: 0.
##
## program' -> . program [ # ]
##
## The known suffix of the stack is as follows:
##
##

Expected "functions {" or "data {" or "transformed data {" or "parameters {" or "transformed parameters {" or "model {" or "generated quantities {".

program: DATABLOCK LBRACE CHOLESKYFACTORCORR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 653.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> CHOLESKYFACTORCORR LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCORR LBRACK non_lhs
##

Expected "[" expression "]" for size of cholesky_factor_corr.

program: DATABLOCK LBRACE CHOLESKYFACTORCORR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 655.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> CHOLESKYFACTORCORR LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCORR LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size of cholesky_factor_corr.

program: DATABLOCK LBRACE CHOLESKYFACTORCORR LBRACK WHILE
##
## Ends in an error in state: 652.
##
## top_var_type -> CHOLESKYFACTORCORR LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CHOLESKYFACTORCORR LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCORR LBRACK
##

Expected "[" expression "]" for size of cholesky_factor_corr.

program: DATABLOCK LBRACE CHOLESKYFACTORCORR WHILE
##
## Ends in an error in state: 651.
##
## top_var_type -> CHOLESKYFACTORCORR . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CHOLESKYFACTORCORR . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCORR
##

Expected "[" expression "]" for size of cholesky_factor_corr.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 642.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## top_var_type -> CHOLESKYFACTORCOV LBRACK non_lhs . option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCOV LBRACK non_lhs
##

Expected "[" expression "]" or "[" expression "," expression "]" for size of cholesky_factor_cov.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK TRUNCATE COMMA REALNUMERAL WHILE
##
## Ends in an error in state: 644.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## option(pair(COMMA,expression)) -> COMMA non_lhs . [ RBRACK ]
##
## The known suffix of the stack is as follows:
## COMMA non_lhs
##

Expected comma separated list of expressions. Ill-formed expression.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK TRUNCATE COMMA TRUNCATE TILDE
##
## Ends in an error in state: 645.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## option(pair(COMMA,expression)) -> COMMA lhs . [ RBRACK ]
##
## The known suffix of the stack is as follows:
## COMMA lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected comma separated list of expressions. Ill-formed expression.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK TRUNCATE COMMA WHILE
##
## Ends in an error in state: 643.
##
## option(pair(COMMA,expression)) -> COMMA . lhs [ RBRACK ]
## option(pair(COMMA,expression)) -> COMMA . non_lhs [ RBRACK ]
##
## The known suffix of the stack is as follows:
## COMMA
##

Expected comma separated list of expressions. Ill-formed expression.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 648.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## top_var_type -> CHOLESKYFACTORCOV LBRACK lhs . option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCOV LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" or "[" expression "," expression "]" for size of cholesky_factor_cov.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV LBRACK WHILE
##
## Ends in an error in state: 641.
##
## top_var_type -> CHOLESKYFACTORCOV LBRACK . lhs option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CHOLESKYFACTORCOV LBRACK . non_lhs option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCOV LBRACK
##

Expected "[" expression "]" or "[" expression "," expression "]" for size of cholesky_factor_cov.

program: DATABLOCK LBRACE CHOLESKYFACTORCOV WHILE
##
## Ends in an error in state: 640.
##
## top_var_type -> CHOLESKYFACTORCOV . LBRACK lhs option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CHOLESKYFACTORCOV . LBRACK non_lhs option(pair(COMMA,expression)) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCOV
##

Expected "[" expression "]" or "[" expression "," expression "]" for size of cholesky_factor_cov.

program: DATABLOCK LBRACE CORRMATRIX LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 636.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> CORRMATRIX LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CORRMATRIX LBRACK non_lhs
##

Expected "[" expression "]" for size of corr_matrix.

program: DATABLOCK LBRACE CORRMATRIX LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 638.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> CORRMATRIX LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CORRMATRIX LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size of corr_matrix.

program: DATABLOCK LBRACE CORRMATRIX LBRACK WHILE
##
## Ends in an error in state: 635.
##
## top_var_type -> CORRMATRIX LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CORRMATRIX LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CORRMATRIX LBRACK
##

Expected "[" expression "]" for size of corr_matrix.

program: DATABLOCK LBRACE CORRMATRIX WHILE
##
## Ends in an error in state: 634.
##
## top_var_type -> CORRMATRIX . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> CORRMATRIX . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## CORRMATRIX
##

Expected "[" expression "]" for size of corr_matrix.

program: DATABLOCK LBRACE COVMATRIX LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 630.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> COVMATRIX LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## COVMATRIX LBRACK non_lhs
##

Expected "[" expression "]" for size of cov_matrix.

program: DATABLOCK LBRACE COVMATRIX LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 632.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> COVMATRIX LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## COVMATRIX LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size of cov_matrix.

program: DATABLOCK LBRACE COVMATRIX LBRACK WHILE
##
## Ends in an error in state: 629.
##
## top_var_type -> COVMATRIX LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> COVMATRIX LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## COVMATRIX LBRACK
##

Expected "[" expression "]" for size of cov_matrix.

program: DATABLOCK LBRACE COVMATRIX WHILE
##
## Ends in an error in state: 628.
##
## top_var_type -> COVMATRIX . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> COVMATRIX . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## COVMATRIX
##

Expected "[" expression "]" for size of cov_matrix.

program: DATABLOCK LBRACE INT LABRACK WHILE
##
## Ends in an error in state: 626.
##
## range_constraint -> LABRACK . range RABRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## LABRACK
##

Expected "lower = " expression or "upper = " expression for integer bounds.

program: DATABLOCK LBRACE INT LBRACE
##
## Ends in an error in state: 625.
##
## top_var_type -> INT . range_constraint [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## INT
##

Expected range constraint or identifier as part of top-level variable declaration.

program: DATABLOCK LBRACE MATRIX LABRACK MULTIPLIER ASSIGN IDENTIFIER RABRACK WHILE
##
## Ends in an error in state: 611.
##
## top_var_type -> MATRIX type_constraint . LBRACK lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint . LBRACK lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint . LBRACK non_lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint . LBRACK non_lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint
##

Expected "[" expression "," expression "]" for matrix sizes as part of top-level variable declaration.

program: DATABLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA REALNUMERAL WHILE
##
## Ends in an error in state: 615.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> MATRIX type_constraint LBRACK non_lhs COMMA non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK non_lhs COMMA non_lhs
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA TRUNCATE TILDE
##
## Ends in an error in state: 617.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> MATRIX type_constraint LBRACK non_lhs COMMA lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK non_lhs COMMA lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA WHILE
##
## Ends in an error in state: 614.
##
## top_var_type -> MATRIX type_constraint LBRACK non_lhs COMMA . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK non_lhs COMMA . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK non_lhs COMMA
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 613.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## top_var_type -> MATRIX type_constraint LBRACK non_lhs . COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK non_lhs . COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK non_lhs
##


Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA REALNUMERAL WHILE
##
## Ends in an error in state: 621.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> MATRIX type_constraint LBRACK lhs COMMA non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK lhs COMMA non_lhs
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA TRUNCATE TILDE
##
## Ends in an error in state: 623.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> MATRIX type_constraint LBRACK lhs COMMA lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK lhs COMMA lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA WHILE
##
## Ends in an error in state: 620.
##
## top_var_type -> MATRIX type_constraint LBRACK lhs COMMA . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK lhs COMMA . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK lhs COMMA
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 619.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## top_var_type -> MATRIX type_constraint LBRACK lhs . COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK lhs . COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX LBRACK WHILE
##
## Ends in an error in state: 612.
##
## top_var_type -> MATRIX type_constraint LBRACK . lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK . lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK . non_lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX type_constraint LBRACK . non_lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX type_constraint LBRACK
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE MATRIX WHILE
##
## Ends in an error in state: 610.
##
## top_var_type -> MATRIX . type_constraint LBRACK lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX . type_constraint LBRACK lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX . type_constraint LBRACK non_lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> MATRIX . type_constraint LBRACK non_lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX
##

Expected "[" expression "," expression "]" for sizes of matrix.

program: DATABLOCK LBRACE ORDERED LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 606.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> ORDERED LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ORDERED LBRACK non_lhs
##

Expected "[" expression "]" for size of ordered.

program: DATABLOCK LBRACE ORDERED LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 608.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> ORDERED LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ORDERED LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size of ordered.

program: DATABLOCK LBRACE ORDERED LBRACK WHILE
##
## Ends in an error in state: 605.
##
## top_var_type -> ORDERED LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> ORDERED LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ORDERED LBRACK
##

Expected "[" expression "]" for size of ordered.

program: DATABLOCK LBRACE ORDERED WHILE
##
## Ends in an error in state: 604.
##
## top_var_type -> ORDERED . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> ORDERED . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ORDERED
##

Expected "[" expression "]" for size of ordered.

program: DATABLOCK LBRACE POSITIVEORDERED LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 600.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> POSITIVEORDERED LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## POSITIVEORDERED LBRACK non_lhs
##

Expected "[" expression "]" for size of positive_ordered.

program: DATABLOCK LBRACE POSITIVEORDERED LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 602.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> POSITIVEORDERED LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## POSITIVEORDERED LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size of positive_ordered.

program: DATABLOCK LBRACE POSITIVEORDERED LBRACK WHILE
##
## Ends in an error in state: 599.
##
## top_var_type -> POSITIVEORDERED LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> POSITIVEORDERED LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## POSITIVEORDERED LBRACK
##

Expected "[" expression "]" for size of positive_ordered.

program: DATABLOCK LBRACE POSITIVEORDERED WHILE
##
## Ends in an error in state: 598.
##
## top_var_type -> POSITIVEORDERED . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> POSITIVEORDERED . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## POSITIVEORDERED
##

Expected "[" expression "]" for size of positive_ordered.

program: DATABLOCK LBRACE RBRACE WHILE
##
## Ends in an error in state: 665.
##
## program -> option(function_block) option(data_block) . option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block) option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block)
##

Expected "transformed data {" or "parameters {" or "transformed parameters {" or "model {" or "generated quantities {".

program: DATABLOCK LBRACE REAL IDENTIFIER SEMICOLON WHILE
##
## Ends in an error in state: 661.
##
## list(top_var_decl_no_assign) -> top_var_decl_no_assign . list(top_var_decl_no_assign) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## top_var_decl_no_assign
##

Only top-level variable declarations allowed in data and parameters blocks.

program: DATABLOCK LBRACE REAL TRUNCATE WHILE
##
## Ends in an error in state: 658.
##
## top_var_decl_no_assign -> top_var_type decl_identifier . option(dims) SEMICOLON [ VECTOR UNITVECTOR SIMPLEX ROWVECTOR REAL RBRACE POSITIVEORDERED ORDERED MATRIX INT COVMATRIX CORRMATRIX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ]
##
## The known suffix of the stack is as follows:
## top_var_type decl_identifier
##

Only top-level variable declarations are allowed in data and parameter blocks.

program: DATABLOCK LBRACE REAL LBRACE
##
## Ends in an error in state: 596.
##
## top_var_type -> REAL . type_constraint [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## REAL
##

Identifier expected after type in top-level variable declaration.

program: DATABLOCK LBRACE ROWVECTOR LABRACK MULTIPLIER ASSIGN IDENTIFIER RABRACK WHILE
##
## Ends in an error in state: 590.
##
## top_var_type -> ROWVECTOR type_constraint . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> ROWVECTOR type_constraint . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR type_constraint
##

Expected identifier as part of top-level variable declaration.

program: DATABLOCK LBRACE ROWVECTOR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 592.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> ROWVECTOR type_constraint LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR type_constraint LBRACK non_lhs
##

Expected "[" expression "]" for size declaration of row_vector.

program: DATABLOCK LBRACE ROWVECTOR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 594.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> ROWVECTOR type_constraint LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR type_constraint LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size declaration of row_vector.

program: DATABLOCK LBRACE ROWVECTOR LBRACK WHILE
##
## Ends in an error in state: 591.
##
## top_var_type -> ROWVECTOR type_constraint LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> ROWVECTOR type_constraint LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR type_constraint LBRACK
##

Expected "[" expression "]" for size declaration of row_vector.

program: DATABLOCK LBRACE ROWVECTOR WHILE
##
## Ends in an error in state: 589.
##
## top_var_type -> ROWVECTOR . type_constraint LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> ROWVECTOR . type_constraint LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR
##

Expected "[" expression "]" for size declaration of row_vector.

program: DATABLOCK LBRACE SIMPLEX LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 585.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> SIMPLEX LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## SIMPLEX LBRACK non_lhs
##

Expected "[" expression "]" for size declaration of simplex.

program: DATABLOCK LBRACE SIMPLEX LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 587.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> SIMPLEX LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## SIMPLEX LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size declaration of simplex.

program: DATABLOCK LBRACE SIMPLEX LBRACK WHILE
##
## Ends in an error in state: 584.
##
## top_var_type -> SIMPLEX LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> SIMPLEX LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## SIMPLEX LBRACK
##

Expected "[" expression "]" for size declaration of simplex.

program: DATABLOCK LBRACE SIMPLEX WHILE
##
## Ends in an error in state: 583.
##
## top_var_type -> SIMPLEX . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> SIMPLEX . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## SIMPLEX
##

Expected "[" expression "]" for size declaration of simplex.

program: DATABLOCK LBRACE UNITVECTOR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 579.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> UNITVECTOR LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## UNITVECTOR LBRACK non_lhs
##

Expected "[" expression "]" for size declaration of unit_vector.

program: DATABLOCK LBRACE UNITVECTOR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 581.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> UNITVECTOR LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## UNITVECTOR LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Expected "[" expression "]" for size declaration of unit_vector.

program: DATABLOCK LBRACE UNITVECTOR LBRACK WHILE
##
## Ends in an error in state: 578.
##
## top_var_type -> UNITVECTOR LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> UNITVECTOR LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## UNITVECTOR LBRACK
##

Expected "[" expression "]" for size declaration of unit_vector.

program: DATABLOCK LBRACE UNITVECTOR WHILE
##
## Ends in an error in state: 577.
##
## top_var_type -> UNITVECTOR . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> UNITVECTOR . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## UNITVECTOR
##

Expected "[" expression "]" for size declaration of unit_vector.

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 547.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## offset_mult -> OFFSET ASSIGN constr_expression . COMMA MULTIPLIER ASSIGN constr_expression [ RABRACK ]
## offset_mult -> OFFSET ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN constr_expression
##

Expected "offset = " expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN TRUNCATE COMMA MULTIPLIER ASSIGN TRUNCATE COMMA
##
## Ends in an error in state: 551.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## offset_mult -> OFFSET ASSIGN constr_expression COMMA MULTIPLIER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN constr_expression COMMA MULTIPLIER ASSIGN constr_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 513, spurious reduction of production constr_expression -> identifier 
##

Expected ">" after "multiplier = " expression.

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN TRUNCATE COMMA MULTIPLIER ASSIGN WHILE
##
## Ends in an error in state: 550.
##
## offset_mult -> OFFSET ASSIGN constr_expression COMMA MULTIPLIER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN constr_expression COMMA MULTIPLIER ASSIGN
##

Expected "multiplier = " expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN TRUNCATE COMMA MULTIPLIER WHILE
##
## Ends in an error in state: 549.
##
## offset_mult -> OFFSET ASSIGN constr_expression COMMA MULTIPLIER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN constr_expression COMMA MULTIPLIER
##

Expected "multiplier = " expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN TRUNCATE COMMA WHILE
##
## Ends in an error in state: 548.
##
## offset_mult -> OFFSET ASSIGN constr_expression COMMA . MULTIPLIER ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN constr_expression COMMA
##

Expected ">" or ", multiplier = " expression (not containing binary logical operators) ">" after "offset = " expression.

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET ASSIGN WHILE
##
## Ends in an error in state: 546.
##
## offset_mult -> OFFSET ASSIGN . constr_expression COMMA MULTIPLIER ASSIGN constr_expression [ RABRACK ]
## offset_mult -> OFFSET ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET ASSIGN
##

Expected "offset = " expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK OFFSET WHILE
##
## Ends in an error in state: 545.
##
## offset_mult -> OFFSET . ASSIGN constr_expression COMMA MULTIPLIER ASSIGN constr_expression [ RABRACK ]
## offset_mult -> OFFSET . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## OFFSET
##

Expected "offset = " expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 561.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## range -> LOWER ASSIGN constr_expression . COMMA UPPER ASSIGN constr_expression [ RABRACK ]
## range -> LOWER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN constr_expression
##

">" or ", upper = expression (not containing binary logical operators) ">" expected after specifying lower bound for type.

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN TRUNCATE COMMA UPPER ASSIGN TRUNCATE COMMA
##
## Ends in an error in state: 565.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## range -> LOWER ASSIGN constr_expression COMMA UPPER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN constr_expression COMMA UPPER ASSIGN constr_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 513, spurious reduction of production constr_expression -> identifier 
##

Expected ">" after "upper = " expression.

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN TRUNCATE COMMA UPPER ASSIGN WHILE
##
## Ends in an error in state: 564.
##
## range -> LOWER ASSIGN constr_expression COMMA UPPER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN constr_expression COMMA UPPER ASSIGN
##

Expected expression (not containing binary logical operators) after "upper = ".

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN TRUNCATE COMMA UPPER WHILE
##
## Ends in an error in state: 563.
##
## range -> LOWER ASSIGN constr_expression COMMA UPPER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN constr_expression COMMA UPPER
##

Expected "=" expression (not containing binary logical operators) after "upper".

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN TRUNCATE COMMA WHILE
##
## Ends in an error in state: 562.
##
## range -> LOWER ASSIGN constr_expression COMMA . UPPER ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN constr_expression COMMA
##

"upper =" expression (not containing binary logical operators) ">" expected after "<lower =" expression "," in top-level variable declaration.

program: DATABLOCK LBRACE VECTOR LABRACK LOWER ASSIGN WHILE
##
## Ends in an error in state: 560.
##
## range -> LOWER ASSIGN . constr_expression COMMA UPPER ASSIGN constr_expression [ RABRACK ]
## range -> LOWER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER ASSIGN
##

An expression (not containing binary logical operators) is expected for type lower bound.

program: DATABLOCK LBRACE VECTOR LABRACK LOWER WHILE
##
## Ends in an error in state: 559.
##
## range -> LOWER . ASSIGN constr_expression COMMA UPPER ASSIGN constr_expression [ RABRACK ]
## range -> LOWER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## LOWER
##

Expected "=" expression (not containing binary logical operators), after "lower".

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN IDENTIFIER RABRACK WHILE
##
## Ends in an error in state: 570.
##
## top_var_type -> VECTOR type_constraint . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> VECTOR type_constraint . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR type_constraint
##

Expected "[" expression "]" for vector size.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN WHILE
##
## Ends in an error in state: 553.
##
## offset_mult -> MULTIPLIER ASSIGN . constr_expression COMMA OFFSET ASSIGN constr_expression [ RABRACK ]
## offset_mult -> MULTIPLIER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN
##

Expected expression (not containing binary logical operators) after "multiplier =".

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER WHILE
##
## Ends in an error in state: 552.
##
## offset_mult -> MULTIPLIER . ASSIGN constr_expression COMMA OFFSET ASSIGN constr_expression [ RABRACK ]
## offset_mult -> MULTIPLIER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER
##

Expected "=" expression (not containing binary logical operators) ">" after "multiplier".

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN BANG REALNUMERAL WHILE
##
## Ends in an error in state: 514.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> BANG constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## BANG constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN BANG WHILE
##
## Ends in an error in state: 512.
##
## constr_expression -> BANG . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## BANG
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN MINUS REALNUMERAL WHILE
##
## Ends in an error in state: 522.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> MINUS constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## MINUS constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN MINUS WHILE
##
## Ends in an error in state: 511.
##
## constr_expression -> MINUS . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN PLUS REALNUMERAL WHILE
##
## Ends in an error in state: 523.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> PLUS constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## PLUS constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN PLUS WHILE
##
## Ends in an error in state: 510.
##
## constr_expression -> PLUS . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## PLUS
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE DIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 538.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression DIVIDE constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression DIVIDE constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE DIVIDE WHILE
##
## Ends in an error in state: 537.
##
## constr_expression -> constr_expression DIVIDE . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression DIVIDE
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE ELTDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 536.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression ELTDIVIDE constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression ELTDIVIDE constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE ELTDIVIDE WHILE
##
## Ends in an error in state: 535.
##
## constr_expression -> constr_expression ELTDIVIDE . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression ELTDIVIDE
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE ELTTIMES REALNUMERAL WHILE
##
## Ends in an error in state: 534.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression ELTTIMES constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression ELTTIMES constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE ELTTIMES WHILE
##
## Ends in an error in state: 533.
##
## constr_expression -> constr_expression ELTTIMES . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression ELTTIMES
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE HAT REALNUMERAL WHILE
##
## Ends in an error in state: 520.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression HAT constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression HAT constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE HAT WHILE
##
## Ends in an error in state: 519.
##
## constr_expression -> constr_expression HAT . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression HAT
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE LBRACK WHILE
##
## Ends in an error in state: 516.
##
## constr_expression -> constr_expression LBRACK . indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression LBRACK
##

Ill-formed expression. Expected expression followed by "]".

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE LDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 528.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression LDIVIDE constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression LDIVIDE constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE LDIVIDE WHILE
##
## Ends in an error in state: 527.
##
## constr_expression -> constr_expression LDIVIDE . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression LDIVIDE
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE MINUS REALNUMERAL WHILE
##
## Ends in an error in state: 540.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression MINUS constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression MINUS constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE MINUS WHILE
##
## Ends in an error in state: 539.
##
## constr_expression -> constr_expression MINUS . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression MINUS
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE MODULO REALNUMERAL WHILE
##
## Ends in an error in state: 532.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression MODULO constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression MODULO constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE MODULO WHILE
##
## Ends in an error in state: 531.
##
## constr_expression -> constr_expression MODULO . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression MODULO
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE PLUS REALNUMERAL WHILE
##
## Ends in an error in state: 530.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression PLUS constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression PLUS constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE PLUS WHILE
##
## Ends in an error in state: 529.
##
## constr_expression -> constr_expression PLUS . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression PLUS
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE TIMES REALNUMERAL WHILE
##
## Ends in an error in state: 526.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression TIMES constr_expression . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression TIMES constr_expression
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE TIMES WHILE
##
## Ends in an error in state: 525.
##
## constr_expression -> constr_expression TIMES . constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## constr_expression TIMES
##

Ill-formed expression. Expected expression (not containing binary logical operators).

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE WHILE
##
## Ends in an error in state: 513.
##
## common_expression -> identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## common_expression -> identifier . LPAREN lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## common_expression -> identifier . LPAREN non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> identifier . [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
##
## The known suffix of the stack is as follows:
## identifier
##

Expression expected. Ill-formed expression. Suggested alternatives: a standalone identifier, a function application, an identifier followed by an operator or an identifier followed by an index.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN WHILE
##
## Ends in an error in state: 509.
##
## range -> UPPER ASSIGN . constr_expression COMMA LOWER ASSIGN constr_expression [ RABRACK ]
## range -> UPPER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN
##

Expression (not containing binary logical operators) expected after "upper =". Ill-formed expression.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER WHILE
##
## Ends in an error in state: 508.
##
## range -> UPPER . ASSIGN constr_expression COMMA LOWER ASSIGN constr_expression [ RABRACK ]
## range -> UPPER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER
##

Expect "=" expression ">" after seeing "upper".

program: DATABLOCK LBRACE VECTOR LABRACK WHILE
##
## Ends in an error in state: 507.
##
## range_constraint -> LABRACK . range RABRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER LBRACK INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## type_constraint -> LABRACK . offset_mult RABRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER LBRACK INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## LABRACK
##

We expect to see "lower =", "upper =", "offset =" or "multiplier =" followed by an expression after "<". 

program: DATABLOCK LBRACE VECTOR LBRACK INTNUMERAL RBRACK HAT
##
## Ends in an error in state: 657.
##
## top_var_decl_no_assign -> top_var_type . decl_identifier option(dims) SEMICOLON [ VECTOR UNITVECTOR SIMPLEX ROWVECTOR REAL RBRACE POSITIVEORDERED ORDERED MATRIX INT COVMATRIX CORRMATRIX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ]
##
## The known suffix of the stack is as follows:
## top_var_type
##

We expect to see an identifier after a sized type.

program: DATABLOCK LBRACE VECTOR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 572.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> VECTOR type_constraint LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR type_constraint LBRACK non_lhs
##

"[" expression "]" expected for vector size.

program: DATABLOCK LBRACE VECTOR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 574.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## top_var_type -> VECTOR type_constraint LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR type_constraint LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "]" expected for vector size.

program: DATABLOCK LBRACE VECTOR LBRACK WHILE
##
## Ends in an error in state: 571.
##
## top_var_type -> VECTOR type_constraint LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> VECTOR type_constraint LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR type_constraint LBRACK
##

"[" expression "]" expected for vector size.

program: DATABLOCK LBRACE VECTOR WHILE
##
## Ends in an error in state: 506.
##
## top_var_type -> VECTOR . type_constraint LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## top_var_type -> VECTOR . type_constraint LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR
##

"[" expression "]" expected for vector size.

program: DATABLOCK LBRACE WHILE
##
## Ends in an error in state: 505.
##
## data_block -> DATABLOCK LBRACE . list(top_var_decl_no_assign) RBRACE [ TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## DATABLOCK LBRACE
##

Expected top-level variable declaration or "}".

program: DATABLOCK WHILE
##
## Ends in an error in state: 504.
##
## data_block -> DATABLOCK . LBRACE list(top_var_decl_no_assign) RBRACE [ TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## DATABLOCK
##

"{" followed by a list of top-level variable declarations is expected after seeing "data".

program: FUNCTIONBLOCK LBRACE RBRACE COVMATRIX
##
## Ends in an error in state: 503.
##
## program -> option(function_block) . option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block) option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block)
##

Expected "data {" or "transformed data {" or "parameters {" or "transformed parameters {" or "model {" or "generated quantities {".

program: FUNCTIONBLOCK LBRACE VECTOR LBRACK COMMA WHILE
##
## Ends in an error in state: 91.
##
## list(COMMA) -> COMMA . list(COMMA) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## COMMA
##

List of commas expected.

program: FUNCTIONBLOCK LBRACE VECTOR LBRACK WHILE
##
## Ends in an error in state: 90.
##
## unsized_dims -> LBRACK . list(COMMA) RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

"[" (list of commas) "]" expected in unsized return type of function definition.

program: FUNCTIONBLOCK LBRACE VECTOR LBRACE
##
## Ends in an error in state: 89.
##
## unsized_type -> basic_type . option(unsized_dims) [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## basic_type
##

Either a number of unsized dimensions is expected as part of a function return type or an identifier is expected as a function name.

program: FUNCTIONBLOCK LBRACE VOID IDENTIFIER LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 500.
##
## list(function_def) -> function_def . list(function_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## function_def
##

A "}" or a function definition/declaration is expected.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN DATABLOCK WHILE
##
## Ends in an error in state: 86.
##
## arg_decl -> option(DATABLOCK) . unsized_type decl_identifier [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## option(DATABLOCK)
##

An identifier is expected as a function argument name.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN RPAREN VOID
##
## Ends in an error in state: 98.
##
## function_def -> return_type decl_identifier LPAREN loption(separated_nonempty_list(COMMA,arg_decl)) RPAREN . statement [ VOID VECTOR ROWVECTOR REAL RBRACE MATRIX INT ]
##
## The known suffix of the stack is as follows:
## return_type decl_identifier LPAREN loption(separated_nonempty_list(COMMA,arg_decl)) RPAREN
##

Either "{" statement "}" is expected for a function definition or ";" for a function forward declaration.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN VECTOR IDENTIFIER COMMA WHILE
##
## Ends in an error in state: 496.
##
## separated_nonempty_list(COMMA,arg_decl) -> arg_decl COMMA . separated_nonempty_list(COMMA,arg_decl) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## arg_decl COMMA
##

An argument declaration (unsized type followed by identifier) is expected.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN VECTOR IDENTIFIER WHILE
##
## Ends in an error in state: 495.
##
## separated_nonempty_list(COMMA,arg_decl) -> arg_decl . [ RPAREN ]
## separated_nonempty_list(COMMA,arg_decl) -> arg_decl . COMMA separated_nonempty_list(COMMA,arg_decl) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## arg_decl
##

"," or ")" expected after function argument declaration.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN VECTOR LBRACK RBRACK LBRACK
##
## Ends in an error in state: 87.
##
## arg_decl -> option(DATABLOCK) unsized_type . decl_identifier [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## option(DATABLOCK) unsized_type
##

An identifier is expected as a function argument name.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE LPAREN WHILE
##
## Ends in an error in state: 83.
##
## function_def -> return_type decl_identifier LPAREN . loption(separated_nonempty_list(COMMA,arg_decl)) RPAREN statement [ VOID VECTOR ROWVECTOR REAL RBRACE MATRIX INT ]
##
## The known suffix of the stack is as follows:
## return_type decl_identifier LPAREN
##

(Non-void) type expected in function argument declaration.

program: FUNCTIONBLOCK LBRACE VOID TRUNCATE WHILE
##
## Ends in an error in state: 82.
##
## function_def -> return_type decl_identifier . LPAREN loption(separated_nonempty_list(COMMA,arg_decl)) RPAREN statement [ VOID VECTOR ROWVECTOR REAL RBRACE MATRIX INT ]
##
## The known suffix of the stack is as follows:
## return_type decl_identifier
##

"(" expected after function name.

program: FUNCTIONBLOCK LBRACE VOID LBRACK
##
## Ends in an error in state: 10.
##
## function_def -> return_type . decl_identifier LPAREN loption(separated_nonempty_list(COMMA,arg_decl)) RPAREN statement [ VOID VECTOR ROWVECTOR REAL RBRACE MATRIX INT ]
##
## The known suffix of the stack is as follows:
## return_type
##

An identifier is expected as a function name.

program: FUNCTIONBLOCK LBRACE WHILE
##
## Ends in an error in state: 2.
##
## function_block -> FUNCTIONBLOCK LBRACE . list(function_def) RBRACE [ TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF DATABLOCK ]
##
## The known suffix of the stack is as follows:
## FUNCTIONBLOCK LBRACE
##

Function forward declaration, definition or "}" expected after "functions {".

program: FUNCTIONBLOCK WHILE
##
## Ends in an error in state: 1.
##
## function_block -> FUNCTIONBLOCK . LBRACE list(function_def) RBRACE [ TRANSFORMEDPARAMETERSBLOCK TRANSFORMEDDATABLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF DATABLOCK ]
##
## The known suffix of the stack is as follows:
## FUNCTIONBLOCK
##

"{" expected after "functions".

program: GENERATEDQUANTITIESBLOCK LBRACE RBRACE ELTTIMESASSIGN
##
## Ends in an error in state: 702.
##
## program -> option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block) option(generated_quantities_block) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block) option(generated_quantities_block)
##

Expected end of file after end of generated quantities block.

program: GENERATEDQUANTITIESBLOCK LBRACE VOID
##
## Ends in an error in state: 699.
##
## generated_quantities_block -> GENERATEDQUANTITIESBLOCK LBRACE . list(top_vardecl_or_statement) RBRACE [ EOF ]
##
## The known suffix of the stack is as follows:
## GENERATEDQUANTITIESBLOCK LBRACE
##

Variable declaration or statement or "}" expected in generated quantities block.

program: GENERATEDQUANTITIESBLOCK WHILE
##
## Ends in an error in state: 698.
##
## generated_quantities_block -> GENERATEDQUANTITIESBLOCK . LBRACE list(top_vardecl_or_statement) RBRACE [ EOF ]
##
## The known suffix of the stack is as follows:
## GENERATEDQUANTITIESBLOCK
##

Expected "{" after block keyword.

program: MODELBLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA REALNUMERAL WHILE
##
## Ends in an error in state: 339.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> MATRIX LBRACK non_lhs COMMA non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK non_lhs COMMA non_lhs
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA TRUNCATE TILDE
##
## Ends in an error in state: 341.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> MATRIX LBRACK non_lhs COMMA lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK non_lhs COMMA lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK REALNUMERAL COMMA WHILE
##
## Ends in an error in state: 338.
##
## sized_basic_type -> MATRIX LBRACK non_lhs COMMA . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK non_lhs COMMA . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK non_lhs COMMA
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 337.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## sized_basic_type -> MATRIX LBRACK non_lhs . COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK non_lhs . COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK non_lhs
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA REALNUMERAL WHILE
##
## Ends in an error in state: 345.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> MATRIX LBRACK lhs COMMA non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK lhs COMMA non_lhs
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA TRUNCATE TILDE
##
## Ends in an error in state: 347.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> MATRIX LBRACK lhs COMMA lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK lhs COMMA lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK TRUNCATE COMMA WHILE
##
## Ends in an error in state: 344.
##
## sized_basic_type -> MATRIX LBRACK lhs COMMA . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK lhs COMMA . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK lhs COMMA
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 343.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## sized_basic_type -> MATRIX LBRACK lhs . COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK lhs . COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX LBRACK WHILE
##
## Ends in an error in state: 336.
##
## sized_basic_type -> MATRIX LBRACK . lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK . lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK . non_lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX LBRACK . non_lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX LBRACK
##

"[" expression "," expression "]" expected for matrix sizes.

program: MODELBLOCK LBRACE MATRIX WHILE
##
## Ends in an error in state: 335.
##
## sized_basic_type -> MATRIX . LBRACK lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX . LBRACK lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX . LBRACK non_lhs COMMA lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> MATRIX . LBRACK non_lhs COMMA non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## MATRIX
##

"[" expression "," expression "]" expected after "matrix" in local (or model block) variable declaration. (No transformations/constraints allowed.)

program: MODELBLOCK LBRACE RBRACE ELTTIMESASSIGN
##
## Ends in an error in state: 697.
##
## program -> option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block) . option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) option(model_block)
##

Expected "generated quantities {" or end of file after end of model block.

program: MODELBLOCK LBRACE REAL TRUNCATE ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 480.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## option(pair(ASSIGN,expression)) -> ASSIGN non_lhs . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSIGN non_lhs
##

Ill-formed expression. Expression followed by ";" expected after "=".

program: MODELBLOCK LBRACE REAL TRUNCATE ASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 481.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## option(pair(ASSIGN,expression)) -> ASSIGN lhs . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expression followed by ";" expected after "=".

program: MODELBLOCK LBRACE REAL TRUNCATE ASSIGN WHILE
##
## Ends in an error in state: 479.
##
## option(pair(ASSIGN,expression)) -> ASSIGN . lhs [ SEMICOLON ]
## option(pair(ASSIGN,expression)) -> ASSIGN . non_lhs [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSIGN
##

Ill-formed expression. Expression followed by ";" expected after "=".

program: MODELBLOCK LBRACE REAL TRUNCATE LBRACK TRUNCATE RBRACE
##
## Ends in an error in state: 476.
##
## dims -> LBRACK separated_nonempty_list(COMMA,expression) . RBRACK [ SEMICOLON ASSIGN ]
##
## The known suffix of the stack is as follows:
## LBRACK separated_nonempty_list(COMMA,expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
##

Ill-formed array sizes. "[" (non-empty comma separated list of expressions) "]" expected to specify array sizes.

program: MODELBLOCK LBRACE REAL TRUNCATE LBRACK WHILE
##
## Ends in an error in state: 475.
##
## dims -> LBRACK . separated_nonempty_list(COMMA,expression) RBRACK [ SEMICOLON ASSIGN ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Ill-formed array sizes. "[" (non-empty comma separated list of expressions) "]" expected to specify array sizes.

program: MODELBLOCK LBRACE REAL TRUNCATE WHILE
##
## Ends in an error in state: 474.
##
## var_decl -> sized_basic_type decl_identifier . option(dims) option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
##
## The known suffix of the stack is as follows:
## sized_basic_type decl_identifier
##

";" or plain assignment expected after variable declaration.

program: MODELBLOCK LBRACE REAL LBRACK
##
## Ends in an error in state: 473.
##
## var_decl -> sized_basic_type . decl_identifier option(dims) option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
##
## The known suffix of the stack is as follows:
## sized_basic_type
##

Identifier expected after sized type in local (or model block) variable declaration. (No transformations/constraints allowed.)

program: MODELBLOCK LBRACE ROWVECTOR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 330.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> ROWVECTOR LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR LBRACK non_lhs
##

"[" expression "]" expected for row_vector sizes.

program: MODELBLOCK LBRACE ROWVECTOR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 332.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> ROWVECTOR LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "]" expected for row_vector sizes.

program: MODELBLOCK LBRACE ROWVECTOR LBRACK WHILE
##
## Ends in an error in state: 329.
##
## sized_basic_type -> ROWVECTOR LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> ROWVECTOR LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR LBRACK
##

"[" expression "]" expected for row_vector sizes.

program: MODELBLOCK LBRACE ROWVECTOR WHILE
##
## Ends in an error in state: 328.
##
## sized_basic_type -> ROWVECTOR . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> ROWVECTOR . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR
##

"[" expression"]" expected after "row_vector" in local (or model block) variable declaration. (No transformations/constraints allowed.)

program: MODELBLOCK LBRACE SEMICOLON VOID
##
## Ends in an error in state: 470.
##
## list(vardecl_or_statement) -> vardecl_or_statement . list(vardecl_or_statement) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## vardecl_or_statement
##

Variable declaration, statement or "}" expected.

program: MODELBLOCK LBRACE VECTOR LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 324.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> VECTOR LBRACK non_lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR LBRACK non_lhs
##

"[" expression "]" expected for vector sizes.

program: MODELBLOCK LBRACE VECTOR LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 326.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## sized_basic_type -> VECTOR LBRACK lhs . RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR LBRACK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

"[" expression "]" expected for vector sizes.

program: MODELBLOCK LBRACE VECTOR LBRACK WHILE
##
## Ends in an error in state: 323.
##
## sized_basic_type -> VECTOR LBRACK . lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> VECTOR LBRACK . non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR LBRACK
##

"[" expression "]" expected for vector sizes.

program: MODELBLOCK LBRACE VECTOR WHILE
##
## Ends in an error in state: 322.
##
## sized_basic_type -> VECTOR . LBRACK lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
## sized_basic_type -> VECTOR . LBRACK non_lhs RBRACK [ WHILE VOID VECTOR UPPER UNITVECTOR TRUNCATE TARGET SIMPLEX ROWVECTOR RETURN REJECT REAL PRINT POSITIVEORDERED PARAMETERSBLOCK ORDERED OFFSET MULTIPLIER MODELBLOCK MATRIX LOWER INT IN IF IDENTIFIER GETLP FUNCTIONBLOCK FOR ELSE DATABLOCK COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK ]
##
## The known suffix of the stack is as follows:
## VECTOR
##

"[" expression  "]" expected after "vector" in local (or model block) variable declaration. (No transformations/constraints allowed.)

program: MODELBLOCK LBRACE VOID
##
## Ends in an error in state: 694.
##
## model_block -> MODELBLOCK LBRACE . list(vardecl_or_statement) RBRACE [ GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## MODELBLOCK LBRACE
##

Variable declaration, statement or "}" expected.

program: MODELBLOCK WHILE
##
## Ends in an error in state: 693.
##
## model_block -> MODELBLOCK . LBRACE list(vardecl_or_statement) RBRACE [ GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## MODELBLOCK
##

Expected "{" after "model".

program: PARAMETERSBLOCK LBRACE RBRACE ELTTIMESASSIGN
##
## Ends in an error in state: 686.
##
## program -> option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) . option(transformed_parameters_block) option(model_block) option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block) option(transformed_data_block) option(parameters_block)
##

"transformed parameters {", "model {" or "generated quantities {" expected after end of parameters block.

program: PARAMETERSBLOCK LBRACE WHILE
##
## Ends in an error in state: 682.
##
## parameters_block -> PARAMETERSBLOCK LBRACE . list(top_var_decl_no_assign) RBRACE [ TRANSFORMEDPARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## PARAMETERSBLOCK LBRACE
##

Expected top-level variable declaration or "}".

program: PARAMETERSBLOCK WHILE
##
## Ends in an error in state: 681.
##
## parameters_block -> PARAMETERSBLOCK . LBRACE list(top_var_decl_no_assign) RBRACE [ TRANSFORMEDPARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## PARAMETERSBLOCK
##

Expected "{" after "parameters".

program: TRANSFORMEDDATABLOCK LBRACE BANG REALNUMERAL WHILE
##
## Ends in an error in state: 115.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> BANG non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## BANG non_lhs
##

Ill-formed expression. Expression expected after "!". 

program: TRANSFORMEDDATABLOCK LBRACE BANG TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 277.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> BANG lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## BANG lhs
##

Ill-formed expression. Expression expected after "!".

program: TRANSFORMEDDATABLOCK LBRACE BANG WHILE
##
## Ends in an error in state: 114.
##
## non_lhs -> BANG . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> BANG . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## BANG
##

Ill-formed expression. Expression expected after "!".

program: TRANSFORMEDDATABLOCK LBRACE BREAK WHILE
##
## Ends in an error in state: 370.
##
## atomic_statement -> BREAK . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## BREAK
##

Expected ";" after "break". 

program: TRANSFORMEDDATABLOCK LBRACE CONTINUE WHILE
##
## Ends in an error in state: 368.
##
## atomic_statement -> CONTINUE . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## CONTINUE
##

Expected ";" after "continue". 

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL COLON REALNUMERAL RPAREN VOID
##
## Ends in an error in state: 447.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON non_lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs COLON non_lhs RPAREN
##

Ill-formed statement. Expected statement after ")"  for the loop body of the for loop..

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL COLON REALNUMERAL WHILE
##
## Ends in an error in state: 446.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON non_lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs COLON non_lhs
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL COLON TRUNCATE RPAREN VOID
##
## Ends in an error in state: 450.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs COLON lhs RPAREN
##

Ill-formed statement. Expected statement after ")"  for the loop body of the for loop.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL COLON TRUNCATE TILDE
##
## Ends in an error in state: 449.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs COLON lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL COLON WHILE
##
## Ends in an error in state: 445.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON . lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN non_lhs COLON . non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs COLON
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL RPAREN VOID
##
## Ends in an error in state: 367.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs RPAREN
##

Ill-formed statement. Expected statement after ")" for the loop body of the foreach loop.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN REALNUMERAL WHILE
##
## Ends in an error in state: 366.
##
## nested_statement -> FOR LPAREN identifier IN non_lhs . COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN non_lhs . COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN non_lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN non_lhs
##

Ill-formed expression. Expected expression after "for (" identifier "in".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE COLON REALNUMERAL RPAREN VOID
##
## Ends in an error in state: 457.
##
## nested_statement -> FOR LPAREN identifier IN lhs COLON non_lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs COLON non_lhs RPAREN
##

Ill-formed statement. Expected statement after ")" for the loop body of the for loop.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE COLON REALNUMERAL WHILE
##
## Ends in an error in state: 456.
##
## nested_statement -> FOR LPAREN identifier IN lhs COLON non_lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs COLON non_lhs
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE COLON TRUNCATE RPAREN VOID
##
## Ends in an error in state: 460.
##
## nested_statement -> FOR LPAREN identifier IN lhs COLON lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs COLON lhs RPAREN
##

Ill-formed statement. Expected statement after ")" for the loop body of the for loop.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE COLON TRUNCATE TILDE
##
## Ends in an error in state: 459.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## nested_statement -> FOR LPAREN identifier IN lhs COLON lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs COLON lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE COLON WHILE
##
## Ends in an error in state: 455.
##
## nested_statement -> FOR LPAREN identifier IN lhs COLON . lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN lhs COLON . non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs COLON
##

Ill-formed expression. Expected expression followed by ")" after "for (" identifier "in" expression ":".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE RPAREN VOID
##
## Ends in an error in state: 453.
##
## nested_statement -> FOR LPAREN identifier IN lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs RPAREN
##

Ill-formed statement. Expected statement after ")" for the loop body of the foreach loop.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN TRUNCATE TILDE
##
## Ends in an error in state: 452.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## nested_statement -> FOR LPAREN identifier IN lhs . COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN lhs . COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expected expression followed by ")" or ":" after "for (" identifier "in".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE IN WHILE
##
## Ends in an error in state: 365.
##
## nested_statement -> FOR LPAREN identifier IN . lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN . lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN . non_lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN . non_lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN . lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier IN . non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier IN
##

Ill-formed expression. Expected expression followed by ")" or ":" after "for (" identifier "in".

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN TRUNCATE WHILE
##
## Ends in an error in state: 364.
##
## nested_statement -> FOR LPAREN identifier . IN lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier . IN lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier . IN non_lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier . IN non_lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier . IN lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN identifier . IN non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN identifier
##

Expected "in" after loop identifier.

program: TRANSFORMEDDATABLOCK LBRACE FOR LPAREN WHILE
##
## Ends in an error in state: 363.
##
## nested_statement -> FOR LPAREN . identifier IN lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN . identifier IN lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN . identifier IN non_lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN . identifier IN non_lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN . identifier IN lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR LPAREN . identifier IN non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN
##

Expected (loop) identifier after "(".

program: TRANSFORMEDDATABLOCK LBRACE FOR WHILE
##
## Ends in an error in state: 362.
##
## nested_statement -> FOR . LPAREN identifier IN lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR . LPAREN identifier IN lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR . LPAREN identifier IN non_lhs COLON lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR . LPAREN identifier IN non_lhs COLON non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR . LPAREN identifier IN lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> FOR . LPAREN identifier IN non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## FOR
##

Expected "(" after "for".

program: TRANSFORMEDDATABLOCK LBRACE GETLP LPAREN WHILE
##
## Ends in an error in state: 112.
##
## common_expression -> GETLP LPAREN . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## GETLP LPAREN
##

Expected ")" after "get_lp(".

program: TRANSFORMEDDATABLOCK LBRACE GETLP WHILE
##
## Ends in an error in state: 111.
##
## common_expression -> GETLP . LPAREN RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## GETLP
##

Expected "()" after "get_lp".

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN REALNUMERAL RPAREN SEMICOLON ELSE VOID
##
## Ends in an error in state: 463.
##
## nested_statement -> IF LPAREN non_lhs RPAREN statement ELSE . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN non_lhs RPAREN statement ELSE
##

Ill-formed statement. Expected statement after "else".

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN REALNUMERAL RPAREN SEMICOLON UPPER
##
## Ends in an error in state: 462.
##
## nested_statement -> IF LPAREN non_lhs RPAREN statement . ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN non_lhs RPAREN statement . [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN non_lhs RPAREN statement
##

Ill-formed statement. Expected "else"  or statement or variable declaration or "}".

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN REALNUMERAL RPAREN VOID
##
## Ends in an error in state: 361.
##
## nested_statement -> IF LPAREN non_lhs RPAREN . statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN non_lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN non_lhs RPAREN
##

Ill-formed statement. Statement expected for true branch of conditional. 

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 360.
##
## nested_statement -> IF LPAREN non_lhs . RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN non_lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## IF LPAREN non_lhs
##

Expected ")" after test expression of conditional control flow construct.

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN TRUNCATE RPAREN SEMICOLON ELSE VOID
##
## Ends in an error in state: 468.
##
## nested_statement -> IF LPAREN lhs RPAREN statement ELSE . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN lhs RPAREN statement ELSE
##

Ill-formed statement. Expected statement after else.

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN TRUNCATE RPAREN SEMICOLON UPPER
##
## Ends in an error in state: 467.
##
## nested_statement -> IF LPAREN lhs RPAREN statement . ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN lhs RPAREN statement . [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN lhs RPAREN statement
##

Ill-formed statement. Expected "else" or statement or variable declaration or "}" after conditional true branch.

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN TRUNCATE RPAREN VOID
##
## Ends in an error in state: 466.
##
## nested_statement -> IF LPAREN lhs RPAREN . statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN lhs RPAREN
##

Ill-formed statement. Expected statement after ")" for true branch of conditional.

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 465.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## nested_statement -> IF LPAREN lhs . RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## IF LPAREN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expression expected after "(", for test of conditional control flow construct.

program: TRANSFORMEDDATABLOCK LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 359.
##
## nested_statement -> IF LPAREN . lhs RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN . non_lhs RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN . lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF LPAREN . non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

Expected expression for test of conditional control flow construct.

program: TRANSFORMEDDATABLOCK LBRACE IF WHILE
##
## Ends in an error in state: 358.
##
## nested_statement -> IF . LPAREN lhs RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF . LPAREN non_lhs RPAREN statement ELSE statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF . LPAREN lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> IF . LPAREN non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## IF
##

"(" expression ")" expected after "if".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB LPAREN REALNUMERAL RPAREN WHILE
##
## Ends in an error in state: 353.
##
## atomic_statement -> INCREMENTLOGPROB LPAREN non_lhs RPAREN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB LPAREN non_lhs RPAREN
##

Ill-formed statement. Expected ";" after ")".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 352.
##
## atomic_statement -> INCREMENTLOGPROB LPAREN non_lhs . RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB LPAREN non_lhs
##

Ill-formed statement. Expected expression followed by ");" after "(".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB LPAREN TRUNCATE RPAREN WHILE
##
## Ends in an error in state: 356.
##
## atomic_statement -> INCREMENTLOGPROB LPAREN lhs RPAREN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB LPAREN lhs RPAREN
##

Ill-formed statement. Expected ";" after ")".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 355.
##
## atomic_statement -> INCREMENTLOGPROB LPAREN lhs . RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB LPAREN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed statement. Expected expression followed by ");" after "(".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB LPAREN WHILE
##
## Ends in an error in state: 351.
##
## atomic_statement -> INCREMENTLOGPROB LPAREN . lhs RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> INCREMENTLOGPROB LPAREN . non_lhs RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB LPAREN
##

Ill-formed statement. Expected expression followed by ");" after "(".

program: TRANSFORMEDDATABLOCK LBRACE INCREMENTLOGPROB WHILE
##
## Ends in an error in state: 350.
##
## atomic_statement -> INCREMENTLOGPROB . LPAREN lhs RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> INCREMENTLOGPROB . LPAREN non_lhs RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## INCREMENTLOGPROB
##

Ill-formed statement. Expected "(" followed by an expression and ");", after "increment_log_prob".

program: TRANSFORMEDDATABLOCK LBRACE LBRACE REALNUMERAL COMMA WHILE
##
## Ends in an error in state: 244.
##
## separated_nonempty_list(COMMA,expression) -> non_lhs COMMA . separated_nonempty_list(COMMA,expression) [ RPAREN RBRACK RBRACE ]
##
## The known suffix of the stack is as follows:
## non_lhs COMMA
##

Ill-formed expression. Expected a comma-separated list of expressions.

program: TRANSFORMEDDATABLOCK LBRACE LBRACE REALNUMERAL WHILE
##
## Ends in an error in state: 486.
##
## atomic_statement -> non_lhs . TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . [ RBRACE ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . COMMA separated_nonempty_list(COMMA,expression) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed phrase. Found an expression. This can be followed by a "~", a ",", a "}", a "[" or an infix or postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE LBRACE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 489.
##
## atomic_statement -> lhs . ASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ARROWASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ARROWASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . PLUSASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . PLUSASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . MINUSASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . MINUSASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . TIMESASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . TIMESASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . DIVIDEASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . DIVIDEASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ELTTIMESASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ELTTIMESASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ELTDIVIDEASSIGN lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . ELTDIVIDEASSIGN non_lhs SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## atomic_statement -> lhs . TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMESASSIGN TIMES TILDE RBRACE RABRACK QMARK PLUSASSIGN PLUS OR NEQUALS MODULO MINUSASSIGN MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE COMMA ASSIGN ARROWASSIGN AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## separated_nonempty_list(COMMA,expression) -> lhs . [ RBRACE ]
## separated_nonempty_list(COMMA,expression) -> lhs . COMMA separated_nonempty_list(COMMA,expression) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## lhs
##

Ill-formed phrase. Found an L-value. This can be followed by a "~", a ",", a "}", a "[" or an infix or postfix operator or an assignment operator.

program: TRANSFORMEDDATABLOCK LBRACE LBRACE VOID
##
## Ends in an error in state: 321.
##
## common_expression -> LBRACE . separated_nonempty_list(COMMA,expression) RBRACE [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## nested_statement -> LBRACE . list(vardecl_or_statement) RBRACE [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Ill-formed phrase. "{" should be followed by a statement, variable declaration or expression.

program: TRANSFORMEDDATABLOCK LBRACE LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 246.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . [ RPAREN RBRACK RBRACE ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . COMMA separated_nonempty_list(COMMA,expression) [ RPAREN RBRACK RBRACE ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed phrase. Found an expression. This can be followed by a ",", a "}", a ")", a "]", a "[" or an infix or postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE LBRACK TRUNCATE COMMA WHILE
##
## Ends in an error in state: 248.
##
## separated_nonempty_list(COMMA,expression) -> lhs COMMA . separated_nonempty_list(COMMA,expression) [ RPAREN RBRACK RBRACE ]
##
## The known suffix of the stack is as follows:
## lhs COMMA
##

Ill-formed expression. We expect a comma separated list of expressions.

program: TRANSFORMEDDATABLOCK LBRACE LBRACK TRUNCATE RPAREN
##
## Ends in an error in state: 280.
##
## common_expression -> LBRACK loption(separated_nonempty_list(COMMA,expression)) . RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACK loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed expression. We expect a comma separated list of expressions, followed by "]".

program: TRANSFORMEDDATABLOCK LBRACE LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 247.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## separated_nonempty_list(COMMA,expression) -> lhs . [ RPAREN RBRACK RBRACE ]
## separated_nonempty_list(COMMA,expression) -> lhs . COMMA separated_nonempty_list(COMMA,expression) [ RPAREN RBRACK RBRACE ]
##
## The known suffix of the stack is as follows:
## lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. We found an L-value. Parse failed on token after the L-value.

program: TRANSFORMEDDATABLOCK LBRACE LBRACK WHILE
##
## Ends in an error in state: 108.
##
## common_expression -> LBRACK . loption(separated_nonempty_list(COMMA,expression)) RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

Comma separated list of expressions followed by "]" expected after "[".

program: TRANSFORMEDDATABLOCK LBRACE LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 282.
##
## common_expression -> LPAREN non_lhs . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN non_lhs
##

Expression or range of expressions followed by ")" expected after "(".

program: TRANSFORMEDDATABLOCK LBRACE LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 284.
##
## common_expression -> LPAREN lhs . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## LPAREN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found "(" followed by expression. Expect a "[", "," or ")" or an infix or postfix operator. 

program: TRANSFORMEDDATABLOCK LBRACE LPAREN WHILE
##
## Ends in an error in state: 107.
##
## common_expression -> LPAREN . lhs RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## common_expression -> LPAREN . non_lhs RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

Expression expected after "(".

program: TRANSFORMEDDATABLOCK LBRACE MINUS REALNUMERAL WHILE
##
## Ends in an error in state: 286.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> MINUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## MINUS non_lhs
##

Ill-formed expression. Found an expression. Expect an infix or postfix operator or "["

program: TRANSFORMEDDATABLOCK LBRACE MINUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 287.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> MINUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## MINUS lhs
##

Ill-formed expression. Found an expression. Expect an infix or postfix operator or "[" or "~" or "]" or ";".

program: TRANSFORMEDDATABLOCK LBRACE MINUS WHILE
##
## Ends in an error in state: 106.
##
## non_lhs -> MINUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> MINUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

Ill-formed expression. Expect an expression after "-".

program: TRANSFORMEDDATABLOCK LBRACE PLUS REALNUMERAL WHILE
##
## Ends in an error in state: 288.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> PLUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## PLUS non_lhs
##

Ill-formed expression. Found an expression. Expect an infix or postfix operator or "[" or "~" or "]" or ";".

program: TRANSFORMEDDATABLOCK LBRACE PLUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 289.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> PLUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## PLUS lhs
##

Ill-formed expression. Found an expression. Expect an infix or postfix operator or "[" or "~" or "]" or ";".

program: TRANSFORMEDDATABLOCK LBRACE PLUS WHILE
##
## Ends in an error in state: 105.
##
## non_lhs -> PLUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> PLUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## PLUS
##

Ill-formed expression. Expect an expression after "+".

program: TRANSFORMEDDATABLOCK LBRACE PRINT LPAREN STRINGLITERAL WHILE
##
## Ends in an error in state: 318.
##
## atomic_statement -> PRINT LPAREN printables . RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## printables -> printables . COMMA printables [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN printables
##

Expected a comma-separated list of expressions or strings followed by ");" after "print(".

program: TRANSFORMEDDATABLOCK LBRACE PRINT LPAREN TRUNCATE RPAREN WHILE
##
## Ends in an error in state: 319.
##
## atomic_statement -> PRINT LPAREN printables RPAREN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN printables RPAREN
##

Expected a ";" after "print(...)".

program: TRANSFORMEDDATABLOCK LBRACE PRINT LPAREN WHILE
##
## Ends in an error in state: 317.
##
## atomic_statement -> PRINT LPAREN . printables RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## PRINT LPAREN
##

Expected a comma-separated list of expressions or strings followed by ");" after "print(".

program: TRANSFORMEDDATABLOCK LBRACE PRINT WHILE
##
## Ends in an error in state: 316.
##
## atomic_statement -> PRINT . LPAREN printables RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## PRINT
##

Expected "(" followed by a comma-separated list of expressions or strings followed by ");" after "print".

program: TRANSFORMEDDATABLOCK LBRACE RBRACE ELTTIMESASSIGN
##
## Ends in an error in state: 680.
##
## program -> option(function_block) option(data_block) option(transformed_data_block) . option(parameters_block) option(transformed_parameters_block) option(model_block) option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block) option(transformed_data_block)
##

Expected "parameters {", "transformed parameters {", "model {", "generated quantities {" or end-of-file after end of transformed data block.

program: TRANSFORMEDDATABLOCK LBRACE REAL TRUNCATE WHILE
##
## Ends in an error in state: 670.
##
## top_var_decl -> top_var_type decl_identifier . option(dims) option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## top_var_type decl_identifier
##

";" or plain assignment is expected after a top-level variable declaration.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL AND REALNUMERAL WHILE
##
## Ends in an error in state: 213.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs AND non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs AND non_lhs
##

Ill-formed phrase. Found expression "&&" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL AND TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 214.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs AND lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs AND lhs
##

Ill-formed phrase. Found expression "&&" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL AND WHILE
##
## Ends in an error in state: 212.
##
## non_lhs -> non_lhs AND . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs AND . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs AND
##

Ill-formed expression. Expected expression after expression followed by "&&".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL DIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 163.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs DIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs DIVIDE non_lhs
##

Ill-formed phrase. Found expression "/" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL DIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 164.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs DIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs DIVIDE lhs
##

Ill-formed phrase. Found expression "/" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL DIVIDE WHILE
##
## Ends in an error in state: 162.
##
## non_lhs -> non_lhs DIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs DIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs DIVIDE
##

Ill-formed expression. Expected expression after expression followed by "/".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 160.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTDIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTDIVIDE non_lhs
##

Ill-formed phrase. Found expression "./" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTDIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 161.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTDIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTDIVIDE lhs
##

Ill-formed phrase. Found expression "./" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTDIVIDE WHILE
##
## Ends in an error in state: 159.
##
## non_lhs -> non_lhs ELTDIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTDIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTDIVIDE
##

Ill-formed expression. Expected expression after expression followed by "./".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTTIMES REALNUMERAL WHILE
##
## Ends in an error in state: 156.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTTIMES non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTTIMES non_lhs
##

Ill-formed phrase. Found expression ".*" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTTIMES TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 157.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTTIMES lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTTIMES lhs
##

Ill-formed phrase. Found expression ".*" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL ELTTIMES WHILE
##
## Ends in an error in state: 155.
##
## non_lhs -> non_lhs ELTTIMES . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs ELTTIMES . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs ELTTIMES
##

Ill-formed expression. Expected expression after expression followed by ".*".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL EQUALS REALNUMERAL WHILE
##
## Ends in an error in state: 210.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs EQUALS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs EQUALS non_lhs
##

Ill-formed phrase. Found expression "==" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL EQUALS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 211.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs EQUALS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs EQUALS lhs
##

Ill-formed phrase. Found expression "==" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL EQUALS WHILE
##
## Ends in an error in state: 209.
##
## non_lhs -> non_lhs EQUALS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs EQUALS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs EQUALS
##

Ill-formed expression. Expected expression after expression followed by "==".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL GEQ REALNUMERAL WHILE
##
## Ends in an error in state: 194.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs GEQ non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs GEQ non_lhs
##

Ill-formed phrase. Found expression ">=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL GEQ TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 195.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs GEQ lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs GEQ lhs
##

Ill-formed phrase. Found expression ">=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL GEQ WHILE
##
## Ends in an error in state: 193.
##
## non_lhs -> non_lhs GEQ . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs GEQ . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs GEQ
##

Ill-formed expression. Expected expression after expression followed by ">=".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL HAT REALNUMERAL WHILE
##
## Ends in an error in state: 125.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs HAT non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs HAT non_lhs
##

Ill-formed phrase. Found expression "^" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL HAT TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 126.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs HAT lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs HAT lhs
##

Ill-formed phrase. Found expression "^" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL HAT WHILE
##
## Ends in an error in state: 124.
##
## non_lhs -> non_lhs HAT . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs HAT . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs HAT
##

Ill-formed expression. Expected expression after expression followed by "^".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LABRACK REALNUMERAL WHILE
##
## Ends in an error in state: 191.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LABRACK non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LABRACK non_lhs
##

Ill-formed phrase. Found expression "<" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LABRACK TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 192.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LABRACK lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LABRACK lhs
##

Ill-formed phrase. Found expression "<" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LABRACK WHILE
##
## Ends in an error in state: 190.
##
## non_lhs -> non_lhs LABRACK . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LABRACK . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LABRACK
##

Ill-formed expression. Expected expression after expression followed by "<".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK COLON REALNUMERAL WHILE
##
## Ends in an error in state: 119.
##
## indexes -> COLON non_lhs . [ RBRACK COMMA ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## COLON non_lhs
##

Ill-formed phrase. Found ":" expression. We expect either an infix or postfix operator, or "," or or "[" or "]" next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK COLON TRUNCATE TILDE
##
## Ends in an error in state: 274.
##
## indexes -> COLON lhs . [ RBRACK COMMA ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## COLON lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found ":" expression. We expect either an infix or postfix operator, or "," or or "[" or "]" next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK COLON WHILE
##
## Ends in an error in state: 118.
##
## indexes -> COLON . [ RBRACK COMMA ]
## indexes -> COLON . lhs [ RBRACK COMMA ]
## indexes -> COLON . non_lhs [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## COLON
##

Ill-formed expression. Expected expression or "]" or "," after ":".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK COMMA WHILE
##
## Ends in an error in state: 270.
##
## indexes -> indexes COMMA . indexes [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## indexes COMMA
##

Expected index after indices followed by ",".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK REALNUMERAL COLON REALNUMERAL WHILE
##
## Ends in an error in state: 262.
##
## indexes -> non_lhs COLON non_lhs . [ RBRACK COMMA ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## non_lhs COLON non_lhs
##

Ill-formed phrase. Found expression ":" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK REALNUMERAL COLON TRUNCATE TILDE
##
## Ends in an error in state: 263.
##
## indexes -> non_lhs COLON lhs . [ RBRACK COMMA ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## non_lhs COLON lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found expression "<" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK REALNUMERAL COLON WHILE
##
## Ends in an error in state: 261.
##
## indexes -> non_lhs COLON . [ RBRACK COMMA ]
## indexes -> non_lhs COLON . lhs [ RBRACK COMMA ]
## indexes -> non_lhs COLON . non_lhs [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## non_lhs COLON
##

Ill-formed expression. Expected expression or "]" or "," after ":".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 129.
##
## indexes -> non_lhs . [ RBRACK COMMA ]
## indexes -> non_lhs . COLON [ RBRACK COMMA ]
## indexes -> non_lhs . COLON lhs [ RBRACK COMMA ]
## indexes -> non_lhs . COLON non_lhs [ RBRACK COMMA ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed phrase. Found expression. There are many options to continue the phrase after this: "[", "]", ",", ":", an infix operator, a postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK TRUNCATE COLON REALNUMERAL WHILE
##
## Ends in an error in state: 266.
##
## indexes -> lhs COLON non_lhs . [ RBRACK COMMA ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## lhs COLON non_lhs
##

Ill-formed phrase. Found expression ":" expression. There are many options to continue the phrase after this: "[", "]", ",", ":", an infix operator, a postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK TRUNCATE COLON TRUNCATE TILDE
##
## Ends in an error in state: 267.
##
## indexes -> lhs COLON lhs . [ RBRACK COMMA ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## lhs COLON lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found expression ":" expression. There are many options to continue the phrase after this: "[", "]", ",", ":", an infix operator, a postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK TRUNCATE COLON WHILE
##
## Ends in an error in state: 265.
##
## indexes -> lhs COLON . [ RBRACK COMMA ]
## indexes -> lhs COLON . lhs [ RBRACK COMMA ]
## indexes -> lhs COLON . non_lhs [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## lhs COLON
##

Ill-formed phrase. Found expression ":". Expect "]", "," or expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 264.
##
## indexes -> lhs . [ RBRACK COMMA ]
## indexes -> lhs . COLON [ RBRACK COMMA ]
## indexes -> lhs . COLON lhs [ RBRACK COMMA ]
## indexes -> lhs . COLON non_lhs [ RBRACK COMMA ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON AND ]
##
## The known suffix of the stack is as follows:
## lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LBRACK WHILE
##
## Ends in an error in state: 117.
##
## non_lhs -> non_lhs LBRACK . indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LBRACK
##

Found expression "[". Expect comma separated list of indices next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 123.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LDIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LDIVIDE non_lhs
##

Ill-formed phrase. Found expression "/" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LDIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 272.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LDIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LDIVIDE lhs
##

Ill-formed phrase. Found expression "/" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LDIVIDE WHILE
##
## Ends in an error in state: 122.
##
## non_lhs -> non_lhs LDIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LDIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LDIVIDE
##

Ill-formed expression. Found expression "\". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LEQ REALNUMERAL WHILE
##
## Ends in an error in state: 182.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LEQ non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LEQ non_lhs
##

Ill-formed phrase. Found expression "<=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LEQ TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 183.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LEQ lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LEQ lhs
##

Ill-formed phrase. Found expression "<=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL LEQ WHILE
##
## Ends in an error in state: 181.
##
## non_lhs -> non_lhs LEQ . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs LEQ . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs LEQ
##

Ill-formed expression. Found expression "<=". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MINUS REALNUMERAL WHILE
##
## Ends in an error in state: 154.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MINUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MINUS non_lhs
##

Ill-formed phrase. Found expression "-" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MINUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 165.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MINUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MINUS lhs
##

Ill-formed phrase. Found expression "-" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MINUS WHILE
##
## Ends in an error in state: 153.
##
## non_lhs -> non_lhs MINUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MINUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MINUS
##

Ill-formed expression. Found expression "-". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MODULO REALNUMERAL WHILE
##
## Ends in an error in state: 135.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MODULO non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MODULO non_lhs
##

Ill-formed phrase. Found expression "%" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MODULO TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 136.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MODULO lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MODULO lhs
##

Ill-formed phrase. Found expression "%" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL MODULO WHILE
##
## Ends in an error in state: 134.
##
## non_lhs -> non_lhs MODULO . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs MODULO . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs MODULO
##

Ill-formed expression. Found expression "%". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL NEQUALS REALNUMERAL WHILE
##
## Ends in an error in state: 152.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs NEQUALS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs NEQUALS non_lhs
##

Ill-formed phrase. Found expression "!=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL NEQUALS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 196.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs NEQUALS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs NEQUALS lhs
##

Ill-formed phrase. Found expression "!=" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL NEQUALS WHILE
##
## Ends in an error in state: 151.
##
## non_lhs -> non_lhs NEQUALS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs NEQUALS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs NEQUALS
##

Ill-formed expression. Found expression "!=". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL OR REALNUMERAL WHILE
##
## Ends in an error in state: 150.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs OR non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs OR non_lhs
##

Ill-formed phrase. Found expression "||" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL OR TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 221.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs OR lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs OR lhs
##

Ill-formed phrase. Found expression "||" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL OR WHILE
##
## Ends in an error in state: 149.
##
## non_lhs -> non_lhs OR . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs OR . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs OR
##

Ill-formed expression. Found expression "||". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL PLUS REALNUMERAL WHILE
##
## Ends in an error in state: 133.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs PLUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs PLUS non_lhs
##

Ill-formed phrase. Found expression "+" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL PLUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 259.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs PLUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs PLUS lhs
##

Ill-formed phrase. Found expression "+" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL PLUS WHILE
##
## Ends in an error in state: 132.
##
## non_lhs -> non_lhs PLUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs PLUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs PLUS
##

Ill-formed expression. Found expression "+". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK REALNUMERAL COLON REALNUMERAL WHILE
##
## Ends in an error in state: 226.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK non_lhs COLON non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK non_lhs COLON non_lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK REALNUMERAL COLON TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 227.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK non_lhs COLON lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK non_lhs COLON lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK REALNUMERAL COLON WHILE
##
## Ends in an error in state: 225.
##
## non_lhs -> non_lhs QMARK non_lhs COLON . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK non_lhs COLON . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK non_lhs COLON
##

Ill-formed expression. Found expression "?" expression ":". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK REALNUMERAL WHILE
##
## Ends in an error in state: 148.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs QMARK non_lhs . COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs QMARK non_lhs . COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK non_lhs
##

Ill-formed expression. Found expression "?" expression. Expect an infix or postfix operator or "[" or ":" next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK TRUNCATE COLON REALNUMERAL WHILE
##
## Ends in an error in state: 242.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK lhs COLON non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK lhs COLON non_lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK TRUNCATE COLON TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 243.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK lhs COLON lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK lhs COLON lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK TRUNCATE COLON WHILE
##
## Ends in an error in state: 241.
##
## non_lhs -> non_lhs QMARK lhs COLON . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK lhs COLON . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK lhs COLON
##

Ill-formed expression. Found expression "?" expression ":". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK TRUNCATE TILDE
##
## Ends in an error in state: 240.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs QMARK lhs . COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK lhs . COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Found expression "?" expression. Expect an infix or postfix operator or "[" or ":" next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL QMARK WHILE
##
## Ends in an error in state: 147.
##
## non_lhs -> non_lhs QMARK . lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK . lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK . non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs QMARK . non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs QMARK
##

Ill-formed expression. Found expression "?". Expect an expression next followed by ":" expression.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL RABRACK REALNUMERAL WHILE
##
## Ends in an error in state: 131.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs RABRACK non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs RABRACK non_lhs
##

Ill-formed phrase. Found expression ">" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL RABRACK TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 260.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs RABRACK lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs RABRACK lhs
##

Ill-formed phrase. Found expression ">" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL RABRACK WHILE
##
## Ends in an error in state: 130.
##
## non_lhs -> non_lhs RABRACK . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs RABRACK . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs RABRACK
##

Ill-formed expression. Found expression ">". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK COMMA RBRACK MULTIPLIER
##
## Ends in an error in state: 388.
##
## atomic_statement -> non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation)
##

Expected ";" after "~"-statement (with optional truncation).

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK COMMA TRUNCATE COMMA
##
## Ends in an error in state: 383.
##
## truncation -> TRUNCATE LBRACK option(expression) COMMA option(expression) . RBRACK [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## TRUNCATE LBRACK option(expression) COMMA option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 386, spurious reduction of production option(expression) -> lhs 
##

Ill-formed truncation. Expect the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK COMMA WHILE
##
## Ends in an error in state: 382.
##
## truncation -> TRUNCATE LBRACK option(expression) COMMA . option(expression) RBRACK [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## TRUNCATE LBRACK option(expression) COMMA
##

Ill-formed truncation. Expect the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK REALNUMERAL WHILE
##
## Ends in an error in state: 385.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## option(expression) -> non_lhs . [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed expression. Found an expression. Expect a infix or postfix operator or "[" or "]" or "," next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK TRUNCATE RBRACK
##
## Ends in an error in state: 381.
##
## truncation -> TRUNCATE LBRACK option(expression) . COMMA option(expression) RBRACK [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## TRUNCATE LBRACK option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 386, spurious reduction of production option(expression) -> lhs 
##

Ill-formed truncation. Expect the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK TRUNCATE TILDE
##
## Ends in an error in state: 386.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RBRACK RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## option(expression) -> lhs . [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Found an expression. Expect a infix or postfix operator or "[" or "]" or "," next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK WHILE
##
## Ends in an error in state: 380.
##
## truncation -> TRUNCATE LBRACK . option(expression) COMMA option(expression) RBRACK [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## TRUNCATE LBRACK
##

Ill-formed truncation. Expect the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN TRUNCATE WHILE
##
## Ends in an error in state: 379.
##
## truncation -> TRUNCATE . LBRACK option(expression) COMMA option(expression) RBRACK [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## TRUNCATE
##

Ill-formed truncation. Expect the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN RPAREN WHILE
##
## Ends in an error in state: 378.
##
## atomic_statement -> non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN . option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN
##

Ill-formed "~"-statement. Expect either ";" or a truncation with the format "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN TRUNCATE RBRACK
##
## Ends in an error in state: 377.
##
## atomic_statement -> non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) . RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed "~"-statement. Expect a comma separated list of expressions for arguments to the distribution, followed by ")".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE LPAREN WHILE
##
## Ends in an error in state: 376.
##
## atomic_statement -> non_lhs TILDE identifier LPAREN . loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE identifier LPAREN
##

Ill-formed "~"-statement. Expect a comma separated list of expressions for arguments to the distribution, followed by ")".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE TRUNCATE WHILE
##
## Ends in an error in state: 375.
##
## atomic_statement -> non_lhs TILDE identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE identifier
##

Ill-formed "~"-statement. Expect "(" after distribution name, followed by a comma separated list of expressions for arguments to the distribution, followed by ")".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TILDE WHILE
##
## Ends in an error in state: 374.
##
## atomic_statement -> non_lhs TILDE . identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## non_lhs TILDE
##

Ill-formed "~"-statement. Expect an distribution name after "~".

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TIMES REALNUMERAL WHILE
##
## Ends in an error in state: 121.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs TIMES non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs TIMES non_lhs
##

Ill-formed phrase. Found expression "*" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TIMES TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 273.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs TIMES lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs TIMES lhs
##

Ill-formed phrase. Found expression "*" expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL TIMES WHILE
##
## Ends in an error in state: 120.
##
## non_lhs -> non_lhs TIMES . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs TIMES . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## non_lhs TIMES
##

Ill-formed expression. Found expression "*" expression. Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE REALNUMERAL WHILE
##
## Ends in an error in state: 373.
##
## atomic_statement -> non_lhs . TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed phrase. Found expression. There are many options to continue the phrase after this: "~", "[", "]" or an infix or postfix operator.

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 314.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## printables -> non_lhs . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## non_lhs
##

Ill-formed phrase. Found expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN STRINGLITERAL WHILE
##
## Ends in an error in state: 309.
##
## atomic_statement -> REJECT LPAREN printables . RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## printables -> printables . COMMA printables [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## REJECT LPAREN printables
##

Ill-formed printable. After "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN TRUNCATE COMMA STRINGLITERAL WHILE
##
## Ends in an error in state: 313.
##
## printables -> printables . COMMA printables [ RPAREN COMMA ]
## printables -> printables COMMA printables . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## printables COMMA printables
##

Ill-formed printable. After "print(" and "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN TRUNCATE COMMA WHILE
##
## Ends in an error in state: 312.
##
## printables -> printables COMMA . printables [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## printables COMMA
##

Ill-formed printable. After "print(" and "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN TRUNCATE RPAREN WHILE
##
## Ends in an error in state: 310.
##
## atomic_statement -> REJECT LPAREN printables RPAREN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## REJECT LPAREN printables RPAREN
##

Ill-formed reject statement. After "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 315.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## printables -> lhs . [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found expression. There are many options to continue the phrase after this.

program: TRANSFORMEDDATABLOCK LBRACE REJECT LPAREN WHILE
##
## Ends in an error in state: 306.
##
## atomic_statement -> REJECT LPAREN . printables RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## REJECT LPAREN
##

Ill-formed reject statement. After "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE REJECT WHILE
##
## Ends in an error in state: 305.
##
## atomic_statement -> REJECT . LPAREN printables RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## REJECT
##

Ill-formed reject statement. After "reject(", we expect a comma separated list of either expressions or strings, followed by ");".

program: TRANSFORMEDDATABLOCK LBRACE RETURN LBRACE TRUNCATE RPAREN
##
## Ends in an error in state: 278.
##
## common_expression -> LBRACE separated_nonempty_list(COMMA,expression) . RBRACE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACE separated_nonempty_list(COMMA,expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
##

Expected either "," followed by expression or "}" next.

program: TRANSFORMEDDATABLOCK LBRACE RETURN LBRACE WHILE
##
## Ends in an error in state: 109.
##
## common_expression -> LBRACE . separated_nonempty_list(COMMA,expression) RBRACE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Expression expected after "{" in array expression.

program: TRANSFORMEDDATABLOCK LBRACE RETURN REALNUMERAL WHILE
##
## Ends in an error in state: 301.
##
## atomic_statement -> RETURN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## RETURN non_lhs
##

Ill formed expression followed by ";". Expect expression after "return".

program: TRANSFORMEDDATABLOCK LBRACE RETURN TARGET WHILE
##
## Ends in an error in state: 101.
##
## common_expression -> TARGET . LPAREN RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## TARGET
##

Ill formed expression. After "target", we expect "()".

program: TRANSFORMEDDATABLOCK LBRACE RETURN TRUNCATE LPAREN TRUNCATE COMMA IDENTIFIER RBRACK
##
## Ends in an error in state: 253.
##
## common_expression -> identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 249, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs COMMA separated_nonempty_list(COMMA,expression) 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed expression. In function application, expect comma-separated list of expressions followed by ")", after "(".

program: TRANSFORMEDDATABLOCK LBRACE RETURN TRUNCATE LPAREN WHILE
##
## Ends in an error in state: 144.
##
## common_expression -> identifier LPAREN . loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## common_expression -> identifier LPAREN . lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## common_expression -> identifier LPAREN . non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN
##

Ill-formed expression. In function application, expect comma-separated list of expressions followed by ")", after "(".

program: TRANSFORMEDDATABLOCK LBRACE RETURN TRUNCATE TILDE
##
## Ends in an error in state: 303.
##
## atomic_statement -> RETURN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## RETURN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed return statement. ";" or expression followed by ";" expected after "return".

program: TRANSFORMEDDATABLOCK LBRACE RETURN TRUNCATE WHILE
##
## Ends in an error in state: 143.
##
## common_expression -> identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## common_expression -> identifier . LPAREN lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## common_expression -> identifier . LPAREN non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## lhs -> identifier . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier
##

Ill-formed expression. Found identifier. There are many ways to complete this to a well-formed expression.

program: TRANSFORMEDDATABLOCK LBRACE RETURN WHILE
##
## Ends in an error in state: 299.
##
## atomic_statement -> RETURN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> RETURN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> RETURN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## RETURN
##

";" or expression followed by ";" expected after "return".

program: TRANSFORMEDDATABLOCK LBRACE SEMICOLON VOID
##
## Ends in an error in state: 668.
##
## list(top_vardecl_or_statement) -> top_vardecl_or_statement . list(top_vardecl_or_statement) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## top_vardecl_or_statement
##

Expected top-level variable declaration, statement or "}".

program: TRANSFORMEDDATABLOCK LBRACE TARGET LPAREN WHILE
##
## Ends in an error in state: 102.
##
## common_expression -> TARGET LPAREN . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## TARGET LPAREN
##

Ill-formed expression. Expected ")" after "target(".

program: TRANSFORMEDDATABLOCK LBRACE TARGET PLUSASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 294.
##
## atomic_statement -> TARGET PLUSASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## TARGET PLUSASSIGN non_lhs
##

Ill-formed expression. Expression followed by ";" expected after "target +=".

program: TRANSFORMEDDATABLOCK LBRACE TARGET PLUSASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 296.
##
## atomic_statement -> TARGET PLUSASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## TARGET PLUSASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Expression followed by ";" expected after "target +=".

program: TRANSFORMEDDATABLOCK LBRACE TARGET PLUSASSIGN WHILE
##
## Ends in an error in state: 293.
##
## atomic_statement -> TARGET PLUSASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> TARGET PLUSASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## TARGET PLUSASSIGN
##

Expected an expression followed by a ";", after "target +=".

program: TRANSFORMEDDATABLOCK LBRACE TARGET WHILE
##
## Ends in an error in state: 292.
##
## atomic_statement -> TARGET . PLUSASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> TARGET . PLUSASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## common_expression -> TARGET . LPAREN RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## TARGET
##

Ill-formed phrase. Expect either "+=" or "()" after "target".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE AND REALNUMERAL WHILE
##
## Ends in an error in state: 223.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs AND non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs AND non_lhs
##

Ill-formed phrase. Found expression "&&" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE AND TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 224.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs AND lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs AND lhs
##

Ill-formed phrase. Found expression "&&" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE AND WHILE
##
## Ends in an error in state: 222.
##
## non_lhs -> lhs AND . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs AND . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs AND
##

Ill-formed expression. Found expression "&&". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ARROWASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 435.
##
## atomic_statement -> lhs ARROWASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ARROWASSIGN non_lhs
##

Ill-formed phrase. Found L-value "<-" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ARROWASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 437.
##
## atomic_statement -> lhs ARROWASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ARROWASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "<-" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ARROWASSIGN WHILE
##
## Ends in an error in state: 434.
##
## atomic_statement -> lhs ARROWASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs ARROWASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs ARROWASSIGN
##

Ill-formed expression. Found L-value "<-". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 430.
##
## atomic_statement -> lhs ASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ASSIGN non_lhs
##

Ill-formed phrase. Found L-value "=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 432.
##
## atomic_statement -> lhs ASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ASSIGN WHILE
##
## Ends in an error in state: 429.
##
## atomic_statement -> lhs ASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs ASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs ASSIGN
##

Ill-formed expression. Found L-value "=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 179.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs DIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDE non_lhs
##

Ill-formed phrase. Found expression "/" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 180.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs DIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDE lhs
##

Ill-formed phrase. Found expression "/" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDE WHILE
##
## Ends in an error in state: 178.
##
## non_lhs -> lhs DIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs DIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDE
##

Ill-formed expression. Found expression "/". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDEASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 425.
##
## atomic_statement -> lhs DIVIDEASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDEASSIGN non_lhs
##

Ill-formed phrase. Found L-value "/=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDEASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 427.
##
## atomic_statement -> lhs DIVIDEASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDEASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "/=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE DIVIDEASSIGN WHILE
##
## Ends in an error in state: 424.
##
## atomic_statement -> lhs DIVIDEASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs DIVIDEASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs DIVIDEASSIGN
##

Ill-formed expression. Found L-value "/=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 176.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTDIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDE non_lhs
##

Ill-formed phrase. Found expression "./" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 177.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTDIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDE lhs
##

Ill-formed phrase. Found expression "./" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDE WHILE
##
## Ends in an error in state: 175.
##
## non_lhs -> lhs ELTDIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTDIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDE
##

Ill-formed expression. Found expression "./". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDEASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 420.
##
## atomic_statement -> lhs ELTDIVIDEASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDEASSIGN non_lhs
##

Ill-formed phrase. Found L-value "./=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDEASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 422.
##
## atomic_statement -> lhs ELTDIVIDEASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDEASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "./=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTDIVIDEASSIGN WHILE
##
## Ends in an error in state: 419.
##
## atomic_statement -> lhs ELTDIVIDEASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs ELTDIVIDEASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs ELTDIVIDEASSIGN
##

Ill-formed expression. Found L-value "./=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMES REALNUMERAL WHILE
##
## Ends in an error in state: 173.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTTIMES non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMES non_lhs
##

Ill-formed phrase. Found expression ".*" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMES TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 174.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTTIMES lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMES lhs
##

Ill-formed phrase. Found expression ".*" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMES WHILE
##
## Ends in an error in state: 172.
##
## non_lhs -> lhs ELTTIMES . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs ELTTIMES . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMES
##

Ill-formed expression. Found expression ".*". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMESASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 415.
##
## atomic_statement -> lhs ELTTIMESASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMESASSIGN non_lhs
##

Ill-formed phrase. Found L-value ".*=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMESASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 417.
##
## atomic_statement -> lhs ELTTIMESASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMESASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value ".*=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE ELTTIMESASSIGN WHILE
##
## Ends in an error in state: 414.
##
## atomic_statement -> lhs ELTTIMESASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs ELTTIMESASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs ELTTIMESASSIGN
##

Ill-formed expression. Found L-value ".*=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE EQUALS REALNUMERAL WHILE
##
## Ends in an error in state: 219.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs EQUALS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs EQUALS non_lhs
##

Ill-formed phrase. Found expression "==" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE EQUALS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 220.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs EQUALS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs EQUALS lhs
##

Ill-formed phrase. Found expression "==" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE EQUALS WHILE
##
## Ends in an error in state: 218.
##
## non_lhs -> lhs EQUALS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs EQUALS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs EQUALS
##

Ill-formed expression. Found expression "==". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE GEQ REALNUMERAL WHILE
##
## Ends in an error in state: 207.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs GEQ non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs GEQ non_lhs
##

Ill-formed phrase. Found expression ">=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE GEQ TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 208.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs GEQ lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs GEQ lhs
##

Ill-formed phrase. Found expression ">=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE GEQ WHILE
##
## Ends in an error in state: 206.
##
## non_lhs -> lhs GEQ . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs GEQ . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs GEQ
##

Ill-formed expression. Found expression ">=". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE HAT REALNUMERAL WHILE
##
## Ends in an error in state: 141.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs HAT non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs HAT non_lhs
##

Ill-formed phrase. Found expression "^" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE HAT TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 142.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs HAT lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs HAT lhs
##

Ill-formed phrase. Found expression "^" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE HAT WHILE
##
## Ends in an error in state: 140.
##
## non_lhs -> lhs HAT . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs HAT . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs HAT
##

Ill-formed expression. Found expression "^". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LABRACK REALNUMERAL WHILE
##
## Ends in an error in state: 204.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LABRACK non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LABRACK non_lhs
##

Ill-formed phrase. Found expression "<" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LABRACK TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 205.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LABRACK lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LABRACK lhs
##

Ill-formed phrase. Found expression "<" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LABRACK WHILE
##
## Ends in an error in state: 203.
##
## non_lhs -> lhs LABRACK . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LABRACK . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LABRACK
##

Ill-formed expression. Found expression "<". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LBRACK WHILE
##
## Ends in an error in state: 128.
##
## lhs -> lhs LBRACK . indexes RBRACK [ TRANSPOSE TIMESASSIGN TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUSASSIGN PLUS OR NEQUALS MODULO MINUSASSIGN MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE COMMA COLON BAR ASSIGN ARROWASSIGN AND ]
##
## The known suffix of the stack is as follows:
## lhs LBRACK
##

Ill-formed indices. Expected comma-separated set of indices followed by "]" after "[".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LDIVIDE REALNUMERAL WHILE
##
## Ends in an error in state: 138.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LDIVIDE non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LDIVIDE non_lhs
##

Ill-formed phrase. Found expression "\" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LDIVIDE TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 139.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LDIVIDE lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LDIVIDE lhs
##

Ill-formed phrase. Found expression "\" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LDIVIDE WHILE
##
## Ends in an error in state: 137.
##
## non_lhs -> lhs LDIVIDE . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LDIVIDE . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LDIVIDE
##

Ill-formed expression. Found expression "\". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LEQ REALNUMERAL WHILE
##
## Ends in an error in state: 201.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LEQ non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LEQ non_lhs
##

Ill-formed phrase. Found expression "<=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LEQ TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 202.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LEQ lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LEQ lhs
##

Ill-formed phrase. Found expression "<=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LEQ WHILE
##
## Ends in an error in state: 200.
##
## non_lhs -> lhs LEQ . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs LEQ . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs LEQ
##

Ill-formed expression. Found expression "<=". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN REALNUMERAL BAR TRUNCATE RBRACK
##
## Ends in an error in state: 251.
##
## common_expression -> identifier LPAREN non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN non_lhs BAR loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed conditional distribution evaluation. Expect comma-separated list of expressions followed by ")" after "|".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN REALNUMERAL BAR WHILE
##
## Ends in an error in state: 250.
##
## common_expression -> identifier LPAREN non_lhs BAR . loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN non_lhs BAR
##

Ill-formed conditional distribution evaluation. Expect comma-separated list of expressions followed by ")" after "|".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 146.
##
## common_expression -> identifier LPAREN non_lhs . BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . [ RPAREN ]
## separated_nonempty_list(COMMA,expression) -> non_lhs . COMMA separated_nonempty_list(COMMA,expression) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN non_lhs
##

Ill-formed function application. Expect comma-separated list of expressions followed by ")" after "(".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN RPAREN WHILE
##
## Ends in an error in state: 442.
##
## atomic_statement -> identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## common_expression -> identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN . [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN
##

Ill-formed phrase. Found a well-formed function application. After this, there are many legal completions of the phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN TRUNCATE BAR TRUNCATE RBRACK
##
## Ends in an error in state: 257.
##
## common_expression -> identifier LPAREN lhs BAR loption(separated_nonempty_list(COMMA,expression)) . RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN lhs BAR loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed conditional distribution evaluation. Expect comma-separated list of expressions followed by ")" after "|".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN TRUNCATE BAR WHILE
##
## Ends in an error in state: 256.
##
## common_expression -> identifier LPAREN lhs BAR . loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN lhs BAR
##

Ill-formed conditional distribution evaluation. Expect comma-separated list of expressions followed by ")" after "|".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN TRUNCATE COMMA IDENTIFIER RBRACK
##
## Ends in an error in state: 441.
##
## atomic_statement -> identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) . RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## common_expression -> identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) . RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 249, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs COMMA separated_nonempty_list(COMMA,expression) 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed function application. Expect comma-separated list of expressions followed by ")" after "(".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 255.
##
## common_expression -> identifier LPAREN lhs . BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA BAR AND ]
## separated_nonempty_list(COMMA,expression) -> lhs . [ RPAREN ]
## separated_nonempty_list(COMMA,expression) -> lhs . COMMA separated_nonempty_list(COMMA,expression) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed function application. Expect comma-separated list of expressions followed by ")" after "(".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE LPAREN WHILE
##
## Ends in an error in state: 440.
##
## atomic_statement -> identifier LPAREN . loption(separated_nonempty_list(COMMA,expression)) RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## common_expression -> identifier LPAREN . loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## common_expression -> identifier LPAREN . lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## common_expression -> identifier LPAREN . non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
##
## The known suffix of the stack is as follows:
## identifier LPAREN
##

Ill-formed function application. Expect comma-separated list of expressions followed by ")" after "(".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUS REALNUMERAL WHILE
##
## Ends in an error in state: 188.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MINUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MINUS non_lhs
##

Ill-formed phrase. Found expression "-" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 189.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MINUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MINUS lhs
##

Ill-formed phrase. Found expression "-" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUS WHILE
##
## Ends in an error in state: 187.
##
## non_lhs -> lhs MINUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MINUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MINUS
##

Ill-formed expression. Found expression "-". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUSASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 410.
##
## atomic_statement -> lhs MINUSASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs MINUSASSIGN non_lhs
##

Ill-formed phrase. Found L-value "-=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUSASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 412.
##
## atomic_statement -> lhs MINUSASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs MINUSASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "-=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MINUSASSIGN WHILE
##
## Ends in an error in state: 409.
##
## atomic_statement -> lhs MINUSASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs MINUSASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs MINUSASSIGN
##

Ill-formed expression. Found L-value "-=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MODULO REALNUMERAL WHILE
##
## Ends in an error in state: 170.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MODULO non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MODULO non_lhs
##

Ill-formed phrase. Found expression "%" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MODULO TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 171.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MODULO lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MODULO lhs
##

Ill-formed phrase. Found expression "%" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE MODULO WHILE
##
## Ends in an error in state: 169.
##
## non_lhs -> lhs MODULO . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs MODULO . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs MODULO
##

Ill-formed expression. Found expression "%". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE NEQUALS REALNUMERAL WHILE
##
## Ends in an error in state: 216.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs NEQUALS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs NEQUALS non_lhs
##

Ill-formed phrase. Found expression "!=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE NEQUALS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 217.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs NEQUALS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs NEQUALS lhs
##

Ill-formed phrase. Found expression "!=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE NEQUALS WHILE
##
## Ends in an error in state: 215.
##
## non_lhs -> lhs NEQUALS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs NEQUALS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs NEQUALS
##

Ill-formed expression. Found expression "!=". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE OR REALNUMERAL WHILE
##
## Ends in an error in state: 234.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs OR non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs OR non_lhs
##

Ill-formed phrase. Found expression "||" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE OR TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 235.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs OR lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs OR lhs
##

Ill-formed phrase. Found expression "||" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE OR WHILE
##
## Ends in an error in state: 233.
##
## non_lhs -> lhs OR . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs OR . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs OR
##

Ill-formed expression. Found expression "||". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUS REALNUMERAL WHILE
##
## Ends in an error in state: 185.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs PLUS non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs PLUS non_lhs
##

Ill-formed phrase. Found expression "+" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUS TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 186.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs PLUS lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs PLUS lhs
##

Ill-formed phrase. Found expression "+" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUS WHILE
##
## Ends in an error in state: 184.
##
## non_lhs -> lhs PLUS . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs PLUS . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs PLUS
##

Ill-formed expression. Found expression "+". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUSASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 405.
##
## atomic_statement -> lhs PLUSASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs PLUSASSIGN non_lhs
##

Ill-formed phrase. Found L-value "+=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUSASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 407.
##
## atomic_statement -> lhs PLUSASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs PLUSASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "+=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE PLUSASSIGN WHILE
##
## Ends in an error in state: 404.
##
## atomic_statement -> lhs PLUSASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs PLUSASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs PLUSASSIGN
##

Ill-formed expression. Found L-value "+=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK REALNUMERAL COLON REALNUMERAL WHILE
##
## Ends in an error in state: 231.
##
## non_lhs -> lhs QMARK non_lhs COLON non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK non_lhs COLON non_lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK REALNUMERAL COLON TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 232.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK non_lhs COLON lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK non_lhs COLON lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK REALNUMERAL COLON WHILE
##
## Ends in an error in state: 230.
##
## non_lhs -> lhs QMARK non_lhs COLON . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK non_lhs COLON . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK non_lhs COLON
##

Ill-formed expression. Found expression "?" expression ":". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK REALNUMERAL WHILE
##
## Ends in an error in state: 229.
##
## non_lhs -> lhs QMARK non_lhs . COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK non_lhs . COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK non_lhs
##

Ill-formed expression. Found expression "?". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK TRUNCATE COLON REALNUMERAL WHILE
##
## Ends in an error in state: 238.
##
## non_lhs -> lhs QMARK lhs COLON non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK lhs COLON non_lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK TRUNCATE COLON TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 239.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK lhs COLON lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK lhs COLON lhs
##

Ill-formed phrase. Found expression "?" expression ":" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK TRUNCATE COLON WHILE
##
## Ends in an error in state: 237.
##
## non_lhs -> lhs QMARK lhs COLON . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK lhs COLON . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK lhs COLON
##

Ill-formed expression. Found expression "?" expression ":". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK TRUNCATE TILDE
##
## Ends in an error in state: 236.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs QMARK lhs . COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs QMARK lhs . COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COLON AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. Found expression "?". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE QMARK WHILE
##
## Ends in an error in state: 228.
##
## non_lhs -> lhs QMARK . lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK . lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK . non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs QMARK . non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs QMARK
##

Ill-formed expression. Found expression "?". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE RABRACK REALNUMERAL WHILE
##
## Ends in an error in state: 198.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs RABRACK non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs RABRACK non_lhs
##

Ill-formed phrase. Found expression ">" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE RABRACK TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 199.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs RABRACK lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs RABRACK lhs
##

Ill-formed phrase. Found expression ">" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE RABRACK WHILE
##
## Ends in an error in state: 197.
##
## non_lhs -> lhs RABRACK . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs RABRACK . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs RABRACK
##

Ill-formed expression. Found expression ">". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE RBRACE
##
## Ends in an error in state: 391.
##
## atomic_statement -> lhs . ASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ARROWASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ARROWASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . PLUSASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . PLUSASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . MINUSASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . MINUSASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . TIMESASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . TIMESASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . DIVIDEASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . DIVIDEASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ELTTIMESASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ELTTIMESASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ELTDIVIDEASSIGN lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . ELTDIVIDEASSIGN non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs . TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMESASSIGN TIMES TILDE RABRACK QMARK PLUSASSIGN PLUS OR NEQUALS MODULO MINUSASSIGN MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE ASSIGN ARROWASSIGN AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 439, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value. This can be completed in many ways.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE TRUNCATE LPAREN RPAREN TRUNCATE LBRACK COMMA RBRACK MULTIPLIER
##
## Ends in an error in state: 402.
##
## atomic_statement -> lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation)
##

Ill-formed "~"-statement. Expected ";".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE TRUNCATE LPAREN RPAREN WHILE
##
## Ends in an error in state: 401.
##
## atomic_statement -> lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN . option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN
##

Ill-formed "~"-statement. Expected ";" or "T[" optional expression "," optional expression "];".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE TRUNCATE LPAREN TRUNCATE RBRACK
##
## Ends in an error in state: 400.
##
## atomic_statement -> lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) . RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE identifier LPAREN loption(separated_nonempty_list(COMMA,expression))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
## In state 247, spurious reduction of production separated_nonempty_list(COMMA,expression) -> lhs 
## In state 145, spurious reduction of production loption(separated_nonempty_list(COMMA,expression)) -> separated_nonempty_list(COMMA,expression) 
##

Ill-formed "~"-statement. Expected "," or ")".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE TRUNCATE LPAREN WHILE
##
## Ends in an error in state: 399.
##
## atomic_statement -> lhs TILDE identifier LPAREN . loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE identifier LPAREN
##

Ill-formed "~"-statement. Expected comma-separated list of expressions followed by ")".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE TRUNCATE WHILE
##
## Ends in an error in state: 398.
##
## atomic_statement -> lhs TILDE identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE identifier
##

Ill-formed "~"-statement. Expected "(" followed by a comma-separated list of expressions followed by ")" after distribution name.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TILDE WHILE
##
## Ends in an error in state: 397.
##
## atomic_statement -> lhs TILDE . identifier LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN option(truncation) SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TILDE
##

Ill-formed "~"-statement. Expected identifier for distribution name after "~".

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMES REALNUMERAL WHILE
##
## Ends in an error in state: 167.
##
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs TIMES non_lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs TIMES non_lhs
##

Ill-formed phrase. Found expression "*" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMES TRUNCATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 168.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs TIMES lhs . [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs TIMES lhs
##

Ill-formed phrase. Found expression "*" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMES WHILE
##
## Ends in an error in state: 166.
##
## non_lhs -> lhs TIMES . lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
## non_lhs -> lhs TIMES . non_lhs [ TRANSPOSE TIMES TILDE SEMICOLON RPAREN RBRACK RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA COLON BAR AND ]
##
## The known suffix of the stack is as follows:
## lhs TIMES
##

Ill-formed expression. Found expression "*". Expect an expression next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMESASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 393.
##
## atomic_statement -> lhs TIMESASSIGN non_lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs TIMESASSIGN non_lhs
##

Ill-formed phrase. Found L-value "*=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMESASSIGN TRUNCATE TILDE
##
## Ends in an error in state: 395.
##
## atomic_statement -> lhs TIMESASSIGN lhs . SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES SEMICOLON RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## lhs TIMESASSIGN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed phrase. Found L-value "*=" expression. There are many ways in which this can be completed to a valid phrase.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE TIMESASSIGN WHILE
##
## Ends in an error in state: 392.
##
## atomic_statement -> lhs TIMESASSIGN . lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## atomic_statement -> lhs TIMESASSIGN . non_lhs SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## lhs TIMESASSIGN
##

Ill-formed expression. Found L-value "*=". Expect an expression followed by ";" next.

program: TRANSFORMEDDATABLOCK LBRACE TRUNCATE WHILE
##
## Ends in an error in state: 439.
##
## atomic_statement -> identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN SEMICOLON [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## common_expression -> identifier . LPAREN loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## common_expression -> identifier . LPAREN lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## common_expression -> identifier . LPAREN non_lhs BAR loption(separated_nonempty_list(COMMA,expression)) RPAREN [ TRANSPOSE TIMES TILDE RBRACE RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE COMMA AND ]
## lhs -> identifier . [ TRANSPOSE TIMESASSIGN TIMES TILDE RBRACE RABRACK QMARK PLUSASSIGN PLUS OR NEQUALS MODULO MINUSASSIGN MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMESASSIGN ELTTIMES ELTDIVIDEASSIGN ELTDIVIDE DIVIDEASSIGN DIVIDE COMMA ASSIGN ARROWASSIGN AND ]
##
## The known suffix of the stack is as follows:
## identifier
##

Ill-formed statement or expression. A statement or expression could be expected here.

program: TRANSFORMEDDATABLOCK LBRACE VECTOR LBRACK INTNUMERAL RBRACK HAT
##
## Ends in an error in state: 669.
##
## top_var_decl -> top_var_type . decl_identifier option(dims) option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## top_var_type
##

Ill-formed top-level variable declaration. Expect an identifier next.

program: TRANSFORMEDDATABLOCK LBRACE VOID
##
## Ends in an error in state: 667.
##
## transformed_data_block -> TRANSFORMEDDATABLOCK LBRACE . list(top_vardecl_or_statement) RBRACE [ TRANSFORMEDPARAMETERSBLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## TRANSFORMEDDATABLOCK LBRACE
##

Expect a statement or top-level variable declaration.

program: TRANSFORMEDDATABLOCK LBRACE WHILE LPAREN REALNUMERAL RPAREN VOID
##
## Ends in an error in state: 291.
##
## nested_statement -> WHILE LPAREN non_lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN non_lhs RPAREN
##

Ill-formed statement. We expect a statement after ")", for the body of the while-loop.

program: TRANSFORMEDDATABLOCK LBRACE WHILE LPAREN REALNUMERAL WHILE
##
## Ends in an error in state: 290.
##
## nested_statement -> WHILE LPAREN non_lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> non_lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> non_lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN non_lhs
##

Ill-formed expression. We expect an expression after "(" for the test of the while-loop.

program: TRANSFORMEDDATABLOCK LBRACE WHILE LPAREN TRUNCATE RPAREN VOID
##
## Ends in an error in state: 492.
##
## nested_statement -> WHILE LPAREN lhs RPAREN . statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN lhs RPAREN
##

Ill-formed statement. We expect a statement after ")", for the body of the while-loop.

program: TRANSFORMEDDATABLOCK LBRACE WHILE LPAREN TRUNCATE TILDE
##
## Ends in an error in state: 491.
##
## lhs -> lhs . LBRACK indexes RBRACK [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## nested_statement -> WHILE LPAREN lhs . RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## non_lhs -> lhs . QMARK lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . QMARK non_lhs COLON non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . PLUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MINUS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . DIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . MODULO non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTTIMES non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . ELTDIVIDE non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . HAT non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . OR non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . AND non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . EQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . NEQUALS non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . LEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . RABRACK non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . GEQ non_lhs [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
## non_lhs -> lhs . TRANSPOSE [ TRANSPOSE TIMES RPAREN RABRACK QMARK PLUS OR NEQUALS MODULO MINUS LEQ LDIVIDE LBRACK LABRACK HAT GEQ EQUALS ELTTIMES ELTDIVIDE DIVIDE AND ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN lhs
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 143, spurious reduction of production lhs -> identifier 
##

Ill-formed expression. We expect an expression after "(" for the test of the while-loop.

program: TRANSFORMEDDATABLOCK LBRACE WHILE LPAREN WHILE
##
## Ends in an error in state: 100.
##
## nested_statement -> WHILE LPAREN . lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> WHILE LPAREN . non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN
##

Ill-formed expression. We expect an expression after "(" for the test of the while-loop.

program: TRANSFORMEDDATABLOCK LBRACE WHILE WHILE
##
## Ends in an error in state: 99.
##
## nested_statement -> WHILE . LPAREN lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
## nested_statement -> WHILE . LPAREN non_lhs RPAREN statement [ WHILE VOID VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR ELSE COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## WHILE
##

After "while", we expect "(" expression ")" statement.

program: TRANSFORMEDDATABLOCK WHILE
##
## Ends in an error in state: 666.
##
## transformed_data_block -> TRANSFORMEDDATABLOCK . LBRACE list(top_vardecl_or_statement) RBRACE [ TRANSFORMEDPARAMETERSBLOCK PARAMETERSBLOCK MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## TRANSFORMEDDATABLOCK
##

We expect "{" after "transformed data".

program: TRANSFORMEDPARAMETERSBLOCK LBRACE RBRACE ELTTIMESASSIGN
##
## Ends in an error in state: 692.
##
## program -> option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block) . option(model_block) option(generated_quantities_block) EOF [ # ]
##
## The known suffix of the stack is as follows:
## option(function_block) option(data_block) option(transformed_data_block) option(parameters_block) option(transformed_parameters_block)
##

"model {" or "generated quantities {" expected after end of transformed parameters block.

program: TRANSFORMEDPARAMETERSBLOCK LBRACE VOID
##
## Ends in an error in state: 688.
##
## transformed_parameters_block -> TRANSFORMEDPARAMETERSBLOCK LBRACE . list(top_vardecl_or_statement) RBRACE [ MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## TRANSFORMEDPARAMETERSBLOCK LBRACE
##

Expect a statement or top-level variable declaration.

program: TRANSFORMEDPARAMETERSBLOCK WHILE
##
## Ends in an error in state: 687.
##
## transformed_parameters_block -> TRANSFORMEDPARAMETERSBLOCK . LBRACE list(top_vardecl_or_statement) RBRACE [ MODELBLOCK GENERATEDQUANTITIESBLOCK EOF ]
##
## The known suffix of the stack is as follows:
## TRANSFORMEDPARAMETERSBLOCK
##

We expect "{" after "transformed parameters".

program: MODELBLOCK LBRACE REAL TRUNCATE LBRACK TRUNCATE RBRACK ARROWASSIGN
##
## Ends in an error in state: 478.
##
## var_decl -> sized_basic_type decl_identifier option(dims) . option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR TRUNCATE TARGET SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT PLUS MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR CONTINUE BREAK BANG ]
##
## The known suffix of the stack is as follows:
## sized_basic_type decl_identifier option(dims)
##

Expected  ";" or "=" expression ";".

program: DATABLOCK LBRACE REAL TRUNCATE LBRACK IDENTIFIER RBRACK WHILE
##
## Ends in an error in state: 659.
##
## top_var_decl_no_assign -> top_var_type decl_identifier option(dims) . SEMICOLON [ VECTOR UNITVECTOR SIMPLEX ROWVECTOR REAL RBRACE POSITIVEORDERED ORDERED MATRIX INT COVMATRIX CORRMATRIX CHOLESKYFACTORCOV CHOLESKYFACTORCORR ]
##
## The known suffix of the stack is as follows:
## top_var_type decl_identifier option(dims)
##

Expected ";".

program: TRANSFORMEDDATABLOCK LBRACE REAL TRUNCATE LBRACK IDENTIFIER RBRACK ARROWASSIGN
##
## Ends in an error in state: 671.
##
## top_var_decl -> top_var_type decl_identifier option(dims) . option(pair(ASSIGN,expression)) SEMICOLON [ WHILE VECTOR UNITVECTOR TRUNCATE TARGET SIMPLEX SEMICOLON ROWVECTOR RETURN REJECT REALNUMERAL REAL RBRACE PRINT POSITIVEORDERED PLUS ORDERED MINUS MATRIX LPAREN LBRACK LBRACE INTNUMERAL INT INCREMENTLOGPROB IF IDENTIFIER GETLP FOR COVMATRIX CORRMATRIX CONTINUE CHOLESKYFACTORCOV CHOLESKYFACTORCORR BREAK BANG ]
##
## The known suffix of the stack is as follows:
## top_var_type decl_identifier option(dims)
##

Expected  ";" or "=" expression ";".

program: TRANSFORMEDDATABLOCK LBRACE REAL FUNCTIONBLOCK WHILE
##
## Ends in an error in state: 61.
##
## decl_identifier -> FUNCTIONBLOCK . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## FUNCTIONBLOCK
##

Expected identifier, but found reserved keyword 'functions'

program: TRANSFORMEDDATABLOCK LBRACE REAL DATABLOCK WHILE
##
## Ends in an error in state: 67.
##
## decl_identifier -> DATABLOCK . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## DATABLOCK
##

Expected identifier, but found reserved keyword 'data'

program: TRANSFORMEDDATABLOCK LBRACE REAL PARAMETERSBLOCK WHILE
##
## Ends in an error in state: 38.
##
## decl_identifier -> PARAMETERSBLOCK . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## PARAMETERSBLOCK
##

Expected identifier, but found reserved keyword 'parameters'

program: TRANSFORMEDDATABLOCK LBRACE REAL MODELBLOCK WHILE
##
## Ends in an error in state: 46.
##
## decl_identifier -> MODELBLOCK . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## MODELBLOCK
##

Expected identifier, but found reserved keyword 'model'

program: TRANSFORMEDDATABLOCK LBRACE REAL RETURN WHILE
##
## Ends in an error in state: 28.
##
## decl_identifier -> RETURN . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## RETURN
##

Expected identifier, but found reserved keyword 'return'

program: TRANSFORMEDDATABLOCK LBRACE REAL IF WHILE
##
## Ends in an error in state: 56.
##
## decl_identifier -> IF . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## IF
##

Expected identifier, but found reserved keyword 'if'

program: TRANSFORMEDDATABLOCK LBRACE REAL ELSE WHILE
##
## Ends in an error in state: 65.
##
## decl_identifier -> ELSE . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## ELSE
##

Expected identifier, but found reserved keyword 'else'

program: TRANSFORMEDDATABLOCK LBRACE REAL WHILE WHILE
##
## Ends in an error in state: 11.
##
## decl_identifier -> WHILE . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## WHILE
##

Expected identifier, but found reserved keyword 'while'

program: TRANSFORMEDDATABLOCK LBRACE REAL FOR WHILE
##
## Ends in an error in state: 63.
##
## decl_identifier -> FOR . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## FOR
##

Expected identifier, but found reserved keyword 'for'

program: TRANSFORMEDDATABLOCK LBRACE REAL IN WHILE
##
## Ends in an error in state: 54.
##
## decl_identifier -> IN . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## IN
##

Expected identifier, but found reserved keyword 'in'

program: TRANSFORMEDDATABLOCK LBRACE REAL BREAK WHILE
##
## Ends in an error in state: 79.
##
## decl_identifier -> BREAK . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## BREAK
##

Expected identifier, but found reserved keyword 'break'

program: TRANSFORMEDDATABLOCK LBRACE REAL CONTINUE WHILE
##
## Ends in an error in state: 73.
##
## decl_identifier -> CONTINUE . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## CONTINUE
##

Expected identifier, but found reserved keyword 'continue'

program: TRANSFORMEDDATABLOCK LBRACE REAL VOID WHILE
##
## Ends in an error in state: 13.
##
## decl_identifier -> VOID . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## VOID
##

Expected identifier, but found reserved keyword 'void'

program: TRANSFORMEDDATABLOCK LBRACE REAL INT WHILE
##
## Ends in an error in state: 52.
##
## decl_identifier -> INT . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## INT
##

Expected identifier, but found reserved keyword 'int'

program: TRANSFORMEDDATABLOCK LBRACE REAL REAL WHILE
##
## Ends in an error in state: 32.
##
## decl_identifier -> REAL . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## REAL
##

Expected identifier, but found reserved keyword 'real'

program: TRANSFORMEDDATABLOCK LBRACE REAL VECTOR WHILE
##
## Ends in an error in state: 15.
##
## decl_identifier -> VECTOR . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## VECTOR
##

Expected identifier, but found reserved keyword 'vector'

program: TRANSFORMEDDATABLOCK LBRACE REAL ROWVECTOR WHILE
##
## Ends in an error in state: 26.
##
## decl_identifier -> ROWVECTOR . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## ROWVECTOR
##

Expected identifier, but found reserved keyword 'row_vector'

program: TRANSFORMEDDATABLOCK LBRACE REAL MATRIX WHILE
##
## Ends in an error in state: 48.
##
## decl_identifier -> MATRIX . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## MATRIX
##

Expected identifier, but found reserved keyword 'matrix'

program: TRANSFORMEDDATABLOCK LBRACE REAL ORDERED WHILE
##
## Ends in an error in state: 40.
##
## decl_identifier -> ORDERED . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## ORDERED
##

Expected identifier, but found reserved keyword 'ordered'

program: TRANSFORMEDDATABLOCK LBRACE REAL POSITIVEORDERED WHILE
##
## Ends in an error in state: 36.
##
## decl_identifier -> POSITIVEORDERED . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## POSITIVEORDERED
##

Expected identifier, but found reserved keyword 'positive_ordered'

program: TRANSFORMEDDATABLOCK LBRACE REAL SIMPLEX WHILE
##
## Ends in an error in state: 24.
##
## decl_identifier -> SIMPLEX . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## SIMPLEX
##

Expected identifier, but found reserved keyword 'simplex'

program: TRANSFORMEDDATABLOCK LBRACE REAL UNITVECTOR WHILE
##
## Ends in an error in state: 19.
##
## decl_identifier -> UNITVECTOR . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## UNITVECTOR
##

Expected identifier, but found reserved keyword 'unit_vector'

program: TRANSFORMEDDATABLOCK LBRACE REAL CHOLESKYFACTORCORR WHILE
##
## Ends in an error in state: 77.
##
## decl_identifier -> CHOLESKYFACTORCORR . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCORR
##

Expected identifier, but found reserved keyword 'cholesky_factor_corr'

program: TRANSFORMEDDATABLOCK LBRACE REAL CHOLESKYFACTORCOV WHILE
##
## Ends in an error in state: 75.
##
## decl_identifier -> CHOLESKYFACTORCOV . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## CHOLESKYFACTORCOV
##

Expected identifier, but found reserved keyword 'cholesky_factor_cov'

program: TRANSFORMEDDATABLOCK LBRACE REAL CORRMATRIX WHILE
##
## Ends in an error in state: 71.
##
## decl_identifier -> CORRMATRIX . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## CORRMATRIX
##

Expected identifier, but found reserved keyword 'corr_matrix'

program: TRANSFORMEDDATABLOCK LBRACE REAL COVMATRIX WHILE
##
## Ends in an error in state: 69.
##
## decl_identifier -> COVMATRIX . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## COVMATRIX
##

Expected identifier, but found reserved keyword 'cov_matrix'

program: TRANSFORMEDDATABLOCK LBRACE REAL LOWER WHILE
##
## Ends in an error in state: 50.
##
## decl_identifier -> LOWER . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## LOWER
##

Expected identifier, but found reserved keyword 'lower'

program: TRANSFORMEDDATABLOCK LBRACE REAL UPPER WHILE
##
## Ends in an error in state: 17.
##
## decl_identifier -> UPPER . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## UPPER
##

Expected identifier, but found reserved keyword 'upper'

program: TRANSFORMEDDATABLOCK LBRACE REAL OFFSET WHILE
##
## Ends in an error in state: 42.
##
## decl_identifier -> OFFSET . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## OFFSET
##

Expected identifier, but found reserved keyword 'offset'

program: TRANSFORMEDDATABLOCK LBRACE REAL MULTIPLIER WHILE
##
## Ends in an error in state: 44.
##
## decl_identifier -> MULTIPLIER . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER
##

Expected identifier, but found reserved keyword 'multiplier'

program: TRANSFORMEDDATABLOCK LBRACE REAL PRINT WHILE
##
## Ends in an error in state: 34.
##
## decl_identifier -> PRINT . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## PRINT
##

Expected identifier, but found reserved keyword 'print'

program: TRANSFORMEDDATABLOCK LBRACE REAL REJECT WHILE
##
## Ends in an error in state: 30.
##
## decl_identifier -> REJECT . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## REJECT
##

Expected identifier, but found reserved keyword 'reject'

program: TRANSFORMEDDATABLOCK LBRACE REAL TARGET WHILE
##
## Ends in an error in state: 22.
##
## decl_identifier -> TARGET . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## TARGET
##

Expected identifier, but found reserved keyword 'target'

program: TRANSFORMEDDATABLOCK LBRACE REAL GETLP WHILE
##
## Ends in an error in state: 59.
##
## decl_identifier -> GETLP . UNREACHABLE [ SEMICOLON RPAREN LPAREN LBRACK COMMA ASSIGN ]
##
## The known suffix of the stack is as follows:
## GETLP
##

Expected identifier, but found reserved keyword 'get_lp'

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 524.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## range -> UPPER ASSIGN constr_expression . COMMA LOWER ASSIGN constr_expression [ RABRACK ]
## range -> UPPER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN constr_expression
##

'>' or lower expression expected after upper expression.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE COMMA WHILE
##
## Ends in an error in state: 541.
##
## range -> UPPER ASSIGN constr_expression COMMA . LOWER ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN constr_expression COMMA
##

'>' or lower expression expected after upper expression.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE COMMA LOWER WHILE
##
## Ends in an error in state: 542.
##
## range -> UPPER ASSIGN constr_expression COMMA LOWER . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN constr_expression COMMA LOWER
##

'=' expected after 'upper' keyword.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE COMMA LOWER ASSIGN WHILE
##
## Ends in an error in state: 543.
##
## range -> UPPER ASSIGN constr_expression COMMA LOWER ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN constr_expression COMMA LOWER ASSIGN
##

Numerical expression expected after '=' in a lower expression.

program: DATABLOCK LBRACE VECTOR LABRACK UPPER ASSIGN TRUNCATE COMMA LOWER ASSIGN TRUNCATE COMMA
##
## Ends in an error in state: 544.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## range -> UPPER ASSIGN constr_expression COMMA LOWER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## UPPER ASSIGN constr_expression COMMA LOWER ASSIGN constr_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 513, spurious reduction of production constr_expression -> identifier 
##

Expected '>' after lower expression.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN REALNUMERAL WHILE
##
## Ends in an error in state: 554.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE COMMA ]
## offset_mult -> MULTIPLIER ASSIGN constr_expression . COMMA OFFSET ASSIGN constr_expression [ RABRACK ]
## offset_mult -> MULTIPLIER ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN constr_expression
##

Expected '>' after multiplier expression.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN TRUNCATE COMMA WHILE
##
## Ends in an error in state: 555.
##
## offset_mult -> MULTIPLIER ASSIGN constr_expression COMMA . OFFSET ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN constr_expression COMMA
##

Expected '>' or offset expression after multiplier expression.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN TRUNCATE COMMA OFFSET WHILE
##
## Ends in an error in state: 556.
##
## offset_mult -> MULTIPLIER ASSIGN constr_expression COMMA OFFSET . ASSIGN constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN constr_expression COMMA OFFSET
##

'=' expected after 'multiplier' keyword.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN TRUNCATE COMMA OFFSET ASSIGN WHILE
##
## Ends in an error in state: 557.
##
## offset_mult -> MULTIPLIER ASSIGN constr_expression COMMA OFFSET ASSIGN . constr_expression [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN constr_expression COMMA OFFSET ASSIGN
##

Numerical expression expected after '=' in a multiplier expression.

program: DATABLOCK LBRACE VECTOR LABRACK MULTIPLIER ASSIGN TRUNCATE COMMA OFFSET ASSIGN TRUNCATE COMMA
##
## Ends in an error in state: 558.
##
## constr_expression -> constr_expression . PLUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MINUS constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . DIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . MODULO constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTTIMES constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . ELTDIVIDE constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . HAT constr_expression [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . TRANSPOSE [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## constr_expression -> constr_expression . LBRACK indexes RBRACK [ TRANSPOSE TIMES RABRACK PLUS MODULO MINUS LDIVIDE LBRACK HAT ELTTIMES ELTDIVIDE DIVIDE ]
## offset_mult -> MULTIPLIER ASSIGN constr_expression COMMA OFFSET ASSIGN constr_expression . [ RABRACK ]
##
## The known suffix of the stack is as follows:
## MULTIPLIER ASSIGN constr_expression COMMA OFFSET ASSIGN constr_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 513, spurious reduction of production constr_expression -> identifier 
##

Expected '>' after multiplier expression.