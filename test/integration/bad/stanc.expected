  $ ../../../../install/default/bin/stanc array-expr-decl-bad1.stan
Syntax error in 'array-expr-decl-bad1.stan', line 2, column 9 to column 10, parsing error:
   -------------------------------------------------
     1:  data {
     2:    array[1:2,2,:] real x;
                  ^
     3:  }
   -------------------------------------------------

Ill-formed phrase. Found an expression. This can be followed by a ",", a "}", a ")", a "]", a "[" or an infix or postfix operator.
  $ ../../../../install/default/bin/stanc array-expr-decl-bad2.stan
Syntax error in 'array-expr-decl-bad2.stan', line 2, column 2 to column 10, parsing error:
   -------------------------------------------------
     1:  data {
     2:    blahblah[1,2] real x;
           ^
     3:  }
   -------------------------------------------------

Invalid type in declaration. Valid types:
  int, real, vector, row_vector, matrix,
  unit_vector, simplex, ordered, positive_ordered,
  corr_matrix, cov_matrix, cholesky_factor_corr, cholesky_factor_cov
optionally preceded by a single array[...]
  $ ../../../../install/default/bin/stanc array-expr-decl-bad3.stan
Syntax error in 'array-expr-decl-bad3.stan', line 2, column 2 to column 6, parsing error:
   -------------------------------------------------
     1:  data {
     2:    asdf real x;
           ^
     3:  }
   -------------------------------------------------

Invalid type in declaration. Valid types:
  int, real, vector, row_vector, matrix,
  unit_vector, simplex, ordered, positive_ordered,
  corr_matrix, cov_matrix, cholesky_factor_corr, cholesky_factor_cov
optionally preceded by a single array[...]
  $ ../../../../install/default/bin/stanc array-multi-decl-bad.stan
Syntax error in 'array-multi-decl-bad.stan', line 2, column 11 to column 12, parsing error:
   -------------------------------------------------
     1:  model {
     2:    real x[5], y;
                    ^
     3:  }
   -------------------------------------------------

Expected  ";" or assignment.
  $ ../../../../install/default/bin/stanc array-multi-decl-bad2.stan
Syntax error in 'array-multi-decl-bad2.stan', line 2, column 21 to column 22, parsing error:
   -------------------------------------------------
     1:  model {
     2:    real x[3] = {1,2,3}, y;
                              ^
     3:  }
   -------------------------------------------------

Multiple declarations are not allowed when array dimensions are given in TYPE IDENTIFIER[DIMENSIONS] form.
When all declarations share array dimensions, use 'array[DIMENSIONS] TYPE IDENTIFIER' form, otherwise use separate declarations.
  $ ../../../../install/default/bin/stanc array_expr_bad1.stan
Semantic error in 'array_expr_bad1.stan', line 2, column 2 to column 38:
   -------------------------------------------------
     1:  transformed data {
     2:    array[3,2] real td_arr32 = { 1, 3 };
           ^
     3:  }
     4:  model {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[,] real and rhs has type array[] int
  $ ../../../../install/default/bin/stanc array_expr_bad2.stan
Semantic error in 'array_expr_bad2.stan', line 2, column 40 to column 41:
   -------------------------------------------------
     1:  transformed data {
     2:    array[3,2] real td_arr32 = {{ 1, 3 }, 1, 2 };
                                                 ^
     3:  }
     4:  model {
   -------------------------------------------------

Array expression must have entries of consistent type. Expected array[] int but found int.
  $ ../../../../install/default/bin/stanc assigment-to-function-stanmath.stan
Semantic error in 'assigment-to-function-stanmath.stan', line 8, column 5 to column 15:
   -------------------------------------------------
     6:     void baz(){
     7:       // NB: putting this in later blocks produce an error due to assigning to a global variable
     8:       foo = pow;
              ^
     9:     }
    10:  }
   -------------------------------------------------

Cannot assign a function type '<Stan Math function>' to variable 'foo'.
  $ ../../../../install/default/bin/stanc assign_real_to_int.stan
Semantic error in 'assign_real_to_int.stan', line 11, column 2 to column 8:
   -------------------------------------------------
     9:    real b;
    10:    b = 3.2;
    11:    a = b;
           ^
    12:  }
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real
  $ ../../../../install/default/bin/stanc assignment-to-function.stan
Semantic error in 'assignment-to-function.stan', line 12, column 5 to column 15:
   -------------------------------------------------
    10:     void baz(){
    11:       // NB: putting this in later blocks produce an error due to assigning to a global variable
    12:       foo = bar;
              ^
    13:     }
    14:  }
   -------------------------------------------------

Cannot assign a function type '(int) => real' to variable 'foo'.
  $ ../../../../install/default/bin/stanc bad_fundef_returntypes1.stan
Semantic error in 'bad_fundef_returntypes1.stan', line 2, column 13 to line 6, column 3:
   -------------------------------------------------
     1:  functions {
     2:    real foo() {
                      ^
     3:      return {1};
     4:      real x  = 54;
   -------------------------------------------------

Branches of function definition need to have the same return type. Instead, found return types array[] int and int.
  $ ../../../../install/default/bin/stanc bad_fundef_returntypes2.stan
Semantic error in 'bad_fundef_returntypes2.stan', line 3, column 4 to line 6, column 18:
   -------------------------------------------------
     1:  functions {
     2:    real foo() {
     3:      if (215)
             ^
     4:        return 24;
     5:      else
   -------------------------------------------------

Branches of function definition need to have the same return type. Instead, found return types int and array[] int.
  $ ../../../../install/default/bin/stanc bad_fundef_returntypes3.stan
Semantic error in 'bad_fundef_returntypes3.stan', line 2, column 13 to line 6, column 3:
   -------------------------------------------------
     1:  functions {
     2:    real foo() {
                      ^
     3:      if (215)
     4:        return 24;
   -------------------------------------------------

Branches of function definition need to have the same return type. Instead, found return types int and array[] int.
  $ ../../../../install/default/bin/stanc bad_prob_fun_suffix.stan
Semantic error in 'bad_prob_fun_suffix.stan', line 10, column 2 to column 19:
   -------------------------------------------------
     8:  }
     9:  model {
    10:    theta ~ foo(1.4);
           ^
    11:  }
   -------------------------------------------------

Ill-typed arguments to '~' statement. No distribution 'foo' was found.
  $ ../../../../install/default/bin/stanc bad_var_assignment_type1.stan
Semantic error in 'bad_var_assignment_type1.stan', line 4, column 2 to column 8:
   -------------------------------------------------
     2:    vector[5] y;
     3:    array[5] real z;
     4:    z = y;
           ^
     5:  }
     6:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] real and rhs has type vector
  $ ../../../../install/default/bin/stanc bad_var_assignment_type2.stan
Semantic error in 'bad_var_assignment_type2.stan', line 6, column 2 to column 8:
   -------------------------------------------------
     4:  transformed data {
     5:    array[5] real z;
     6:    z = y;
           ^
     7:  }
     8:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] real and rhs has type array[,] real
  $ ../../../../install/default/bin/stanc bad_var_assignment_vec_arr.stan
Semantic error in 'bad_var_assignment_vec_arr.stan', line 10, column 2 to column 35:
   -------------------------------------------------
     8:  
     9:    a1 = tail(v, K-1) - head(v, K-1);
    10:    a2 = tail(v, K-1) - head(v, K-1);
           ^
    11:  }
    12:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] real and rhs has type vector
  $ ../../../../install/default/bin/stanc bad_while.stan
Syntax error in 'bad_while.stan', line 3, column 24 to column 25, parsing error:
   -------------------------------------------------
     1:  data {
     2:    real x;
     3:    cholesky_factor_corr[x~normal(0,1)] y;
                                 ^
     4:    }
   -------------------------------------------------

Expected "[" expression "]" for size of cholesky_factor_corr.
  $ ../../../../install/default/bin/stanc binomial_coefficient_sample.stan
Semantic error in 'binomial_coefficient_sample.stan', line 5, column 2 to column 30:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    y ~ binomial_coefficient(5);
           ^
     6:  }
   -------------------------------------------------

Ill-typed arguments to '~' statement. No distribution 'binomial_coefficient' was found.
  $ ../../../../install/default/bin/stanc break1.stan
Semantic error in 'break1.stan', line 4, column 2 to column 8:
   -------------------------------------------------
     2:  transformed data {
     3:    int n;
     4:    break;
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break2.stan
Semantic error in 'break2.stan', line 4, column 2 to column 8:
   -------------------------------------------------
     2:  transformed parameters {
     3:    real y;
     4:    break;
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break3.stan
Semantic error in 'break3.stan', line 6, column 2 to column 8:
   -------------------------------------------------
     4:  model {
     5:    int n;
     6:    break;
           ^
     7:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break4.stan
Semantic error in 'break4.stan', line 6, column 2 to column 8:
   -------------------------------------------------
     4:  generated quantities {
     5:    int n;
     6:    break;
           ^
     7:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break5.stan
Semantic error in 'break5.stan', line 4, column 4 to column 10:
   -------------------------------------------------
     2:  functions {
     3:    int foo(int n) {
     4:      break;
             ^
     5:    }
     6:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break6.stan
Semantic error in 'break6.stan', line 7, column 4 to column 10:
   -------------------------------------------------
     5:  model {
     6:    if (1)
     7:      break;
             ^
     8:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break7.stan
Semantic error in 'break7.stan', line 10, column 4 to column 10:
   -------------------------------------------------
     8:      z = 10;
     9:    else if (0)
    10:      break;
             ^
    11:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc break8.stan
Semantic error in 'break8.stan', line 12, column 4 to column 10:
   -------------------------------------------------
    10:      z = 5;
    11:    else
    12:      break;
             ^
    13:  }
   -------------------------------------------------

Break statements may only be used in loops.
  $ ../../../../install/default/bin/stanc ccdf-sample.stan
Semantic error in 'ccdf-sample.stan', line 5, column 2 to column 24:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    y ~ weibull_ccdf(1,1);
           ^
     6:  }
   -------------------------------------------------

CDF and CCDF functions may not be used with sampling notation. Use target += weibull_ccdf_log(...) instead.
  $ ../../../../install/default/bin/stanc cdf-sample.stan
Semantic error in 'cdf-sample.stan', line 5, column 2 to column 23:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    y ~ normal_cdf(1, 1);
           ^
     6:  }
   -------------------------------------------------

CDF and CCDF functions may not be used with sampling notation. Use target += normal_cdf_log(...) instead.
  $ ../../../../install/default/bin/stanc complex_mat_bad.stan
Semantic error in 'complex_mat_bad.stan', line 7, column 2 to column 18:
   -------------------------------------------------
     5:  
     6:  model {
     7:    real x = Z[1,1];
           ^
     8:    target += x;
     9:  }
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type real and rhs has type complex
  $ ../../../../install/default/bin/stanc conditional_condition_bad_1.stan
Semantic error in 'conditional_condition_bad_1.stan', line 6, column 6 to column 7:
   -------------------------------------------------
     4:  model {
     5:    vector[3] x;
     6:    if (x)                   // ERROR HERE
               ^
     7:      y ~ normal(0,1);
     8:  }
   -------------------------------------------------

Condition in conditional must be of type int or real. Instead found type vector.
  $ ../../../../install/default/bin/stanc conditional_condition_bad_2.stan
Semantic error in 'conditional_condition_bad_2.stan', line 9, column 11 to column 12:
   -------------------------------------------------
     7:    if (z)
     8:      y ~ normal(0,1);
     9:    else if (x)               // ERROR HERE
                    ^
    10:      y ~ normal(0,1);
    11:  }
   -------------------------------------------------

Condition in conditional must be of type int or real. Instead found type vector.
  $ ../../../../install/default/bin/stanc continue1.stan
Semantic error in 'continue1.stan', line 4, column 2 to column 11:
   -------------------------------------------------
     2:  transformed data {
     3:    int n;
     4:    continue;
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Continue statements may only be used in loops.
  $ ../../../../install/default/bin/stanc continue2.stan
Semantic error in 'continue2.stan', line 4, column 2 to column 11:
   -------------------------------------------------
     2:  transformed parameters {
     3:    real y;
     4:    continue;
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Continue statements may only be used in loops.
  $ ../../../../install/default/bin/stanc continue3.stan
Semantic error in 'continue3.stan', line 6, column 2 to column 11:
   -------------------------------------------------
     4:  model {
     5:    int n;
     6:    continue;
           ^
     7:  }
   -------------------------------------------------

Continue statements may only be used in loops.
  $ ../../../../install/default/bin/stanc continue4.stan
Semantic error in 'continue4.stan', line 6, column 2 to column 11:
   -------------------------------------------------
     4:  generated quantities {
     5:    int n;
     6:    continue;
           ^
     7:  }
   -------------------------------------------------

Continue statements may only be used in loops.
  $ ../../../../install/default/bin/stanc continue5.stan
Semantic error in 'continue5.stan', line 4, column 4 to column 13:
   -------------------------------------------------
     2:  functions {
     3:    int foo(int n) {
     4:      continue;
             ^
     5:    }
     6:  }
   -------------------------------------------------

Continue statements may only be used in loops.
  $ ../../../../install/default/bin/stanc declare-define-param-block.stan
Syntax error in 'declare-define-param-block.stan', line 6, column 11 to column 14, parsing error:
   -------------------------------------------------
     4:  parameters {
     5:    real y;
     6:    real z = d_r;
                    ^
     7:  }
     8:  model {
   -------------------------------------------------

Cannot assign to variables in the `data` or `parameters` blocks; expected ';'
after variable declaration.
  $ ../../../../install/default/bin/stanc declare-define-var-double-1.stan
Semantic error in 'declare-define-var-double-1.stan', line 5, column 2 to column 18:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    real td_a1 = a1;   // scalar = array - bad
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type real and rhs has type array[] real
  $ ../../../../install/default/bin/stanc declare-define-var-double-2.stan
Semantic error in 'declare-define-var-double-2.stan', line 5, column 2 to column 23:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    vector[2] td_a1 = a1;   // vector = array - bad
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type array[] real
  $ ../../../../install/default/bin/stanc declare-define-var-double-3.stan
Syntax error in 'declare-define-var-double-3.stan', line 3, column 12 to column 15, parsing error:
   -------------------------------------------------
     1:  data {
     2:    array[2] real a1;
     3:    real a2 = 1.0; // cannot assign in data block
                     ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Cannot assign to variables in the `data` or `parameters` blocks; expected ';'
after variable declaration.
  $ ../../../../install/default/bin/stanc declare-define-var-double-4.stan
Syntax error in 'declare-define-var-double-4.stan', line 6, column 12 to column 15, parsing error:
   -------------------------------------------------
     4:  parameters {
     5:    real y;
     6:    real a2 = 1.0; // cannot assign in parameters block
                     ^
     7:  }
     8:  model {
   -------------------------------------------------

Cannot assign to variables in the `data` or `parameters` blocks; expected ';'
after variable declaration.
  $ ../../../../install/default/bin/stanc declare-define-var-int-1.stan
Semantic error in 'declare-define-var-int-1.stan', line 5, column 2 to column 17:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    int td_a1 = a1;   // int_d = real_d - bad
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real
  $ ../../../../install/default/bin/stanc declare-define-var-int-2.stan
Semantic error in 'declare-define-var-int-2.stan', line 5, column 2 to column 18:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    int td_a1 = 4.1;    // int_d = real val - bad
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real
  $ ../../../../install/default/bin/stanc declare-define-var-int-3.stan
Semantic error in 'declare-define-var-int-3.stan', line 2, column 2 to column 25:
   -------------------------------------------------
     1:  transformed data {
     2:    array[2] int td_a1 = 1;   // array = scalar - bad
           ^
     3:  }
     4:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] int and rhs has type int
  $ ../../../../install/default/bin/stanc declare-define-var-int-4.stan
Semantic error in 'declare-define-var-int-4.stan', line 5, column 2 to column 17:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    int td_a1 = a1;   // scalar = array - bad
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type array[] int
  $ ../../../../install/default/bin/stanc declare-define-var-matrix-1.stan
Semantic error in 'declare-define-var-matrix-1.stan', line 5, column 2 to column 23:
   -------------------------------------------------
     3:  }
     4:  transformed data {
     5:    vector[7] td_b1 = b0;  // base type mismatch
           ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type matrix
  $ ../../../../install/default/bin/stanc declare-define-var-vec-1.stan
Semantic error in 'declare-define-var-vec-1.stan', line 6, column 2 to column 23:
   -------------------------------------------------
     4:  }
     5:  transformed data {
     6:    vector[7] td_b1 = c0;  // base type mismatch
           ^
     7:  }
     8:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type vector and rhs has type row_vector
  $ ../../../../install/default/bin/stanc err-bare-type-close-square.stan
Syntax error in 'err-bare-type-close-square.stan', line 2, column 8 to column 11, parsing error:
   -------------------------------------------------
     1:  functions {
     2:    real[ foo(int n) { return n; }
                 ^
     3:  }
     4:  model {
   -------------------------------------------------

"[" (list of commas) "]" expected in unsized return type of function definition.
  $ ../../../../install/default/bin/stanc err-close-block.stan
Syntax error in 'err-close-block.stan', line 3, column 0 to column 5, parsing error:
   -------------------------------------------------
     1:  functions {
     2:  
     3:  model {
         ^
     4:  }
   -------------------------------------------------

Function forward declaration, definition or "}" expected after "functions {".
  $ ../../../../install/default/bin/stanc err-close-function-args.stan
Syntax error in 'err-close-function-args.stan', line 2, column 18 to column 19, parsing error:
   -------------------------------------------------
     1:  functions {
     2:    real foo(real x {
                           ^
     3:      return 1.0;
     4:    }
   -------------------------------------------------

"," or ")" expected after function argument declaration.
  $ ../../../../install/default/bin/stanc err-decl-double-params.stan
Syntax error in 'err-decl-double-params.stan', line 4, column 0 to column 1, parsing error:
   -------------------------------------------------
     2:    real y;
     3:    lijaflj
     4:  }
         ^
     5:  model {
     6:  }
   -------------------------------------------------

Ill-formed phrase. Found L-value. This can be completed in many ways.
  $ ../../../../install/default/bin/stanc err-decl-double.stan
Syntax error in 'err-decl-double.stan', line 2, column 2 to column 8, parsing error:
   -------------------------------------------------
     1:  data {
     2:    double y;
           ^
     3:  }
     4:  model {
   -------------------------------------------------

Invalid type in declaration. Valid types:
  int, real, vector, row_vector, matrix,
  unit_vector, simplex, ordered, positive_ordered,
  corr_matrix, cov_matrix, cholesky_factor_corr, cholesky_factor_cov
optionally preceded by a single array[...]
  $ ../../../../install/default/bin/stanc err-decl-matrix-2.stan
Semantic error in 'err-decl-matrix-2.stan', line 2, column 13 to column 17:
   -------------------------------------------------
     1:  data {
     2:    real<lower=3[3]> y;
                      ^
     3:  }
     4:  model {
   -------------------------------------------------

Too many indexes, expression dimensions=0, indexes found=1.
  $ ../../../../install/default/bin/stanc err-decl-matrix.stan
Syntax error in 'err-decl-matrix.stan', line 2, column 10 to column 11, parsing error:
   -------------------------------------------------
     1:  data {
     2:    matrix[3] y;
                   ^
     3:  }
     4:  model {
   -------------------------------------------------

Expected "[" expression "," expression "]" for sizes of matrix.
  $ ../../../../install/default/bin/stanc err-decl-no-expression.stan
Syntax error in 'err-decl-no-expression.stan', line 2, column 13 to column 14, parsing error:
   -------------------------------------------------
     1:  data {
     2:    real<lower=> y;
                      ^
     3:  }
     4:  model {
   -------------------------------------------------

An expression (not containing binary logical operators) is expected for type lower bound.
  $ ../../../../install/default/bin/stanc err-decl-vector-2.stan
Syntax error in 'err-decl-vector-2.stan', line 2, column 10 to column 11, parsing error:
   -------------------------------------------------
     1:  data {
     2:    vector[3,4] y;
                   ^
     3:  }
     4:  model {
   -------------------------------------------------

Expected "[" expression "]" for vector size.
  $ ../../../../install/default/bin/stanc err-decl-vector.stan
Syntax error in 'err-decl-vector.stan', line 2, column 9 to column 10, parsing error:
   -------------------------------------------------
     1:  data {
     2:    vector a[3];
                  ^
     3:  }
     4:  model {
   -------------------------------------------------

Expected "[" expression "]" for vector size.
  $ ../../../../install/default/bin/stanc err-double-dims.stan
Semantic error in 'err-double-dims.stan', line 2, column 8 to column 11:
   -------------------------------------------------
     1:  transformed data {
     2:    array[2.3] real y;
                 ^
     3:  }
     4:  model {
   -------------------------------------------------

Array sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc err-expected-bracket.stan
Syntax error in 'err-expected-bracket.stan', line 4, column 0 to column 0, parsing error:
   -------------------------------------------------
     2:  }
     3:  generated quantities 
         ^
   -------------------------------------------------

Expected "{" after block keyword.
  $ ../../../../install/default/bin/stanc err-expected-end-of-model.stan
Syntax error in 'err-expected-end-of-model.stan', line 3, column 0 to column 3, parsing error:
   -------------------------------------------------
     1:  model {
     2:  }
     3:  foo
         ^
   -------------------------------------------------

Expected "generated quantities {" or end of file after end of model block.
  $ ../../../../install/default/bin/stanc err-expected-generated.stan
Syntax error in 'err-expected-generated.stan', line 3, column 0 to column 9, parsing error:
   -------------------------------------------------
     1:  model {
     2:  }
     3:  generated {
         ^
     4:  }
   -------------------------------------------------

Expected "generated quantities {" or end of file after end of model block.
  $ ../../../../install/default/bin/stanc err-expected-model.stan
Syntax error in 'err-expected-model.stan', line 8, column 0 to column 5, parsing error:
   -------------------------------------------------
     6:    n = 2;
     7:  }
     8:  model {
         ^
     9:  }
   -------------------------------------------------

Expected end of file after end of generated quantities block.
  $ ../../../../install/default/bin/stanc err-fun-bare-types-int.stan
Syntax error in 'err-fun-bare-types-int.stan', line 2, column 8 to column 9, parsing error:
   -------------------------------------------------
     1:  functions {
     2:    array[3] real foo() {
                 ^
     3:      array[3] real a;
     4:      return a;
   -------------------------------------------------

"[" (list of commas) "]" expected in unsized return type of function definition.
  $ ../../../../install/default/bin/stanc err-if-else-double-else.stan
Syntax error in 'err-if-else-double-else.stan', line 4, column 2 to column 6, parsing error:
   -------------------------------------------------
     2:    real y;
     3:    y = 3;
     4:    else y = 3;
           ^
     5:    else y = 4;
     6:  }
   -------------------------------------------------

Ill-formed block. Expected a statement, variable declaration, or just "}".
  $ ../../../../install/default/bin/stanc err-if-else-no-cond.stan
Syntax error in 'err-if-else-no-cond.stan', line 3, column 6 to column 7, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    real y;
     3:    if () y = 2;
               ^
     4:  }
     5:  model {
   -------------------------------------------------

Expected expression for test of conditional control flow construct.
  $ ../../../../install/default/bin/stanc err-if-else.stan
Syntax error in 'err-if-else.stan', line 3, column 8 to column 9, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    real y;
     3:    if (1 y = 2;
                 ^
     4:  }
     5:  model {
   -------------------------------------------------

Expected ")" after test expression of conditional control flow construct.
  $ ../../../../install/default/bin/stanc err-integrate-ode-comma.stan
Syntax error in 'err-integrate-ode-comma.stan', line 9, column 46 to column 51, parsing error:
   -------------------------------------------------
     7:    array[2] real x;
     8:    array[4] int x_int;
     9:    y = integrate_ode_rk45(foo,y0,t0,ts,theta,x x_int);
                                                       ^
    10:  }
    11:  model {
   -------------------------------------------------

Ill-formed expression. Found identifier. There are many ways to complete this to a well-formed expression.
  $ ../../../../install/default/bin/stanc err-minus-types.stan
Semantic error in 'err-minus-types.stan', line 4, column 6 to column 11:
   -------------------------------------------------
     2:    vector[3] y;
     3:    matrix[3,4] z;
     4:    z = y - z;
               ^
     5:  }
     6:  model {
   -------------------------------------------------

Ill-typed arguments supplied to infix operator -. Available signatures: 
(int, int) => int
(real, real) => real
(real, vector) => vector
(vector, real) => vector
(vector, vector) => vector
(complex, complex) => complex
(real, row_vector) => row_vector
(row_vector, real) => row_vector
(row_vector, row_vector) => row_vector
(real, matrix) => matrix
(matrix, real) => matrix
(matrix, matrix) => matrix
(complex_vector, complex_vector) => complex_vector
(complex_row_vector, complex_row_vector) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: vector, matrix.
  $ ../../../../install/default/bin/stanc err-nested-parens-close.stan
Syntax error in 'err-nested-parens-close.stan', line 3, column 12 to column 13, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    real x;
     3:    x = (2 + 3;
                     ^
     4:  }
   -------------------------------------------------

Expression or range of expressions followed by ")" expected after "(".
  $ ../../../../install/default/bin/stanc err-nested-parens.stan
Syntax error in 'err-nested-parens.stan', line 3, column 12 to column 13, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    real x;
     3:    x = 2 + (());
                     ^
     4:  }
   -------------------------------------------------

Expression expected after "(".
  $ ../../../../install/default/bin/stanc err-no-cond-else-if.stan
Syntax error in 'err-no-cond-else-if.stan', line 5, column 12 to column 13, parsing error:
   -------------------------------------------------
     3:    if (1) {
     4:      x = 2;
     5:    } else if {
                     ^
     6:      x = 3;
     7:    }
   -------------------------------------------------

"(" expression ")" expected after "if".
  $ ../../../../install/default/bin/stanc err-no-cond.stan
Syntax error in 'err-no-cond.stan', line 3, column 6 to column 7, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    real x;
     3:    if ()
               ^
     4:      x = 2;
     5:  }
   -------------------------------------------------

Expected expression for test of conditional control flow construct.
  $ ../../../../install/default/bin/stanc err-no-statement.stan
Syntax error in 'err-no-statement.stan', line 4, column 0 to column 1, parsing error:
   -------------------------------------------------
     2:    real x;
     3:    if (1) 
     4:  }
         ^
     5:  model {
     6:  }
   -------------------------------------------------

Ill-formed statement. Statement expected for true branch of conditional.
  $ ../../../../install/default/bin/stanc err-non-int-dims.stan
Semantic error in 'err-non-int-dims.stan', line 4, column 10 to column 13:
   -------------------------------------------------
     2:    array[2,3] real y;
     3:    real x;
     4:    x = y[1,2.3];
                   ^
     5:  }
     6:  model {
   -------------------------------------------------

Index must be of type int or int[] or must be a range. Instead found type real.
  $ ../../../../install/default/bin/stanc err-open-block.stan
Syntax error in 'err-open-block.stan', line 1, column 10 to column 13, parsing error:
   -------------------------------------------------
     1:  functions foo {
                   ^
     2:  }
     3:  model {
   -------------------------------------------------

"{" expected after "functions".
  $ ../../../../install/default/bin/stanc err-second-operand-plus.stan
Syntax error in 'err-second-operand-plus.stan', line 4, column 0 to column 1, parsing error:
   -------------------------------------------------
     2:    int n;
     3:    n = 3 ||
     4:  }
         ^
     5:  model {
     6:  }
   -------------------------------------------------

Found an incomplete binary expression - are you missing the right hand side?
  $ ../../../../install/default/bin/stanc err-target-plusequals-scope.stan
Semantic error in 'err-target-plusequals-scope.stan', line 4, column 2 to column 14:
   -------------------------------------------------
     2:    real x;
     3:    x = 2.0;
     4:    target += x;
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc err-transformed-params.stan
Syntax error in 'err-transformed-params.stan', line 4, column 0 to column 11, parsing error:
   -------------------------------------------------
     2:    real y;
     3:  }
     4:  transformed {
         ^
     5:  }
     6:  model {
   -------------------------------------------------

"transformed parameters {", "model {" or "generated quantities {" expected after end of parameters block.
  $ ../../../../install/default/bin/stanc expect_statement_seq_close_brace.stan
Syntax error in 'expect_statement_seq_close_brace.stan', line 6, column 0 to column 0, parsing error:
   -------------------------------------------------
     4:  model {
     5:    y ~ normal(0,1);
         ^
   -------------------------------------------------

Variable declaration, statement or "}" expected.
  $ ../../../../install/default/bin/stanc expect_statement_seq_close_brace_2.stan
Syntax error in 'expect_statement_seq_close_brace_2.stan', line 17, column 0 to column 0, parsing error:
   -------------------------------------------------
    15:  
    16:  
         ^
   -------------------------------------------------

Variable declaration, statement or "}" expected.
  $ ../../../../install/default/bin/stanc expect_statement_seq_close_brace_3.stan
Syntax error in 'expect_statement_seq_close_brace_3.stan', line 8, column 0 to column 10, parsing error:
   -------------------------------------------------
     6:    }
     7:  
     8:  parameters {
         ^
     9:    real y;
    10:  }
   -------------------------------------------------

Ill-formed block. Expected a statement, variable declaration, or just "}".
  $ ../../../../install/default/bin/stanc expect_statement_seq_close_brace_4.stan
Syntax error in 'expect_statement_seq_close_brace_4.stan', line 10, column 0 to column 0, parsing error:
   -------------------------------------------------
     8:    array[2,3] int vs;
     9:  
         ^
   -------------------------------------------------

Ill-formed block. Expected a statement, variable declaration, or just "}".
  $ ../../../../install/default/bin/stanc experiment.stan
Semantic error in 'experiment.stan', line 12, column 4 to column 11:
   -------------------------------------------------
    10:  model {
    11:    for (i in 1:4) {
    12:      foo(3);
             ^
    13:    }
    14:  }
   -------------------------------------------------

A non-returning function was expected but a returning function 'foo' was supplied.
  $ ../../../../install/default/bin/stanc fun-return-typ3.stan
Semantic error in 'fun-return-typ3.stan', line 2, column 13 to column 24:
   -------------------------------------------------
     1:  functions {
     2:    real foo() reject("");
                      ^
     3:  }
   -------------------------------------------------

Function definitions must be wrapped in curly braces.
  $ ../../../../install/default/bin/stanc fun-return-type1.stan
Semantic error in 'fun-return-type1.stan', line 2, column 2 to column 72:
   -------------------------------------------------
     1:  functions {
     2:    real foo() { if (1) reject(""); else {if (1) reject(""); return {1};}}
           ^
     3:  }
   -------------------------------------------------

Function bodies must contain a return statement of correct type in every branch.
  $ ../../../../install/default/bin/stanc fun-return-type2.stan
Semantic error in 'fun-return-type2.stan', line 2, column 2 to column 72:
   -------------------------------------------------
     1:  functions {
     2:    real foo() { if (1) reject(""); else {if (1) return {5}; reject("");}}
           ^
     3:  }
   -------------------------------------------------

Function bodies must contain a return statement of correct type in every branch.
  $ ../../../../install/default/bin/stanc functions-bad0.stan
Syntax error in 'functions-bad0.stan', line 2, column 11 to column 15, parsing error:
   -------------------------------------------------
     1:  functions {
     2:    real foo(void x) {
                    ^
     3:      return 1.0;
     4:    }
   -------------------------------------------------

An argument declaration (unsized and unconstrained type followed by identifier) is expected.
  $ ../../../../install/default/bin/stanc functions-bad1.stan
Semantic error in 'functions-bad1.stan', line 6, column 2 to column 20:
   -------------------------------------------------
     4:      return x;
     5:    }
     6:    real flib(real x); // error redeclaring function
           ^
     7:  }
     8:  parameters {
   -------------------------------------------------

Function 'flib' has already been declared to for signature (real) => real
  $ ../../../../install/default/bin/stanc functions-bad11.stan
Semantic error in 'functions-bad11.stan', line 3, column 4 to column 20:
   -------------------------------------------------
     1:  functions {
     2:    void badlp(real x) {
     3:      x ~ normal(0,1);
             ^
     4:      return;
     5:    }
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc functions-bad12.stan
Semantic error in 'functions-bad12.stan', line 3, column 4 to column 33:
   -------------------------------------------------
     1:  functions {
     2:    void badlp(real x) {
     3:      target += normal_lpdf(x|0,1);
             ^
     4:      return;
     5:    }
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc functions-bad13.stan
Semantic error in 'functions-bad13.stan', line 3, column 4 to column 10:
   -------------------------------------------------
     1:  functions {
     2:    real badassign(real x) {
     3:      x = 5;
             ^
     4:      return x;
     5:    }
   -------------------------------------------------

Cannot assign to function argument or loop identifier 'x'.
  $ ../../../../install/default/bin/stanc functions-bad14.stan
Semantic error in 'functions-bad14.stan', line 5, column 2 to line 7, column 3:
   -------------------------------------------------
     3:      return x;
     4:    }
     5:    int abc(real x) {  // illegal redeclaration with same args
           ^
     6:      return 1;
     7:    }
   -------------------------------------------------

Function 'abc' cannot be overloaded by return type only. Previously used return type real
  $ ../../../../install/default/bin/stanc functions-bad15.stan
Semantic error in 'functions-bad15.stan', line 10, column 12 to column 29:
   -------------------------------------------------
     8:  }
     9:  model {
    10:    target += unit_normal_lp(y);
                     ^
    11:  }
   -------------------------------------------------

A returning function was expected but a non-returning function 'unit_normal_lp' was supplied.
  $ ../../../../install/default/bin/stanc functions-bad16.stan
Semantic error in 'functions-bad16.stan', line 2, column 2 to line 4, column 3:
   -------------------------------------------------
     1:  functions {
     2:    real square(real x) {
           ^
     3:      return x * x;
     4:    }
   -------------------------------------------------

Function 'square' is already declared in the Stan Math library with signature 
(real) => real
  $ ../../../../install/default/bin/stanc functions-bad17.stan
Semantic error in 'functions-bad17.stan', line 2, column 2 to line 4, column 3:
   -------------------------------------------------
     1:  functions {
     2:    vector bizbuz_lpdf(vector x) {
           ^
     3:      return exp(x);
     4:    }
   -------------------------------------------------

Real return type required for probability functions ending in _log, _lpdf, _lupdf, _lpmf, _lupmf, _cdf, _lcdf, or _lccdf.
  $ ../../../../install/default/bin/stanc functions-bad18.stan
Semantic error in 'functions-bad18.stan', line 7, column 7 to column 10:
   -------------------------------------------------
     5:  }
     6:  parameters {
     7:    real foo;  // should be name conflict here
                ^
     8:  }
     9:  model {
   -------------------------------------------------

Identifier 'foo' is already in use.
  $ ../../../../install/default/bin/stanc functions-bad19.stan
Semantic error in 'functions-bad19.stan', line 4, column 2 to line 6, column 3:
   -------------------------------------------------
     2:    real my_fun3(data real x);
     3:  
     4:    real my_fun3(real x) {
           ^
     5:      return 2 * x;
     6:    }
   -------------------------------------------------

Function 'my_fun3' has already been declared to for signature (real) => real
  $ ../../../../install/default/bin/stanc functions-bad2.stan
Semantic error in 'functions-bad2.stan', line 8, column 7 to column 13:
   -------------------------------------------------
     6:    }
     7:    
     8:    real barfoo(real x);
                ^
     9:    // error not defining barfoo
    10:  }
   -------------------------------------------------

Function is declared without specifying a definition.
  $ ../../../../install/default/bin/stanc functions-bad20.stan
Semantic error in 'functions-bad20.stan', line 4, column 2 to line 6, column 3:
   -------------------------------------------------
     2:    real my_fun3(real x);
     3:  
     4:    real my_fun3(data real x) {
           ^
     5:      return 2 * x;
     6:    }
   -------------------------------------------------

Function 'my_fun3' has already been declared to for signature (data real) => real
  $ ../../../../install/default/bin/stanc functions-bad21.stan
Semantic error in 'functions-bad21.stan', line 13, column 11 to column 21:
   -------------------------------------------------
    11:  }
    12:  model {
    13:    real z = my_fun3(y);
                    ^
    14:    y ~ normal(0,1);
    15:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'my_fun3':
(real)
Available signatures:
(data real) => real
  The first argument must be data-only. (Local variables are assumed to
  depend on parameters; same goes for function inputs unless they are marked
  with the keyword 'data'.)
  $ ../../../../install/default/bin/stanc functions-bad22-ode.stan
Semantic error in 'functions-bad22-ode.stan', line 15, column 11 to column 82:
   -------------------------------------------------
    13:    array[,] real do_integration_nested(array[] real y0, real t0, data array[] real ts, array[] real theta, matrix xmat_r) {
    14:      array[0] int x_i;
    15:      return(integrate_ode_rk45(sho, y0, t0, ts, theta, to_array_1d(xmat_r[1]), x_i));
                    ^
    16:    }
    17:  
   -------------------------------------------------

Ill-typed arguments supplied to function 'integrate_ode_rk45':
(<F1>, array[] real, real, array[] real, array[] real, array[] real,
 array[] int)
where F1 = (real, array[] real, array[] real, array[] real, array[] int) => array[] real
Available signatures:
(<F2>, array[] real, real, array[] real, array[] real, data array[] real,
 data array[] int) => array[,] real
where F2 = (real, array[] real, array[] real, data array[] real,
            data array[] int) => array[] real
  The 6th argument must be data-only. (Local variables are assumed to depend
  on parameters; same goes for function inputs unless they are marked with
  the keyword 'data'.)
(<F2>, array[] real, real, array[] real, array[] real, data array[] real,
 data array[] int, data real, data real, data real) => array[,] real
  Expected 10 arguments but found 7 arguments.
  $ ../../../../install/default/bin/stanc functions-bad23.stan
Semantic error in 'functions-bad23.stan', line 3, column 4 to column 11:
   -------------------------------------------------
     1:  functions {
     2:    real bar(real x) {
     3:      return;
             ^
     4:    }
     5:  }
   -------------------------------------------------

Void return statements may only be used inside non-returning function definitions.
  $ ../../../../install/default/bin/stanc functions-bad24.stan
Semantic error in 'functions-bad24.stan', line 3, column 4 to column 13:
   -------------------------------------------------
     1:  functions {
     2:    void bar(real x) {
     3:      return x;
             ^
     4:    }
     5:  }
   -------------------------------------------------

Expression return statements may only be used inside returning function definitions.
  $ ../../../../install/default/bin/stanc functions-bad25.stan
Syntax error in 'functions-bad25.stan', line 5, column 2 to column 3, parsing error:
   -------------------------------------------------
     3:      real y = x + 2.0;
     4:      return
     5:    }
           ^
     6:  }
   -------------------------------------------------

";" or expression followed by ";" expected after "return".
  $ ../../../../install/default/bin/stanc functions-bad26.stan
Syntax error in 'functions-bad26.stan', line 5, column 2 to column 3, parsing error:
   -------------------------------------------------
     3:      real y = x + 2.0;
     4:      return y
     5:    }
           ^
     6:  }
   -------------------------------------------------

Ill-formed return statement. ";" or expression followed by ";" expected after "return".
  $ ../../../../install/default/bin/stanc functions-bad3.stan
Syntax error in 'functions-bad3.stan', line 2, column 10 to column 11, parsing error:
   -------------------------------------------------
     1:  functions {
     2:    real foo^3(real x) {
                   ^
     3:      return 2.0 * x;
     4:    }
   -------------------------------------------------

"(" expected after function name.
  $ ../../../../install/default/bin/stanc functions-bad4.stan
Semantic error in 'functions-bad4.stan', line 10, column 2 to column 9:
   -------------------------------------------------
     8:  }
     9:  model {
    10:    bar(y);  // illegal use of non-void function as statement
           ^
    11:    y ~ normal(0,1);
    12:  }
   -------------------------------------------------

A non-returning function was expected but a returning function 'bar' was supplied.
  $ ../../../../install/default/bin/stanc functions-bad5.stan
Semantic error in 'functions-bad5.stan', line 11, column 6 to column 12:
   -------------------------------------------------
     9:  model {
    10:    real z;
    11:    z = baz(y); // illegal use of void function as expression
               ^
    12:    y ~ normal(0,1);
    13:  }
   -------------------------------------------------

A returning function was expected but a non-returning function 'baz' was supplied.
  $ ../../../../install/default/bin/stanc functions-bad6.stan
Semantic error in 'functions-bad6.stan', line 8, column 6 to column 17:
   -------------------------------------------------
     6:  transformed data {
     7:    real z;
     8:    z = foo_lp(1.3);
               ^
     9:  }
    10:  parameters {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc functions-bad7.stan
Semantic error in 'functions-bad7.stan', line 14, column 6 to column 20:
   -------------------------------------------------
    12:  generated quantities {
    13:    real z;
    14:    z = barfoo_lp(1.3);
               ^
    15:  }
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc get-lp-target-data.stan
Semantic error in 'get-lp-target-data.stan', line 2, column 19 to column 27:
   -------------------------------------------------
     1:  transformed data {
     2:    print("target=", target());
                            ^
     3:  }
     4:  parameters {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc get_lp_bad_scope1.stan
Semantic error in 'get_lp_bad_scope1.stan', line 3, column 6 to column 14:
   -------------------------------------------------
     1:  transformed data {
     2:    real y;
     3:    y = target();
               ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc get_lp_bad_scope2.stan
Semantic error in 'get_lp_bad_scope2.stan', line 3, column 15 to column 23:
   -------------------------------------------------
     1:  functions {
     2:    real foo(real x) {
     3:      return x + target();
                        ^
     4:    }
     5:  }
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc local_var_constraint.stan
Syntax error in 'local_var_constraint.stan', line 5, column 12 to column 13, parsing error:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    row_vector<lower=0,upper=1>[3] a[3];
                     ^
     6:    y ~ normal(0, 1);
     7:  }
   -------------------------------------------------

Expected "[" expression "]" for row vector size.
  $ ../../../../install/default/bin/stanc local_var_constraint2.stan
Syntax error in 'local_var_constraint2.stan', line 5, column 8 to column 9, parsing error:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    vector<lower=0,upper=1>[3] a[3];
                 ^
     6:    y ~ normal(0, 1);
     7:  }
   -------------------------------------------------

Expected "[" expression "]" for vector size.
  $ ../../../../install/default/bin/stanc local_var_constraint3.stan
Syntax error in 'local_var_constraint3.stan', line 5, column 8 to column 9, parsing error:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    matrix<lower=0,upper=1>[3,4] a[5];
                 ^
     6:    y ~ normal(0, 1);
     7:  }
   -------------------------------------------------

Expected "[" expression "," expression "]" for sizes of matrix.
  $ ../../../../install/default/bin/stanc local_var_constraint4.stan
Syntax error in 'local_var_constraint4.stan', line 5, column 6 to column 7, parsing error:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    real<lower=0,upper=1> a;
               ^
     6:    y ~ normal(0, 1);
     7:  }
   -------------------------------------------------

Identifier expected after sized type in local (or model block) variable declaration. (No transformations/constraints allowed.)
  $ ../../../../install/default/bin/stanc lp-error.stan
Semantic error in 'lp-error.stan', line 5, column 2 to column 6:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    lp__ = lp__ - y^2 / 2;
           ^
     6:  }
   -------------------------------------------------

Identifier 'lp__' clashes with reserved keyword.
  $ ../../../../install/default/bin/stanc lvalue_indexes1.stan
Semantic error in 'lvalue_indexes1.stan', line 6, column 4 to column 11:
   -------------------------------------------------
     4:  transformed data {
     5:      array[5] vector[5] y;
     6:      y[:][1] = x[:][1];
             ^
     7:  }
   -------------------------------------------------

Left hand side of an assignment cannot have nested multi-indexing.
  $ ../../../../install/default/bin/stanc lvalue_indexes2.stan
Semantic error in 'lvalue_indexes2.stan', line 6, column 4 to column 11:
   -------------------------------------------------
     4:  transformed data {
     5:      vector[5] y;
     6:      y[:][:] = x[:][:];
             ^
     7:  }
   -------------------------------------------------

Left hand side of an assignment cannot have nested multi-indexing.
  $ ../../../../install/default/bin/stanc matrix_expr_bad1.stan
Semantic error in 'matrix_expr_bad1.stan', line 2, column 2 to column 34:
   -------------------------------------------------
     1:  transformed data {
     2:    matrix[3,2] td_mat32 = [ 1, 3 ];
           ^
     3:  }
     4:  model {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type matrix and rhs has type row_vector
  $ ../../../../install/default/bin/stanc matrix_expr_bad2.stan
Semantic error in 'matrix_expr_bad2.stan', line 2, column 34 to column 35:
   -------------------------------------------------
     1:  transformed data {
     2:    matrix[3,2] td_mat32 = [ [ 1 ], 3 ];
                                           ^
     3:  }
     4:  model {
   -------------------------------------------------

Matrix expression must have all row_vector entries. Found type int.
  $ ../../../../install/default/bin/stanc matrix_expr_bad3.stan
Syntax error in 'matrix_expr_bad3.stan', line 2, column 40 to column 41, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    matrix[3,2] td_mat32 = [ [ [ 1 ] ] ], [ [ 2 ] ] ];
                                                 ^
     3:  }
     4:  model {
   -------------------------------------------------

Expected identifier after comma in multiple declaration.
  $ ../../../../install/default/bin/stanc matrix_expr_bad4.stan
Syntax error in 'matrix_expr_bad4.stan', line 2, column 44 to column 45, parsing error:
   -------------------------------------------------
     1:  transformed data {
     2:    matrix[3,2] td_mat32 = [ [ 1 , [ [ 2 ] ] ];
                                                     ^
     3:  }
     4:  model {
   -------------------------------------------------

Ill-formed phrase. Found an expression. This can be followed by a ",", a "}", a ")", a "]", a "[" or an infix or postfix operator.
  $ ../../../../install/default/bin/stanc multiply_sample.stan
Semantic error in 'multiply_sample.stan', line 5, column 2 to column 18:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    y ~ multiply(3);
           ^
     6:  }
   -------------------------------------------------

Ill-typed arguments to '~' statement. No distribution 'multiply' was found.
  $ ../../../../install/default/bin/stanc oneline-error.stan
Syntax error in 'oneline-error.stan', line 1, column 20 to column 21, parsing error:
   -------------------------------------------------
     1:  parameters { vector y[10]; } model { }
                             ^
   -------------------------------------------------

Expected "[" expression "]" for vector size.
  $ ../../../../install/default/bin/stanc op_addition_bad.stan
Semantic error in 'op_addition_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:  model {
     6:    matrix[3,3] c;
     7:    c = a + b;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator +. Available signatures: 
(int, int) => int
(real, real) => real
(real, vector) => vector
(vector, real) => vector
(vector, vector) => vector
(complex, complex) => complex
(real, row_vector) => row_vector
(row_vector, real) => row_vector
(row_vector, row_vector) => row_vector
(real, matrix) => matrix
(matrix, real) => matrix
(matrix, matrix) => matrix
(complex_vector, complex_vector) => complex_vector
(complex_row_vector, complex_row_vector) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: matrix, vector.
  $ ../../../../install/default/bin/stanc op_divide_bad.stan
Semantic error in 'op_divide_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b / a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator /. Available signatures: 
(row_vector, matrix) => row_vector
(matrix, matrix) => matrix
(complex_row_vector, complex_matrix) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix

(int, int) => int
(real, real) => real
(vector, real) => vector
(complex, complex) => complex
(row_vector, real) => row_vector
(matrix, real) => matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_divide_right_bad.stan
Semantic error in 'op_divide_right_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b / a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator /. Available signatures: 
(row_vector, matrix) => row_vector
(matrix, matrix) => matrix
(complex_row_vector, complex_matrix) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix

(int, int) => int
(real, real) => real
(vector, real) => vector
(complex, complex) => complex
(row_vector, real) => row_vector
(matrix, real) => matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_elt_divide_bad.stan
Semantic error in 'op_elt_divide_bad.stan', line 7, column 6 to column 12:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b ./ a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator ./. Available signatures: 
(int, int) => int
(real, real) => real
(real, vector) => vector
(vector, real) => vector
(vector, vector) => vector
(complex, complex) => complex
(real, row_vector) => row_vector
(row_vector, real) => row_vector
(row_vector, row_vector) => row_vector
(real, matrix) => matrix
(matrix, real) => matrix
(matrix, matrix) => matrix
(complex_vector, complex_vector) => complex_vector
(complex_row_vector, complex_row_vector) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_elt_multiply_bad.stan
Semantic error in 'op_elt_multiply_bad.stan', line 7, column 6 to column 12:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b .* a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator .*. Available signatures: 
(int, int) => int
(real, real) => real
(vector, vector) => vector
(complex, complex) => complex
(row_vector, row_vector) => row_vector
(matrix, matrix) => matrix
(complex_vector, complex_vector) => complex_vector
(complex_row_vector, complex_row_vector) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_intdivide_bad.stan
Semantic error in 'op_intdivide_bad.stan', line 7, column 6 to column 13:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b %/% a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %/%. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_intdivide_bad_1.stan
Semantic error in 'op_intdivide_bad_1.stan', line 6, column 11 to column 18:
   -------------------------------------------------
     4:  }
     5:  transformed data {
     6:    real c = a %/% b;
                    ^
     7:    real c = a %/% b;
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %/%. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: real, real.
  $ ../../../../install/default/bin/stanc op_intdivide_bad_2.stan
Semantic error in 'op_intdivide_bad_2.stan', line 6, column 11 to column 18:
   -------------------------------------------------
     4:  }
     5:  transformed data {
     6:    real c = a %/% b;
                    ^
     7:    real c = a %/% b;
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %/%. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: int, real.
  $ ../../../../install/default/bin/stanc op_intdivide_bad_3.stan
Semantic error in 'op_intdivide_bad_3.stan', line 6, column 11 to column 18:
   -------------------------------------------------
     4:  }
     5:  transformed data {
     6:    real c = a %/% b;
                    ^
     7:    real c = a %/% b;
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %/%. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: real, int.
  $ ../../../../install/default/bin/stanc op_logical_negation_bad.stan
Semantic error in 'op_logical_negation_bad.stan', line 7, column 6 to column 8:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = !b;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to prefix operator !. Available signatures: 
(int) => int
(real) => int
Instead supplied argument of incompatible type: array[] int.
  $ ../../../../install/default/bin/stanc op_mdivide_left_bad.stan
Semantic error in 'op_mdivide_left_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b \ a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator \. Available signatures: 
(matrix, vector) => vector
(matrix, matrix) => matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_minus_bad.stan
Semantic error in 'op_minus_bad.stan', line 7, column 6 to column 8:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = -b;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to prefix operator -. Available signatures: 
(int) => int
(real) => real
(vector) => vector
(complex) => complex
(row_vector) => row_vector
(matrix) => matrix
(complex_vector) => complex_vector
(complex_row_vector) => complex_row_vector
(complex_matrix) => complex_matrix
Instead supplied argument of incompatible type: array[] int.
  $ ../../../../install/default/bin/stanc op_modulus_bad.stan
Semantic error in 'op_modulus_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b % a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_multiplication_bad.stan
Semantic error in 'op_multiplication_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b * a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator *. Available signatures: 
(int, int) => int
(real, real) => real
(row_vector, vector) => real
(real, vector) => vector
(vector, real) => vector
(matrix, vector) => vector
(complex, complex) => complex
(complex_row_vector, complex_vector) => complex
(real, row_vector) => row_vector
(row_vector, real) => row_vector
(row_vector, matrix) => row_vector
(real, matrix) => matrix
(vector, row_vector) => matrix
(matrix, real) => matrix
(matrix, matrix) => matrix
(complex, complex_vector) => complex_vector
(complex_vector, complex) => complex_vector
(complex_matrix, complex_vector) => complex_vector
(complex, complex_row_vector) => complex_row_vector
(complex_row_vector, complex) => complex_row_vector
(complex_row_vector, complex_matrix) => complex_row_vector
(complex, complex_matrix) => complex_matrix
(complex_vector, complex_row_vector) => complex_matrix
(complex_matrix, complex) => complex_matrix
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: array[] int, matrix.
  $ ../../../../install/default/bin/stanc op_subtraction_bad.stan
Semantic error in 'op_subtraction_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:  model {
     6:    matrix[3,3] c;
     7:    c = b - a;
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to infix operator -. Available signatures: 
(int, int) => int
(real, real) => real
(real, vector) => vector
(vector, real) => vector
(vector, vector) => vector
(complex, complex) => complex
(real, row_vector) => row_vector
(row_vector, real) => row_vector
(row_vector, row_vector) => row_vector
(real, matrix) => matrix
(matrix, real) => matrix
(matrix, matrix) => matrix
(complex_vector, complex_vector) => complex_vector
(complex_row_vector, complex_row_vector) => complex_row_vector
(complex_matrix, complex_matrix) => complex_matrix
Instead supplied arguments of incompatible type: vector, matrix.
  $ ../../../../install/default/bin/stanc op_transpose_bad.stan
Semantic error in 'op_transpose_bad.stan', line 7, column 6 to column 8:
   -------------------------------------------------
     5:    array[4] int b;
     6:    matrix[3,3] c;
     7:    c = b';
               ^
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to postfix operator '. Available signatures: 
(row_vector) => vector
(vector) => row_vector
(matrix) => matrix
(complex_row_vector) => complex_vector
(complex_vector) => complex_row_vector
(complex_matrix) => complex_matrix
Instead supplied argument of incompatible type: array[] int.
  $ ../../../../install/default/bin/stanc print-void.stan
Semantic error in 'print-void.stan', line 8, column 8 to column 14:
   -------------------------------------------------
     6:    int z;
     7:    z = 2;
     8:    print(foo(z));
                 ^
     9:  }
    10:  model { }
   -------------------------------------------------

A returning function was expected but a non-returning function 'foo' was supplied.
  $ ../../../../install/default/bin/stanc prob-fun-args-no-bar.stan
Semantic error in 'prob-fun-args-no-bar.stan', line 5, column 12 to column 32:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    target += normal_lpdf(y, 0, 1);
                     ^
     6:  }
   -------------------------------------------------

Probability functions with suffixes _lpdf, _lupdf, _lpmf, _lupmf, _cdf, _lcdf and _lccdf, require a vertical bar (|) between the first two arguments.
  $ ../../../../install/default/bin/stanc prob-poisson_log-trunc-both.stan
Semantic error in 'prob-poisson_log-trunc-both.stan', line 11, column 2 to column 33:
   -------------------------------------------------
     9:  }
    10:  model {
    11:    n ~ poisson_log(alpha) T[L, U];
           ^
    12:  }
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc prob-poisson_log-trunc-high.stan
Semantic error in 'prob-poisson_log-trunc-high.stan', line 11, column 2 to column 32:
   -------------------------------------------------
     9:  }
    10:  model {
    11:    n ~ poisson_log(alpha) T[, U];
           ^
    12:  }
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc prob-poisson_log-trunc-low.stan
Semantic error in 'prob-poisson_log-trunc-low.stan', line 11, column 2 to column 32:
   -------------------------------------------------
     9:  }
    10:  model {
    11:    n ~ poisson_log(alpha) T[L, ];
           ^
    12:  }
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc real-pdf.stan
Semantic error in 'real-pdf.stan', line 2, column 2 to line 4, column 3:
   -------------------------------------------------
     1:  functions {
     2:    real foo_lpdf(int y, real sigma) {
           ^
     3:      return -(y / sigma)^2;
     4:    }
   -------------------------------------------------

Probability density functions require real variates (first argument). Instead found type int.
  $ ../../../../install/default/bin/stanc real-pmf.stan
Semantic error in 'real-pmf.stan', line 2, column 2 to line 4, column 3:
   -------------------------------------------------
     1:  functions {
     2:    real foo_lpmf(real y, real sigma) {
           ^
     3:      return -(y / sigma)^2;
     4:    }
   -------------------------------------------------

Probability mass functions require integer variates (first argument). Instead found type real.
  $ ../../../../install/default/bin/stanc real_idx.stan
Semantic error in 'real_idx.stan', line 3, column 4 to column 7:
   -------------------------------------------------
     1:  transformed data {
     2:    array[10] real a;
     3:    a[1.0] = 5;
             ^
     4:  }
     5:  model {
   -------------------------------------------------

Index must be of type int or int[] or must be a range. Instead found type real.
  $ ../../../../install/default/bin/stanc redefine-ccdf3.stan
Semantic error in 'redefine-ccdf3.stan', line 5, column 2 to line 7, column 3:
   -------------------------------------------------
     3:      return -x^2;
     4:    }
     5:    real foo_ccdf_log(int n, real x) {
           ^
     6:      return -x^2;
     7:    }
   -------------------------------------------------

Function 'foo_ccdf_log' has already been declared to for signature (int, real) => real
  $ ../../../../install/default/bin/stanc redefine-cdf3.stan
Semantic error in 'redefine-cdf3.stan', line 5, column 2 to line 7, column 3:
   -------------------------------------------------
     3:      return -x^2;
     4:    }
     5:    real foo_cdf_log(int n, real x) {
           ^
     6:      return -x^2;
     7:    }
   -------------------------------------------------

Function 'foo_cdf_log' has already been declared to for signature (int, real) => real
  $ ../../../../install/default/bin/stanc redefine-prob3.stan
Semantic error in 'redefine-prob3.stan', line 5, column 2 to line 7, column 3:
   -------------------------------------------------
     3:      return -y^2;
     4:    }
     5:    real foo_lpmf(int y) {
           ^
     6:      return y^2 / 2;
     7:    }
   -------------------------------------------------

Function 'foo_lpmf' has already been declared to for signature (int) => real
  $ ../../../../install/default/bin/stanc rng_loc1.stan
Semantic error in 'rng_loc1.stan', line 3, column 11 to column 29:
   -------------------------------------------------
     1:  functions {
     2:    real foo(real x) {
     3:      return exponential_rng(x);
                    ^
     4:    }
     5:  }
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc rng_loc2.stan
Semantic error in 'rng_loc2.stan', line 3, column 11 to column 29:
   -------------------------------------------------
     1:  functions {
     2:    real foo_lp(real x) {
     3:      return exponential_rng(x);
                    ^
     4:    }
     5:  }
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc rng_loc3.stan
Semantic error in 'rng_loc3.stan', line 3, column 11 to column 29:
   -------------------------------------------------
     1:  functions {
     2:    real foo_lpdf(real x) {
     3:      return exponential_rng(x);
                    ^
     4:    }
     5:  }
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc rng_loc4.stan
Semantic error in 'rng_loc4.stan', line 3, column 11 to column 29:
   -------------------------------------------------
     1:  functions {
     2:    real foo_lpmf(int x) {
     3:      return exponential_rng(x);
                    ^
     4:    }
     5:  }
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc rng_loc5.stan
Semantic error in 'rng_loc5.stan', line 6, column 6 to column 22:
   -------------------------------------------------
     4:  transformed parameters {
     5:    real z;
     6:    z = normal_rng(0, 1);
               ^
     7:  }
     8:  model {
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc rng_loc6.stan
Semantic error in 'rng_loc6.stan', line 6, column 6 to column 22:
   -------------------------------------------------
     4:  model {
     5:    real z;
     6:    z = normal_rng(0, 1);
               ^
     7:  
     8:    y ~ normal(0, 1);
   -------------------------------------------------

Random number generators are only allowed in transformed data block, generated quantities block or user-defined functions with names ending in _rng.
  $ ../../../../install/default/bin/stanc row_vector_expr_bad1.stan
Semantic error in 'row_vector_expr_bad1.stan', line 4, column 2 to column 29:
   -------------------------------------------------
     2:    row_vector[2] A;
     3:    row_vector[3] B;
     4:    row_vector[2] X = [ A, B ];
           ^
     5:  }
     6:  model {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type row_vector and rhs has type matrix
  $ ../../../../install/default/bin/stanc row_vector_expr_bad2.stan
Semantic error in 'row_vector_expr_bad2.stan', line 5, column 25 to column 26:
   -------------------------------------------------
     3:    row_vector[2] A;
     4:    row_vector[3] B;
     5:    row_vector[2] X = [ x, A ];
                                  ^
     6:  }
     7:  model {
   -------------------------------------------------

Row_vector expression must have all int or real entries. Found type row_vector.
  $ ../../../../install/default/bin/stanc shadow.stan
Semantic error in 'shadow.stan', line 2, column 3 to line 4, column 4:
   -------------------------------------------------
     1:  functions {
     2:     int log10(int x) {
            ^
     3:      return 1;
     4:     }
   -------------------------------------------------

Function 'log10' cannot be overloaded by return type only. Previously used return type real
  $ ../../../../install/default/bin/stanc signature_function_known.stan
Semantic error in 'signature_function_known.stan', line 8, column 12 to column 42:
   -------------------------------------------------
     6:  }
     7:  model {
     8:    target += bernoulli_logit_lpmf(x, theta);
                     ^
     9:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'bernoulli_logit_lpmf':
(vector, vector)
Available signatures:
(int, row_vector) => real
  The first argument must be int but got vector
(int, vector) => real
  The first argument must be int but got vector
(int, array[] real) => real
  The first argument must be int but got vector
(int, real) => real
  The first argument must be int but got vector
(array[] int, row_vector) => real
  The first argument must be array[] int but got vector
(Additional signatures omitted)
  $ ../../../../install/default/bin/stanc signature_function_unknown.stan
Semantic error in 'signature_function_unknown.stan', line 8, column 12 to column 37:
   -------------------------------------------------
     6:  }
     7:  model {
     8:    target += foo_whatev_lpdf(x, theta);
                     ^
     9:  }
   -------------------------------------------------

A returning function was expected but an undeclared identifier 'foo_whatev_lpdf' was supplied.
  $ ../../../../install/default/bin/stanc signature_sampling_known.stan
Semantic error in 'signature_sampling_known.stan', line 8, column 2 to column 29:
   -------------------------------------------------
     6:  }
     7:  model {
     8:    x ~ bernoulli_logit(theta);
           ^
     9:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'bernoulli_logit':
(vector, vector)
Available signatures:
(int, row_vector) => real
  The first argument must be int but got vector
(int, vector) => real
  The first argument must be int but got vector
(int, array[] real) => real
  The first argument must be int but got vector
(int, real) => real
  The first argument must be int but got vector
(array[] int, row_vector) => real
  The first argument must be array[] int but got vector
(Additional signatures omitted)
  $ ../../../../install/default/bin/stanc signature_sampling_udf.stan
Semantic error in 'signature_sampling_udf.stan', line 8, column 2 to column 19:
   -------------------------------------------------
     6:  
     7:  model {
     8:    1.0 ~ foo(3.5,3);
           ^
     9:  }
   -------------------------------------------------

Ill-typed arguments supplied to function 'foo':
(real, real, int)
Available signatures:
(real, int, real) => real
  The second argument must be int but got real
  $ ../../../../install/default/bin/stanc signature_sampling_unknown.stan
Semantic error in 'signature_sampling_unknown.stan', line 8, column 2 to column 24:
   -------------------------------------------------
     6:  }
     7:  model {
     8:    x ~ foo_whatev(theta);
           ^
     9:  }
   -------------------------------------------------

Ill-typed arguments to '~' statement. No distribution 'foo_whatev' was found.
  $ ../../../../install/default/bin/stanc stanc_helper.stan
Semantic error in 'stanc_helper.stan', line 5, column 2 to column 18:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    y ~ ormal(0, 1);
           ^
     6:  }
   -------------------------------------------------

Ill-typed arguments to '~' statement. No distribution 'ormal' was found.
  $ ../../../../install/default/bin/stanc string_literal_newline.stan
Syntax error in 'string_literal_newline.stan', line 3, column 1, lexing error:
   -------------------------------------------------
     1:  transformed data {
     2:    print(
     3:    "print
           ^
     4:    lines");
     5:  }
   -------------------------------------------------

Invalid character found.
  $ ../../../../install/default/bin/stanc target-reserved.stan
Semantic error in 'target-reserved.stan', line 2, column 7 to column 13:
   -------------------------------------------------
     1:  data {
     2:    real target;
                ^
     3:  }
     4:  parameters {
   -------------------------------------------------

Identifier 'target' clashes with reserved keyword.
  $ ../../../../install/default/bin/stanc ternaryif-fntype.stan
Semantic error in 'ternaryif-fntype.stan', line 13, column 6 to column 28:
   -------------------------------------------------
    11:      array[1] vector[1] true_states;
    12:      true_states = ode_rk45(
    13:        t0 < 0 ? rflow : gflow, [1]', t0, {1.}
               ^
    14:      );
    15:  }
   -------------------------------------------------

Ternary expression cannot have a function type: (real, vector) => vector
  $ ../../../../install/default/bin/stanc tilde-bad.stan
Semantic error in 'tilde-bad.stan', line 8, column 8 to column 19:
   -------------------------------------------------
     6:  }
     7:  model {
     8:    foo ~ normal_lpdf(0, 1);
                 ^
     9:  }
   -------------------------------------------------

~ statement should refer to a distribution without its "_lpdf/_lupdf" or "_lpmf/_lupmf" suffix.
For example, "target += normal_lpdf(y, 0, 1)" should become "y ~ normal(0, 1)."
  $ ../../../../install/default/bin/stanc too-many-indices.stan
Semantic error in 'too-many-indices.stan', line 4, column 16 to column 31:
   -------------------------------------------------
     2:    array[2] matrix[2,3] a = { [ [1,2,3], [4,5,6] ],
     3:  		       [ [2,2,3], [2,5,6] ] };
     4:    vector[2] b = a[1, 1, 1:2, 1];
                         ^
     5:  }
   -------------------------------------------------

Too many indexes, expression dimensions=3, indexes found=4.
  $ ../../../../install/default/bin/stanc truncation-bad-type1.stan
Semantic error in 'truncation-bad-type1.stan', line 1, column 8 to column 37:
   -------------------------------------------------
     1:  model { 1 ~ bernoulli(0.2) T[1, 1.0]; }
                 ^
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc truncation-bad-type2.stan
Semantic error in 'truncation-bad-type2.stan', line 1, column 8 to column 37:
   -------------------------------------------------
     1:  model { 1 ~ bernoulli(0.2) T[0.0, 1]; }
                 ^
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc truncation-bad-type3.stan
Semantic error in 'truncation-bad-type3.stan', line 1, column 8 to column 36:
   -------------------------------------------------
     1:  model { 1 ~ bernoulli(0.2) T[, 1.0]; }
                 ^
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc truncation-bad-type4.stan
Semantic error in 'truncation-bad-type4.stan', line 1, column 8 to column 36:
   -------------------------------------------------
     1:  model { 1 ~ bernoulli(0.2) T[0.0, ]; }
                 ^
   -------------------------------------------------

Truncation is only defined if distribution has _lcdf and _lccdf functions implemented with appropriate signature.
  $ ../../../../install/default/bin/stanc typo.stan
Semantic error in 'typo.stan', line 2, column 17 to column 34:
   -------------------------------------------------
     1:  transformed data {
     2:     vector[3] x = to_vetor({1,2,3});
                          ^
     3:  }
   -------------------------------------------------

A returning function was expected but an undeclared identifier 'to_vetor' was supplied.
A similar known identifier is 'to_vector'
  $ ../../../../install/default/bin/stanc validate_add_expression_dimss_bad.stan
Semantic error in 'validate_add_expression_dimss_bad.stan', line 4, column 6 to column 13:
   -------------------------------------------------
     2:    real x;
     3:    vector[3] v;
     4:    x = v[1][2];
               ^
     5:  }
     6:  parameters {
   -------------------------------------------------

Too many indexes, expression dimensions=0, indexes found=1.
  $ ../../../../install/default/bin/stanc validate_add_var_bad1.stan
Semantic error in 'validate_add_var_bad1.stan', line 3, column 7 to column 8:
   -------------------------------------------------
     1:  data {
     2:    real x;
     3:    real x;
                ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Identifier 'x' is already in use.
  $ ../../../../install/default/bin/stanc validate_add_var_bad2.stan
Semantic error in 'validate_add_var_bad2.stan', line 2, column 2 to column 8:
   -------------------------------------------------
     1:  parameters {
     2:    int m;
           ^
     3:    real y;
     4:  }
   -------------------------------------------------

(Transformed) Parameters cannot be integers.
  $ ../../../../install/default/bin/stanc validate_allow_sample_bad1.stan
Semantic error in 'validate_allow_sample_bad1.stan', line 3, column 2 to column 18:
   -------------------------------------------------
     1:  transformed data {
     2:    real z;
     3:    z ~ normal(0,1);
           ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc validate_allow_sample_bad2.stan
Semantic error in 'validate_allow_sample_bad2.stan', line 6, column 2 to column 18:
   -------------------------------------------------
     4:  transformed parameters {
     5:    real z;
     6:    z ~ normal(0,1);
           ^
     7:  }
     8:  model {
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc validate_allow_sample_bad3.stan
Semantic error in 'validate_allow_sample_bad3.stan', line 9, column 2 to column 18:
   -------------------------------------------------
     7:  generated quantities {
     8:    real z;
     9:    z ~ normal(0,1);
           ^
    10:  }
   -------------------------------------------------

Target can only be accessed in the model block or in definitions of functions with the suffix _lp.
  $ ../../../../install/default/bin/stanc validate_array_expr_bad1.stan
Semantic error in 'validate_array_expr_bad1.stan', line 6, column 2 to column 41:
   -------------------------------------------------
     4:  model {
     5:    array[5] int int_1_a;
     6:    int_1_a = { 1.0, 2.0, 3.0, 4.0 , 5.0 };  // type mismatch
           ^
     7:    y ~ normal(0,1);
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] int and rhs has type array[] real
  $ ../../../../install/default/bin/stanc validate_array_expr_bad2.stan
Semantic error in 'validate_array_expr_bad2.stan', line 6, column 2 to column 24:
   -------------------------------------------------
     4:  model {
     5:    array[3] int int_1_a;
     6:    int_1_a = { { 1*1 } };  // dim mismatch
           ^
     7:    y ~ normal(0,1);
     8:  }
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type array[] int and rhs has type array[,] int
  $ ../../../../install/default/bin/stanc validate_array_expr_bad3.stan
Syntax error in 'validate_array_expr_bad3.stan', line 6, column 14 to column 15, parsing error:
   -------------------------------------------------
     4:  model {
     5:    array[3] int int_1_a;
     6:    int_1_a = { };  // cannot be empty
                       ^
     7:    y ~ normal(0,1);
     8:  }
   -------------------------------------------------

Expression expected after "{" in array expression.
  $ ../../../../install/default/bin/stanc validate_array_expr_bad3a.stan
Syntax error in 'validate_array_expr_bad3a.stan', line 5, column 36 to column 37, parsing error:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    array[2,1] real loc_real_dim2 = {{},{}}; // cannot be empty
                                             ^
     6:    y ~ normal(0,1);
     7:  }
   -------------------------------------------------

Expression expected after "{" in array expression.
  $ ../../../../install/default/bin/stanc validate_conditional_op_bad-1.stan
Semantic error in 'validate_conditional_op_bad-1.stan', line 5, column 7 to column 19:
   -------------------------------------------------
     3:    real ty;
     4:    array[2,2] row_vector[6] twa2;
     5:    tx = twa2 ? 2 : 3;   // BAD
                ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Condition in ternary expression must be primitive int; found type=array[,] row_vector
  $ ../../../../install/default/bin/stanc validate_conditional_op_bad-2.stan
Semantic error in 'validate_conditional_op_bad-2.stan', line 5, column 7 to column 20:
   -------------------------------------------------
     3:    real ty;
     4:    array[2,2] row_vector[6] twa2;
     5:    tx = 0 ? ty : twa2;   // BAD
                ^
     6:  }
     7:  parameters {
   -------------------------------------------------

Type mismatch in ternary expression, expression when true is: real; expression when false is: array[,] row_vector
  $ ../../../../install/default/bin/stanc validate_exponentiation_bad.stan
Semantic error in 'validate_exponentiation_bad.stan', line 7, column 2 to column 12:
   -------------------------------------------------
     5:  transformed data {
     6:    int z;
     7:    z = i ^ j;  // int, int
           ^
     8:  }
     9:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to assignment operator =: lhs has type int and rhs has type real
  $ ../../../../install/default/bin/stanc validate_int_expr2_bad1.stan
Semantic error in 'validate_int_expr2_bad1.stan', line 5, column 12 to column 15:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    for (n in 1.7:N)
                     ^
     6:      y ~ normal(0,1);
     7:  }
   -------------------------------------------------

Lower bound of for-loop must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_int_expr2_bad2.stan
Semantic error in 'validate_int_expr2_bad2.stan', line 5, column 14 to column 18:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    for (n in 1:10.3)
                       ^
     6:      y ~ normal(0,1);
     7:  }
   -------------------------------------------------

Upper bound of for-loop must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_int_expr2_bad3.stan
Semantic error in 'validate_int_expr2_bad3.stan', line 2, column 9 to column 13:
   -------------------------------------------------
     1:  parameters {
     2:    vector[10.9] y;
                  ^
     3:  }
     4:  model {
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_int_expr2_bad4.stan
Semantic error in 'validate_int_expr2_bad4.stan', line 5, column 14 to column 18:
   -------------------------------------------------
     3:  }
     4:  model {
     5:    for (n in 1:10.3)
                       ^
     6:      y ~ normal(0,1);
     7:  }
   -------------------------------------------------

Upper bound of for-loop must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_logical_negate_expr_bad.stan
Semantic error in 'validate_logical_negate_expr_bad.stan', line 3, column 6 to column 8:
   -------------------------------------------------
     1:  transformed data {
     2:    vector[3] v;
     3:    v = !v;
               ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to prefix operator !. Available signatures: 
(int) => int
(real) => int
Instead supplied argument of incompatible type: vector.
  $ ../../../../install/default/bin/stanc validate_modulus_bad.stan
Semantic error in 'validate_modulus_bad.stan', line 7, column 6 to column 11:
   -------------------------------------------------
     5:  transformed data {
     6:    real k;
     7:    k = i % j;  // real, real
               ^
     8:  }
     9:  parameters {
   -------------------------------------------------

Ill-typed arguments supplied to infix operator %. Available signatures: 
(int, int) => int
Instead supplied arguments of incompatible type: real, real.
  $ ../../../../install/default/bin/stanc validate_set_double_offset_multiplier_bad1.stan
Semantic error in 'validate_set_double_offset_multiplier_bad1.stan', line 3, column 14 to column 17:
   -------------------------------------------------
     1:  parameters {
     2:    vector[3] vvv;
     3:    real<offset=vvv> a;
                       ^
     4:    real y;
     5:  }
   -------------------------------------------------

Offset must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_double_offset_multiplier_bad2.stan
Semantic error in 'validate_set_double_offset_multiplier_bad2.stan', line 3, column 18 to column 21:
   -------------------------------------------------
     1:  parameters {
     2:    vector[3] vvv;
     3:    real<multiplier=vvv> a;
                           ^
     4:    real y;
     5:  }
   -------------------------------------------------

Multiplier must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_double_offset_multiplier_bad3.stan
Syntax error in 'validate_set_double_offset_multiplier_bad3.stan', line 2, column 15 to column 25, parsing error:
   -------------------------------------------------
     1:  parameters {
     2:    real<lower=1,multiplier=-31> a;
                        ^
     3:    real y;
     4:  }
   -------------------------------------------------

"upper =" expression (not containing binary logical operators) ">" expected after "<lower =" expression "," in top-level variable declaration.
  $ ../../../../install/default/bin/stanc validate_set_double_range_lower_bad1.stan
Semantic error in 'validate_set_double_range_lower_bad1.stan', line 3, column 13 to column 14:
   -------------------------------------------------
     1:  data {
     2:    vector[3] v;
     3:    real<lower=v> a;
                      ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Lower bound must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_double_range_lower_bad2.stan
Semantic error in 'validate_set_double_range_lower_bad2.stan', line 3, column 13 to column 14:
   -------------------------------------------------
     1:  data {
     2:    vector[3] v;
     3:    real<lower=v,upper=2.9> a;
                      ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Lower bound must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_double_range_upper_bad1.stan
Semantic error in 'validate_set_double_range_upper_bad1.stan', line 3, column 13 to column 14:
   -------------------------------------------------
     1:  data {
     2:    vector[3] v;
     3:    real<upper=v> a;
                      ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Upper bound must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_double_range_upper_bad2.stan
Semantic error in 'validate_set_double_range_upper_bad2.stan', line 3, column 23 to column 24:
   -------------------------------------------------
     1:  data {
     2:    vector[3] v;
     3:    real<lower=2.9,upper=v> a;
                                ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Upper bound must be a scalar. Instead found type vector.
  $ ../../../../install/default/bin/stanc validate_set_int_range_lower_bad1.stan
Semantic error in 'validate_set_int_range_lower_bad1.stan', line 2, column 2 to column 19:
   -------------------------------------------------
     1:  data {
     2:    int<lower=1.7> a;
           ^
     3:    int<lower=1,upper=3> b;
     4:  }
   -------------------------------------------------

Bounds of integer variable must be of type int. Found type real.
  $ ../../../../install/default/bin/stanc validate_set_int_range_lower_bad2.stan
Semantic error in 'validate_set_int_range_lower_bad2.stan', line 3, column 2 to column 27:
   -------------------------------------------------
     1:  data {
     2:    int<lower=1> a;
     3:    int<lower=1.9,upper=3> b;
           ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Bounds of integer variable must be of type int. Found type real.
  $ ../../../../install/default/bin/stanc validate_set_int_range_lower_bad3.stan
Semantic error in 'validate_set_int_range_lower_bad3.stan', line 3, column 2 to column 27:
   -------------------------------------------------
     1:  data {
     2:    int<lower=1> a;
     3:    int<lower=1,upper=3.2> b;
           ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Bounds of integer variable must be of type int. Found type real.
  $ ../../../../install/default/bin/stanc validate_set_int_range_upper_bad1.stan
Semantic error in 'validate_set_int_range_upper_bad1.stan', line 2, column 2 to column 19:
   -------------------------------------------------
     1:  data {
     2:    int<upper=1.7> a;
           ^
     3:    int<lower=1,upper=3> b;
     4:  }
   -------------------------------------------------

Bounds of integer variable must be of type int. Found type real.
  $ ../../../../install/default/bin/stanc validate_set_int_range_upper_bad2.stan
Semantic error in 'validate_set_int_range_upper_bad2.stan', line 3, column 2 to column 27:
   -------------------------------------------------
     1:  data {
     2:    int<lower=1> a;
     3:    int<lower=1,upper=3.2> b;
           ^
     4:  }
     5:  parameters {
   -------------------------------------------------

Bounds of integer variable must be of type int. Found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad1.stan
Semantic error in 'validate_validate_int_expr_bad1.stan', line 2, column 9 to column 12:
   -------------------------------------------------
     1:  data {
     2:    vector[3.7] a;
                  ^
     3:    row_vector[3] b;
     4:    matrix[3,3] c;
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad10.stan
Semantic error in 'validate_validate_int_expr_bad10.stan', line 9, column 24 to column 27:
   -------------------------------------------------
     7:    ordered[3] f;
     8:    positive_ordered[3] g;
     9:    cholesky_factor_cov[4,5.8] h;
                                 ^
    10:    cholesky_factor_cov[3] j;
    11:    cov_matrix[3] k;
   -------------------------------------------------

Matrix column size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad11.stan
Semantic error in 'validate_validate_int_expr_bad11.stan', line 10, column 22 to column 25:
   -------------------------------------------------
     8:    positive_ordered[3] g;
     9:    cholesky_factor_cov[4,5] h;
    10:    cholesky_factor_cov[3.9] j;
                               ^
    11:    cov_matrix[3] k;
    12:    corr_matrix[3] l;
   -------------------------------------------------

Matrix row size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad12.stan
Semantic error in 'validate_validate_int_expr_bad12.stan', line 11, column 13 to column 16:
   -------------------------------------------------
     9:    cholesky_factor_cov[4,5] h;
    10:    cholesky_factor_cov[3] j;
    11:    cov_matrix[3.5] k;
                      ^
    12:    corr_matrix[3] l;
    13:  }
   -------------------------------------------------

Matrix row size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad13.stan
Semantic error in 'validate_validate_int_expr_bad13.stan', line 12, column 14 to column 17:
   -------------------------------------------------
    10:    cholesky_factor_cov[3] j;
    11:    cov_matrix[3] k;
    12:    corr_matrix[3.3] l;
                       ^
    13:  }
    14:  parameters {
   -------------------------------------------------

Matrix row size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad2.stan
Semantic error in 'validate_validate_int_expr_bad2.stan', line 3, column 13 to column 16:
   -------------------------------------------------
     1:  data {
     2:    vector[3] a;
     3:    row_vector[3.7] b;
                      ^
     4:    matrix[3,3] c;
     5:    unit_vector[3] d;
   -------------------------------------------------

Row vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad3.stan
Semantic error in 'validate_validate_int_expr_bad3.stan', line 4, column 9 to column 12:
   -------------------------------------------------
     2:    vector[3] a;
     3:    row_vector[3] b;
     4:    matrix[3.2,3] c;
                  ^
     5:    unit_vector[3] d;
     6:    simplex[3] e;
   -------------------------------------------------

Matrix row size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad4.stan
Semantic error in 'validate_validate_int_expr_bad4.stan', line 4, column 11 to column 14:
   -------------------------------------------------
     2:    vector[3] a;
     3:    row_vector[3] b;
     4:    matrix[3,3.1] c;
                    ^
     5:    unit_vector[3] d;
     6:    simplex[3] e;
   -------------------------------------------------

Matrix column size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad5.stan
Semantic error in 'validate_validate_int_expr_bad5.stan', line 5, column 14 to column 17:
   -------------------------------------------------
     3:    row_vector[3] b;
     4:    matrix[3,3] c;
     5:    unit_vector[3.2] d;
                       ^
     6:    simplex[3] e;
     7:    ordered[3] f;
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad6.stan
Semantic error in 'validate_validate_int_expr_bad6.stan', line 6, column 10 to column 13:
   -------------------------------------------------
     4:    matrix[3,3] c;
     5:    unit_vector[3] d;
     6:    simplex[3.9] e;
                   ^
     7:    ordered[3] f;
     8:    positive_ordered[3] g;
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad7.stan
Semantic error in 'validate_validate_int_expr_bad7.stan', line 7, column 10 to column 13:
   -------------------------------------------------
     5:    unit_vector[3] d;
     6:    simplex[3] e;
     7:    ordered[3.9] f;
                   ^
     8:    positive_ordered[3] g;
     9:    cholesky_factor_cov[4,5] h;
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad8.stan
Semantic error in 'validate_validate_int_expr_bad8.stan', line 8, column 19 to column 22:
   -------------------------------------------------
     6:    simplex[3] e;
     7:    ordered[3] f;
     8:    positive_ordered[3.2] g;
                            ^
     9:    cholesky_factor_cov[4,5] h;
    10:    cholesky_factor_cov[3] j;
   -------------------------------------------------

Vector sizes must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc validate_validate_int_expr_bad9.stan
Semantic error in 'validate_validate_int_expr_bad9.stan', line 9, column 22 to column 25:
   -------------------------------------------------
     7:    ordered[3] f;
     8:    positive_ordered[3] g;
     9:    cholesky_factor_cov[4.1,5] h;
                               ^
    10:    cholesky_factor_cov[3] j;
    11:    cov_matrix[3] k;
   -------------------------------------------------

Matrix row size must be of type int. Instead found type real.
  $ ../../../../install/default/bin/stanc var-decl-bad-1.stan
Semantic error in 'var-decl-bad-1.stan', line 3, column 13 to column 14:
   -------------------------------------------------
     1:  parameters {
     2:    array[3] real x;
     3:    array[size(x)] real y;
                      ^
     4:  }
     5:  model {
   -------------------------------------------------

Non-data variables are not allowed in top level size declarations.
  $ ../../../../install/default/bin/stanc var-decl-bad-2.stan
Semantic error in 'var-decl-bad-2.stan', line 3, column 8 to column 22:
   -------------------------------------------------
     1:  parameters {
     2:    array[3] real x;
     3:    array[poisson_rng(3)] real y;
                 ^
     4:  }
     5:  model {
   -------------------------------------------------

Random number generators are not allowed in top level size declarations.
