  $ ../../../../../../install/default/bin/stanc --auto_format probit-multi-good.stan
data {
  int<lower=1> K;
  int<lower=1> D;
  int<lower=0> N;
  int<lower=0, upper=1> y[N, D];
  vector[K] x[N];
}
parameters {
  matrix[D, K] beta;
  cholesky_factor_corr[D] L_Omega;
  real<lower=0, upper=1> u[N, D];
}
model {
  L_Omega ~ lkj_corr_cholesky(4);
  to_vector(beta) ~ normal(0, 5);
  {
    for (n in 1 : N) {
      vector[D] mu;
      vector[D] z;
      real prev;
      mu = beta * x[n];
      prev = 0;
      for (d in 1 : D) {
        real bound;
        bound = Phi(-(mu[d] + prev) / L_Omega[d, d]);
        if (y[n, d] == 1) {
          real t;
          t = bound + (1 - bound) * u[n, d];
          z[d] = inv_Phi(t);
          target += log1m(bound);
        }
        else {
          real t;
          t = bound * u[n, d];
          z[d] = inv_Phi(t);
          target += log(bound);
        }
        if (d < D) 
          prev = L_Omega[d + 1, 1 : d] * head(z, d);
      }
    }
  }
}
generated quantities {
  corr_matrix[D] Omega;
  Omega = multiply_lower_tri_self_transpose(L_Omega);
}

  $ ../../../../../../install/default/bin/stanc --auto_format probit-multi.stan
functions {
  int sum_(int[,] a) {
    int s;
    s <- 0;
    for (i in 1 : size(a)) 
      for (j in 1 : size(a[i])) 
        s <- s + a[i, j];
    return s;
  }
}
data {
  int<lower=1> K;
  int<lower=1> D;
  int<lower=0> N;
  int<lower=0, upper=1> y[N, D];
  vector[K] x[N];
}
transformed data {
  int<lower=0> N_pos;
  int<lower=1, upper=N> n_pos[sum_(y)];
  int<lower=1, upper=D> d_pos[size(n_pos)];
  int<lower=0> N_neg;
  int<lower=1, upper=N> n_neg[(N * D) - size(n_pos)];
  int<lower=1, upper=D> d_neg[size(n_neg)];
  N_pos <- size(n_pos);
  N_neg <- size(n_neg);
  {
    int i;
    int j;
    i <- 1;
    j <- 1;
    for (n in 1 : N) {
      for (d in 1 : D) {
        if (y[n, d] == 1) {
          n_pos[i] <- n;
          d_pos[i] <- d;
          i <- i + 1;
        }
        else {
          n_neg[j] <- n;
          d_neg[j] <- d;
          j <- j + 1;
        }
      }
    }
  }
}
parameters {
  matrix[D, K] beta;
  cholesky_factor_corr[D] L_Omega;
  vector<lower=0>[N_pos] z_pos;
  vector<upper=0>[N_neg] z_neg;
}
transformed parameters {
  vector[D] z[N];
  for (n in 1 : N_pos) 
    z[n_pos[n], d_pos[n]] <- z_pos[n];
  for (n in 1 : N_neg) 
    z[n_neg[n], d_neg[n]] <- z_neg[n];
}
model {
  L_Omega ~ lkj_corr_cholesky(4);
  to_vector(beta) ~ normal(0, 5);
  {
    vector[D] beta_x[N];
    for (n in 1 : N) 
      beta_x[n] <- beta * x[n];
    z ~ multi_normal_cholesky(beta_x, L_Omega);
  }
}
generated quantities {
  corr_matrix[D] Omega;
  Omega <- multiply_lower_tri_self_transpose(L_Omega);
}


Warning: deprecated language construct used in 'probit-multi.stan', line 4, column 7:
   -------------------------------------------------
     2:    int sum_(int[,] a) {
     3:      int s;
     4:      s <- 0;
                ^
     5:      for (i in 1:size(a))
     6:        for (j in 1:size(a[i]))
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 7, column 11:
   -------------------------------------------------
     5:      for (i in 1:size(a))
     6:        for (j in 1:size(a[i]))
     7:          s <- s + a[i,j];
                    ^
     8:      return s;
     9:    }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 26, column 9:
   -------------------------------------------------
    24:    int<lower=1,upper=D> d_neg[size(n_neg)];
    25:  
    26:    N_pos <- size(n_pos);
                  ^
    27:    N_neg <- size(n_neg);
    28:    {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 27, column 9:
   -------------------------------------------------
    25:  
    26:    N_pos <- size(n_pos);
    27:    N_neg <- size(n_neg);
                  ^
    28:    {
    29:      int i;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 31, column 7:
   -------------------------------------------------
    29:      int i;
    30:      int j;
    31:      i <- 1;
                ^
    32:      j <- 1;
    33:      for (n in 1:N) {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 32, column 7:
   -------------------------------------------------
    30:      int j;
    31:      i <- 1;
    32:      j <- 1;
                ^
    33:      for (n in 1:N) {
    34:        for (d in 1:D) {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 36, column 20:
   -------------------------------------------------
    34:        for (d in 1:D) {
    35:          if (y[n,d] == 1) {
    36:            n_pos[i] <- n;
                             ^
    37:            d_pos[i] <- d;
    38:            i <- i + 1;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 37, column 20:
   -------------------------------------------------
    35:          if (y[n,d] == 1) {
    36:            n_pos[i] <- n;
    37:            d_pos[i] <- d;
                             ^
    38:            i <- i + 1;
    39:          } else {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 38, column 13:
   -------------------------------------------------
    36:            n_pos[i] <- n;
    37:            d_pos[i] <- d;
    38:            i <- i + 1;
                      ^
    39:          } else {
    40:            n_neg[j] <- n;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 40, column 20:
   -------------------------------------------------
    38:            i <- i + 1;
    39:          } else {
    40:            n_neg[j] <- n;
                             ^
    41:            d_neg[j] <- d;
    42:            j <- j + 1;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 41, column 20:
   -------------------------------------------------
    39:          } else {
    40:            n_neg[j] <- n;
    41:            d_neg[j] <- d;
                             ^
    42:            j <- j + 1;
    43:          }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 42, column 13:
   -------------------------------------------------
    40:            n_neg[j] <- n;
    41:            d_neg[j] <- d;
    42:            j <- j + 1;
                      ^
    43:          }
    44:        }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 57, column 27:
   -------------------------------------------------
    55:    vector[D] z[N];
    56:    for (n in 1:N_pos)
    57:      z[n_pos[n], d_pos[n]] <- z_pos[n];
                                    ^
    58:    for (n in 1:N_neg)
    59:      z[n_neg[n], d_neg[n]] <- z_neg[n];
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 59, column 27:
   -------------------------------------------------
    57:      z[n_pos[n], d_pos[n]] <- z_pos[n];
    58:    for (n in 1:N_neg)
    59:      z[n_neg[n], d_neg[n]] <- z_neg[n];
                                    ^
    60:  }
    61:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 67, column 17:
   -------------------------------------------------
    65:      vector[D] beta_x[N];
    66:      for (n in 1:N) 
    67:        beta_x[n] <- beta * x[n];
                          ^
    68:      z ~ multi_normal_cholesky(beta_x, L_Omega);
    69:    }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'probit-multi.stan', line 73, column 9:
   -------------------------------------------------
    71:  generated quantities {
    72:    corr_matrix[D] Omega;
    73:    Omega <- multiply_lower_tri_self_transpose(L_Omega);  
                  ^
    74:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

