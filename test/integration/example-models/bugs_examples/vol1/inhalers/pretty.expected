  $ ../../../../../../../install/default/bin/stanc --auto_format inhalers.stan
data {
  int<lower=0> N;
  int<lower=0> T;
  int<lower=0> G;
  int<lower=0> Npattern;
  int<lower=0> Ncum[16, 2];
  int<lower=0> pattern[16, 2];
  int<lower=0> Ncut;
  int treat[2, 2];
  int period[2, 2];
  int carry[2, 2];
}
transformed data {
  int group[N];
  int response[N, T];
  for (i in 1 : Ncum[1, 1]) {
    group[i] <- 1;
    for (t in 1 : T) 
      response[i, t] <- pattern[1, t];
  }
  for (i in (Ncum[1, 1] + 1) : Ncum[1, 2]) {
    group[i] <- 2;
    for (t in 1 : T) 
      response[i, t] <- pattern[1, t];
  }
  for (k in 2 : Npattern) {
    for (i in (Ncum[k - 1, 2] + 1) : Ncum[k, 1]) {
      group[i] <- 1;
      for (t in 1 : T) 
        response[i, t] <- pattern[k, t];
    }
    for (i in (Ncum[k, 1] + 1) : Ncum[k, 2]) {
      group[i] <- 2;
      for (t in 1 : T) 
        response[i, t] <- pattern[k, t];
    }
  }
}
parameters {
  real<lower=0> sigmasq;
  real beta;
  real pi;
  real kappa;
  real a0;
  real b[N];
  ordered[Ncut] a;
}
transformed parameters {
  real<lower=0> sigma;
  sigma <- sqrt(sigmasq);
}
model {
  real Q[N, T, Ncut];
  vector[Ncut + 1] p[N, T];
  real mu[G, T];
  for (g in 1 : G) {
    for (t in 1 : T) {
      mu[g, t] <- beta * treat[g, t] * .5 + pi * period[g, t] * .5
                  + kappa * carry[g, t];
    }
  }
  for (i in 1 : N) {
    for (t in 1 : T) {
      for (j in 1 : Ncut) {
        Q[i, t, j] <- inv_logit(-(a[j] + mu[group[i], t] + b[i]));
      }
      p[i, t, 1] <- 1 - Q[i, t, 1];
      for (j in 2 : Ncut) 
        p[i, t, j] <- Q[i, t, j - 1] - Q[i, t, j];
      p[i, t, (Ncut + 1)] <- Q[i, t, Ncut];
      response[i, t] ~ categorical(p[i, t]);
    }
  }
  b ~ normal(0, sigma);
  beta ~ normal(0, 1000);
  pi ~ normal(0, 1000);
  kappa ~ normal(0, 1000);
  a0 ~ normal(0, 1000);
  sigmasq ~ inv_gamma(0.001, 0.001);
}
generated quantities {
  real log_sigma;
  log_sigma <- log(sigma);
}


Warning: deprecated language construct used in 'inhalers.stan', line 1, column 0:
   -------------------------------------------------
     1:  # Inhaler: ordered categorical data 
         ^
     2:  ## http://www.openbugs.net/Examples/Inhalers.html
     3:  
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 2, column 0:
   -------------------------------------------------
     1:  # Inhaler: ordered categorical data 
     2:  ## http://www.openbugs.net/Examples/Inhalers.html
         ^
     3:  
     4:  ## FIXME ii: 
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 4, column 0:
   -------------------------------------------------
     2:  ## http://www.openbugs.net/Examples/Inhalers.html
     3:  
     4:  ## FIXME ii: 
         ^
     5:  ## specify using categorical distribution directly 
     6:  ## done (but x ~ categorical[p], in which x starts
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 5, column 0:
   -------------------------------------------------
     3:  
     4:  ## FIXME ii: 
     5:  ## specify using categorical distribution directly 
         ^
     6:  ## done (but x ~ categorical[p], in which x starts
     7:  ## from 0). 
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 6, column 0:
   -------------------------------------------------
     4:  ## FIXME ii: 
     5:  ## specify using categorical distribution directly 
     6:  ## done (but x ~ categorical[p], in which x starts
         ^
     7:  ## from 0). 
     8:  
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 7, column 0:
   -------------------------------------------------
     5:  ## specify using categorical distribution directly 
     6:  ## done (but x ~ categorical[p], in which x starts
     7:  ## from 0). 
         ^
     8:  
     9:  
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 24, column 2:
   -------------------------------------------------
    22:  
    23:  transformed data {
    24:    # Construct individual response data from contingency table
           ^
    25:    int group[N]; 
    26:    int response[N, T]; 
   -------------------------------------------------

Comments beginning with # are deprecated. Please use // in place of # for line comments.


Warning: deprecated language construct used in 'inhalers.stan', line 28, column 14:
   -------------------------------------------------
    26:    int response[N, T]; 
    27:    for (i in 1:Ncum[1, 1]) { 
    28:      group[i] <- 1; 
                       ^
    29:      for (t in 1:T)  
    30:        response[i, t] <- pattern[1, t]; 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 30, column 22:
   -------------------------------------------------
    28:      group[i] <- 1; 
    29:      for (t in 1:T)  
    30:        response[i, t] <- pattern[1, t]; 
                               ^
    31:    }
    32:    for (i in (Ncum[1, 1] + 1):Ncum[1, 2]) { 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 33, column 14:
   -------------------------------------------------
    31:    }
    32:    for (i in (Ncum[1, 1] + 1):Ncum[1, 2]) { 
    33:      group[i] <- 2; 
                       ^
    34:      for (t in 1:T)  
    35:        response[i, t] <- pattern[1, t]; 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 35, column 22:
   -------------------------------------------------
    33:      group[i] <- 2; 
    34:      for (t in 1:T)  
    35:        response[i, t] <- pattern[1, t]; 
                               ^
    36:    }
    37:  
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 40, column 16:
   -------------------------------------------------
    38:    for (k in 2:Npattern) {
    39:      for(i in (Ncum[k - 1, 2] + 1):Ncum[k, 1]) {
    40:        group[i] <- 1; 
                         ^
    41:        for (t in 1:T)  
    42:          response[i,t] <- pattern[k, t]; 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 42, column 23:
   -------------------------------------------------
    40:        group[i] <- 1; 
    41:        for (t in 1:T)  
    42:          response[i,t] <- pattern[k, t]; 
                                ^
    43:      }
    44:      for(i in (Ncum[k, 1] + 1):Ncum[k, 2]) {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 45, column 16:
   -------------------------------------------------
    43:      }
    44:      for(i in (Ncum[k, 1] + 1):Ncum[k, 2]) {
    45:        group[i] <- 2; 
                         ^
    46:        for (t in 1:T)  
    47:          response[i,t] <- pattern[k, t]; 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 47, column 23:
   -------------------------------------------------
    45:        group[i] <- 2; 
    46:        for (t in 1:T)  
    47:          response[i,t] <- pattern[k, t]; 
                                ^
    48:      }
    49:    }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 64, column 9:
   -------------------------------------------------
    62:  transformed parameters {
    63:    real<lower=0> sigma; 
    64:    sigma <- sqrt(sigmasq); 
                  ^
    65:  } 
    66:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 74, column 16:
   -------------------------------------------------
    72:      for(t in 1:T) { 
    73:        // logistic mean for group g in period t
    74:        mu[g, t] <- beta * treat[g, t] * .5 + pi * period[g, t] * .5 + kappa * carry[g, t]; 
                         ^
    75:      }
    76:    }                                                             
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 81, column 20:
   -------------------------------------------------
    79:      for (t in 1:T) {
    80:        for (j in 1:Ncut) {
    81:          Q[i, t, j] <- inv_logit(-(a[j] + mu[group[i], t] + b[i])); 
                             ^
    82:        }
    83:  
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 84, column 18:
   -------------------------------------------------
    82:        }
    83:  
    84:        p[i, t, 1] <- 1 - Q[i, t, 1];
                           ^
    85:        for (j in 2:Ncut)  
    86:          p[i, t, j] <- Q[i, t, j - 1] - Q[i, t, j]; 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 86, column 20:
   -------------------------------------------------
    84:        p[i, t, 1] <- 1 - Q[i, t, 1];
    85:        for (j in 2:Ncut)  
    86:          p[i, t, j] <- Q[i, t, j - 1] - Q[i, t, j]; 
                             ^
    87:        p[i, t, (Ncut + 1)] <- Q[i, t, Ncut];
    88:        
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 87, column 27:
   -------------------------------------------------
    85:        for (j in 2:Ncut)  
    86:          p[i, t, j] <- Q[i, t, j - 1] - Q[i, t, j]; 
    87:        p[i, t, (Ncut + 1)] <- Q[i, t, Ncut];
                                    ^
    88:        
    89:        response[i, t] ~ categorical(p[i, t]);
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'inhalers.stan', line 105, column 13:
   -------------------------------------------------
   103:    real log_sigma;
   104:    
   105:    log_sigma <- log(sigma);
                      ^
   106:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

