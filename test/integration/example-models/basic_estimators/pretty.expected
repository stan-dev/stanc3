  $ ../../../../../install/default/bin/stanc --auto_format bernoulli.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> y[N];
}
parameters {
  real<lower=0, upper=1> theta;
}
model {
  theta ~ beta(1, 1);
  for (n in 1 : N) 
    y[n] ~ bernoulli(theta);
}

  $ ../../../../../install/default/bin/stanc --auto_format negative_binomial.stan
data {
  int<lower=1> N;
  int<lower=0> y[N];
}
parameters {
  real<lower=0> alpha;
  real<lower=0> beta;
}
model {
  alpha ~ cauchy(0, 10);
  beta ~ cauchy(0, 10);
  for (i in 1 : N) 
    y[i] ~ neg_binomial(alpha, beta);
}

  $ ../../../../../install/default/bin/stanc --auto_format negative_binomial2.stan
data {
  int<lower=1> N;
  int<lower=0> y[N];
}
parameters {
  real<lower=0> alpha;
  real<lower=0, upper=1> p_success;
}
transformed parameters {
  real<lower=0.0> beta;
  beta <- p_success / (1.0 - p_success);
}
model {
  for (i in 1 : N) 
    y[i] ~ neg_binomial(alpha, beta);
}


Warning: deprecated language construct used in 'negative_binomial2.stan', line 11, column 9:
   -------------------------------------------------
     9:  transformed parameters {
    10:     real<lower=0.0> beta;
    11:     beta <- p_success / (1.0 - p_success);
                  ^
    12:  }
    13:  model { 
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_censored.stan
data {
  real U;
  int<lower=0> N_censored;
  int<lower=0> N_observed;
  real<upper=U> y[N_observed];
}
parameters {
  real mu;
}
model {
  for (n in 1 : N_observed) 
    y[n] ~ normal(mu, 1.0) T[ , U];
  increment_log_prob(N_censored * log1m(normal_cdf(U, mu, 1.0)));
}


Warning: deprecated language construct used in 'normal_censored.stan', line 13, column 19:
   -------------------------------------------------
    11:    for (n in 1:N_observed)
    12:      y[n] ~ normal(mu,1.0) T[,U];
    13:    increment_log_prob(N_censored 
                            ^
    14:                       * log1m(normal_cdf(U,mu,1.0)));
    15:  }
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_loc.stan
transformed data {
  real y[5];
  y[1] <- 2.0;
  y[2] <- 1.0;
  y[3] <- -0.5;
  y[4] <- 3.0;
  y[5] <- 0.25;
}
parameters {
  real mu;
}
model {
  for (n in 1 : 5) 
    y[n] ~ normal(mu, 1.0);
}


Warning: deprecated language construct used in 'normal_loc.stan', line 3, column 10:
   -------------------------------------------------
     1:  transformed data {
     2:      real y[5];
     3:      y[1] <- 2.0;
                   ^
     4:      y[2] <- 1.0;
     5:      y[3] <- -0.5;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_loc.stan', line 4, column 10:
   -------------------------------------------------
     2:      real y[5];
     3:      y[1] <- 2.0;
     4:      y[2] <- 1.0;
                   ^
     5:      y[3] <- -0.5;
     6:      y[4] <- 3.0;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_loc.stan', line 5, column 10:
   -------------------------------------------------
     3:      y[1] <- 2.0;
     4:      y[2] <- 1.0;
     5:      y[3] <- -0.5;
                   ^
     6:      y[4] <- 3.0;
     7:      y[5] <- 0.25;
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_loc.stan', line 6, column 10:
   -------------------------------------------------
     4:      y[2] <- 1.0;
     5:      y[3] <- -0.5;
     6:      y[4] <- 3.0;
                   ^
     7:      y[5] <- 0.25;
     8:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_loc.stan', line 7, column 10:
   -------------------------------------------------
     5:      y[3] <- -0.5;
     6:      y[4] <- 3.0;
     7:      y[5] <- 0.25;
                   ^
     8:  }
     9:  parameters {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_mixture.stan
data {
  int<lower=0> N;
  real y[N];
}
parameters {
  real<lower=0, upper=1> theta;
  real mu[2];
}
transformed parameters {
  real log_theta;
  real log_one_minus_theta;
  log_theta <- log(theta);
  log_one_minus_theta <- log(1.0 - theta);
}
model {
  theta ~ uniform(0, 1);
  for (k in 1 : 2) 
    mu[k] ~ normal(0, 10);
  for (n in 1 : N) 
    increment_log_prob(log_sum_exp(log_theta + normal_log(y[n], mu[1], 1.0),
                                   log_one_minus_theta
                                   + normal_log(y[n], mu[2], 1.0)));
}


Warning: deprecated language construct used in 'normal_mixture.stan', line 16, column 13:
   -------------------------------------------------
    14:    real log_one_minus_theta;
    15:  
    16:    log_theta <- log(theta);
                      ^
    17:    log_one_minus_theta <- log(1.0 - theta);
    18:  }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture.stan', line 17, column 23:
   -------------------------------------------------
    15:  
    16:    log_theta <- log(theta);
    17:    log_one_minus_theta <- log(1.0 - theta);
                                ^
    18:  }
    19:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture.stan', line 24, column 21:
   -------------------------------------------------
    22:      mu[k] ~ normal(0,10);
    23:    for (n in 1:N)
    24:      increment_log_prob(log_sum_exp(log_theta
                              ^
    25:                                       + normal_log(y[n],mu[1],1.0),
    26:                                     log_one_minus_theta 
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_mixture_k.stan
data {
  int<lower=1> K;
  int<lower=1> N;
  real y[N];
}
parameters {
  simplex[K] theta;
  real mu[K];
  real<lower=0, upper=10> sigma[K];
}
model {
  real ps[K];
  mu ~ normal(0, 10);
  for (n in 1 : N) {
    for (k in 1 : K) 
      ps[k] <- log(theta[k]) + normal_log(y[n], mu[k], sigma[k]);
    increment_log_prob(log_sum_exp(ps));
  }
}


Warning: deprecated language construct used in 'normal_mixture_k.stan', line 16, column 13:
   -------------------------------------------------
    14:    for (n in 1:N) {
    15:      for (k in 1:K)
    16:        ps[k] <- log(theta[k]) 
                      ^
    17:                 + normal_log(y[n],mu[k],sigma[k]);
    18:      increment_log_prob(log_sum_exp(ps));    
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture_k.stan', line 18, column 21:
   -------------------------------------------------
    16:        ps[k] <- log(theta[k]) 
    17:                 + normal_log(y[n],mu[k],sigma[k]);
    18:      increment_log_prob(log_sum_exp(ps));    
                              ^
    19:    }
    20:  }
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_mixture_k_prop.stan
data {
  int<lower=1> K;
  int<lower=1> N;
  real y[N];
}
parameters {
  simplex[K] theta;
  simplex[K] mu_prop;
  real mu_loc;
  real<lower=0> mu_scale;
  real<lower=0> sigma[K];
}
transformed parameters {
  ordered[K] mu;
  mu <- mu_loc + mu_scale * cumulative_sum(mu_prop);
}
model {
  mu_loc ~ cauchy(0, 5);
  mu_scale ~ cauchy(0, 5);
  sigma ~ cauchy(0, 5);
  {
    real ps[K];
    vector[K] log_theta;
    log_theta <- log(theta);
    for (n in 1 : N) {
      for (k in 1 : K) {
        ps[k] <- log_theta[k] + normal_log(y[n], mu[k], sigma[k]);
      }
      increment_log_prob(log_sum_exp(ps));
    }
  }
}


Warning: deprecated language construct used in 'normal_mixture_k_prop.stan', line 15, column 6:
   -------------------------------------------------
    13:  transformed parameters {
    14:    ordered[K] mu;
    15:    mu <- mu_loc + mu_scale * cumulative_sum(mu_prop);
               ^
    16:  }
    17:  model {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture_k_prop.stan', line 27, column 15:
   -------------------------------------------------
    25:      real ps[K];
    26:      vector[K] log_theta;
    27:      log_theta <- log(theta);
                        ^
    28:  
    29:      for (n in 1:N) {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture_k_prop.stan', line 31, column 15:
   -------------------------------------------------
    29:      for (n in 1:N) {
    30:        for (k in 1:K) {
    31:          ps[k] <- log_theta[k]
                        ^
    32:                   + normal_log(y[n],mu[k],sigma[k]);
    33:        }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_mixture_k_prop.stan', line 34, column 23:
   -------------------------------------------------
    32:                   + normal_log(y[n],mu[k],sigma[k]);
    33:        }
    34:        increment_log_prob(log_sum_exp(ps));    
                                ^
    35:      }
    36:    }
   -------------------------------------------------

increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_multi.stan
data {
  int<lower=0> N;
  int<lower=0> J;
  vector[N] y[J];
  vector[N] z[J];
  matrix[N, N] sigma;
}
transformed data {
  row_vector[N] ry[J];
  row_vector[N] rz[J];
  matrix[N, N] inv_sigma;
  for (n in 1 : N) 
    for (j in 1 : J) {
      ry[j][n] <- y[j][n];
      rz[j][n] <- z[j][n];
    }
  inv_sigma <- inverse_spd(sigma);
}
parameters {
  vector[N] beta[J];
  row_vector[N] rbeta[J];
}
model {
  y ~ multi_normal(beta, sigma);
  y ~ multi_normal(beta[1], sigma);
  y[1] ~ multi_normal(beta, sigma);
  y[1] ~ multi_normal(beta[1], sigma);
  y ~ multi_normal(z, sigma);
  y ~ multi_normal(z[1], sigma);
  y[1] ~ multi_normal(z, sigma);
  y[1] ~ multi_normal(z[1], sigma);
  y ~ multi_normal(rbeta, sigma);
  y ~ multi_normal(rbeta[1], sigma);
  y[1] ~ multi_normal(rbeta, sigma);
  y[1] ~ multi_normal(rbeta[1], sigma);
  y ~ multi_normal(rz, sigma);
  y ~ multi_normal(rz[1], sigma);
  y[1] ~ multi_normal(rz, sigma);
  y[1] ~ multi_normal(rz[1], sigma);
  ry ~ multi_normal(beta, sigma);
  ry ~ multi_normal(beta[1], sigma);
  ry[1] ~ multi_normal(beta, sigma);
  ry[1] ~ multi_normal(beta[1], sigma);
  ry ~ multi_normal(z, sigma);
  ry ~ multi_normal(z[1], sigma);
  ry[1] ~ multi_normal(z, sigma);
  ry[1] ~ multi_normal(z[1], sigma);
  ry ~ multi_normal(rbeta, sigma);
  ry ~ multi_normal(rbeta[1], sigma);
  ry[1] ~ multi_normal(rbeta, sigma);
  ry[1] ~ multi_normal(rbeta[1], sigma);
  ry ~ multi_normal(rz, sigma);
  ry ~ multi_normal(rz[1], sigma);
  ry[1] ~ multi_normal(rz, sigma);
  ry[1] ~ multi_normal(rz[1], sigma);
  y ~ multi_normal_cholesky(beta, sigma);
  y ~ multi_normal_cholesky(beta[1], sigma);
  y[1] ~ multi_normal_cholesky(beta, sigma);
  y[1] ~ multi_normal_cholesky(beta[1], sigma);
  y ~ multi_normal_cholesky(z, sigma);
  y ~ multi_normal_cholesky(z[1], sigma);
  y[1] ~ multi_normal_cholesky(z, sigma);
  y[1] ~ multi_normal_cholesky(z[1], sigma);
  y ~ multi_normal_cholesky(rbeta, sigma);
  y ~ multi_normal_cholesky(rbeta[1], sigma);
  y[1] ~ multi_normal_cholesky(rbeta, sigma);
  y[1] ~ multi_normal_cholesky(rbeta[1], sigma);
  y ~ multi_normal_cholesky(rz, sigma);
  y ~ multi_normal_cholesky(rz[1], sigma);
  y[1] ~ multi_normal_cholesky(rz, sigma);
  y[1] ~ multi_normal_cholesky(rz[1], sigma);
  ry ~ multi_normal_cholesky(beta, sigma);
  ry ~ multi_normal_cholesky(beta[1], sigma);
  ry[1] ~ multi_normal_cholesky(beta, sigma);
  ry[1] ~ multi_normal_cholesky(beta[1], sigma);
  ry ~ multi_normal_cholesky(z, sigma);
  ry ~ multi_normal_cholesky(z[1], sigma);
  ry[1] ~ multi_normal_cholesky(z, sigma);
  ry[1] ~ multi_normal_cholesky(z[1], sigma);
  ry ~ multi_normal_cholesky(rbeta, sigma);
  ry ~ multi_normal_cholesky(rbeta[1], sigma);
  ry[1] ~ multi_normal_cholesky(rbeta, sigma);
  ry[1] ~ multi_normal_cholesky(rbeta[1], sigma);
  ry ~ multi_normal_cholesky(rz, sigma);
  ry ~ multi_normal_cholesky(rz[1], sigma);
  ry[1] ~ multi_normal_cholesky(rz, sigma);
  ry[1] ~ multi_normal_cholesky(rz[1], sigma);
  y ~ multi_normal_prec(beta, sigma);
  y ~ multi_normal_prec(beta[1], sigma);
  y[1] ~ multi_normal_prec(beta, sigma);
  y[1] ~ multi_normal_prec(beta[1], sigma);
  y ~ multi_normal_prec(z, sigma);
  y ~ multi_normal_prec(z[1], sigma);
  y[1] ~ multi_normal_prec(z, sigma);
  y[1] ~ multi_normal_prec(z[1], sigma);
  y ~ multi_normal_prec(rbeta, sigma);
  y ~ multi_normal_prec(rbeta[1], sigma);
  y[1] ~ multi_normal_prec(rbeta, sigma);
  y[1] ~ multi_normal_prec(rbeta[1], sigma);
  y ~ multi_normal_prec(rz, sigma);
  y ~ multi_normal_prec(rz[1], sigma);
  y[1] ~ multi_normal_prec(rz, sigma);
  y[1] ~ multi_normal_prec(rz[1], sigma);
  ry ~ multi_normal_prec(beta, sigma);
  ry ~ multi_normal_prec(beta[1], sigma);
  ry[1] ~ multi_normal_prec(beta, sigma);
  ry[1] ~ multi_normal_prec(beta[1], sigma);
  ry ~ multi_normal_prec(z, sigma);
  ry ~ multi_normal_prec(z[1], sigma);
  ry[1] ~ multi_normal_prec(z, sigma);
  ry[1] ~ multi_normal_prec(z[1], sigma);
  ry ~ multi_normal_prec(rbeta, sigma);
  ry ~ multi_normal_prec(rbeta[1], sigma);
  ry[1] ~ multi_normal_prec(rbeta, sigma);
  ry[1] ~ multi_normal_prec(rbeta[1], sigma);
  ry ~ multi_normal_prec(rz, sigma);
  ry ~ multi_normal_prec(rz[1], sigma);
  ry[1] ~ multi_normal_prec(rz, sigma);
  ry[1] ~ multi_normal_prec(rz[1], sigma);
  y ~ multi_student_t(10, beta, sigma);
  y ~ multi_student_t(10, beta[1], sigma);
  y[1] ~ multi_student_t(10, beta, sigma);
  y[1] ~ multi_student_t(10, beta[1], sigma);
  y ~ multi_student_t(10, z, sigma);
  y ~ multi_student_t(10, z[1], sigma);
  y[1] ~ multi_student_t(10, z, sigma);
  y[1] ~ multi_student_t(10, z[1], sigma);
  y ~ multi_student_t(10, rbeta, sigma);
  y ~ multi_student_t(10, rbeta[1], sigma);
  y[1] ~ multi_student_t(10, rbeta, sigma);
  y[1] ~ multi_student_t(10, rbeta[1], sigma);
  y ~ multi_student_t(10, rz, sigma);
  y ~ multi_student_t(10, rz[1], sigma);
  y[1] ~ multi_student_t(10, rz, sigma);
  y[1] ~ multi_student_t(10, rz[1], sigma);
  ry ~ multi_student_t(10, beta, sigma);
  ry ~ multi_student_t(10, beta[1], sigma);
  ry[1] ~ multi_student_t(10, beta, sigma);
  ry[1] ~ multi_student_t(10, beta[1], sigma);
  ry ~ multi_student_t(10, z, sigma);
  ry ~ multi_student_t(10, z[1], sigma);
  ry[1] ~ multi_student_t(10, z, sigma);
  ry[1] ~ multi_student_t(10, z[1], sigma);
  ry ~ multi_student_t(10, rbeta, sigma);
  ry ~ multi_student_t(10, rbeta[1], sigma);
  ry[1] ~ multi_student_t(10, rbeta, sigma);
  ry[1] ~ multi_student_t(10, rbeta[1], sigma);
  ry ~ multi_student_t(10, rz, sigma);
  ry ~ multi_student_t(10, rz[1], sigma);
  ry[1] ~ multi_student_t(10, rz, sigma);
  ry[1] ~ multi_student_t(10, rz[1], sigma);
}


Warning: deprecated language construct used in 'normal_multi.stan', line 14, column 16:
   -------------------------------------------------
    12:    for (n in 1:N)
    13:      for (j in 1:J) {
    14:        ry[j][n] <- y[j][n];
                         ^
    15:        rz[j][n] <- z[j][n];
    16:      }
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_multi.stan', line 15, column 16:
   -------------------------------------------------
    13:      for (j in 1:J) {
    14:        ry[j][n] <- y[j][n];
    15:        rz[j][n] <- z[j][n];
                         ^
    16:      }
    17:    inv_sigma <- inverse_spd(sigma);
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.


Warning: deprecated language construct used in 'normal_multi.stan', line 17, column 13:
   -------------------------------------------------
    15:        rz[j][n] <- z[j][n];
    16:      }
    17:    inv_sigma <- inverse_spd(sigma);
                      ^
    18:  }
    19:  parameters {
   -------------------------------------------------

assignment operator <- is deprecated in the Stan language; use = instead.

  $ ../../../../../install/default/bin/stanc --auto_format normal_truncated.stan
data {
  real U;
  int<lower=1> N;
  real<upper=U> y[N];
}
parameters {
  real mu;
  real<lower=0, upper=2> sigma;
}
model {
  for (n in 1 : N) 
    y[n] ~ normal(mu, sigma) T[ , U];
}

