  $ ../../../../../../install/default/bin/stanc --auto_format ideo_interactions.stan
data {
  int<lower=0> N;
  vector[N] party;
  vector[N] score1;
  vector[N] x;
}
transformed data {
  vector[N] inter;
  inter = party .* x;
}
parameters {
  vector[4] beta;
  real<lower=0> sigma;
}
model {
  score1 ~ normal(beta[1] + beta[2] * party + beta[3] * x + beta[4] * inter,
                  sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format ideo_reparam.stan
data {
  int<lower=0> N;
  vector[N] party;
  vector[N] score1;
  vector[N] z1;
  vector[N] z2;
}
parameters {
  vector[4] beta;
  real<lower=0> sigma;
}
model {
  score1 ~ normal(beta[1] + beta[2] * party + beta[3] * z1 + beta[4] * z2,
                  sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format ideo_two_pred.stan
data {
  int<lower=0> N;
  vector[N] party;
  vector[N] score1;
  vector[N] x;
}
parameters {
  vector[3] beta;
  real<lower=0> sigma;
}
model {
  score1 ~ normal(beta[1] + beta[2] * party + beta[3] * x, sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format sesame_multi_preds_3a.stan
data {
  int<lower=0> N;
  vector[N] encouraged;
  vector[N] setting;
  int site[N];
  vector[N] pretest;
  vector[N] watched;
}
transformed data {
  vector[N] site2;
  vector[N] site3;
  vector[N] site4;
  vector[N] site5;
  for (i in 1 : N) {
    site2[i] = site[i] == 2;
    site3[i] = site[i] == 3;
    site4[i] = site[i] == 4;
    site5[i] = site[i] == 5;
  }
}
parameters {
  vector[8] beta;
  real<lower=0> sigma;
}
model {
  watched ~ normal(beta[1] + beta[2] * encouraged + beta[3] * pretest
                   + beta[4] * site2 + beta[5] * site3 + beta[6] * site4
                   + beta[7] * site5 + beta[8] * setting, sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format sesame_multi_preds_3b.stan
data {
  int<lower=0> N;
  vector[N] pretest;
  vector[N] setting;
  int site[N];
  vector[N] watched_hat;
  vector[N] y;
}
transformed data {
  vector[N] site2;
  vector[N] site3;
  vector[N] site4;
  vector[N] site5;
  for (i in 1 : N) {
    site2[i] = site[i] == 2;
    site3[i] = site[i] == 3;
    site4[i] = site[i] == 4;
    site5[i] = site[i] == 5;
  }
}
parameters {
  vector[8] beta;
  real<lower=0> sigma;
}
model {
  y ~ normal(beta[1] + beta[2] * watched_hat + beta[3] * pretest
             + beta[4] * site2 + beta[5] * site3 + beta[6] * site4
             + beta[7] * site5 + beta[8] * setting, sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format sesame_one_pred_2b.stan
data {
  int<lower=0> N;
  vector[N] watched_hat;
  vector[N] y;
}
parameters {
  vector[2] beta;
  real<lower=0> sigma;
}
model {
  y ~ normal(beta[1] + beta[2] * watched_hat, sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format sesame_one_pred_a.stan
data {
  int<lower=0> N;
  vector[N] encouraged;
  vector[N] watched;
}
parameters {
  vector[2] beta;
  real<lower=0> sigma;
}
model {
  watched ~ normal(beta[1] + beta[2] * encouraged, sigma);
}

  $ ../../../../../../install/default/bin/stanc --auto_format sesame_one_pred_b.stan
data {
  int<lower=0> N;
  vector[N] encouraged;
  vector[N] y;
}
parameters {
  vector[2] beta;
  real<lower=0> sigma;
}
model {
  y ~ normal(beta[1] + beta[2] * encouraged, sigma);
}

