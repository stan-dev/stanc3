  $ ../../../../../../install/default/bin/stanc --auto_format nes_logit.stan
data {
  int<lower=0> N;
  vector[N] income;
  int<lower=0, upper=1> vote[N];
}
parameters {
  vector[2] beta;
}
model {
  vote ~ bernoulli_logit(beta[1] + beta[2] * income);
}

  $ ../../../../../../install/default/bin/stanc --auto_format separation.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> y[N];
  vector[N] x;
}
parameters {
  vector[2] beta;
}
model {
  y ~ bernoulli_logit(beta[1] + beta[2] * x);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_d100ars.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
}
transformed data {
  vector[N] dist100;
  dist100 = dist / 100.0;
}
parameters {
  vector[3] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist100 + beta[3] * arsenic);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_daae_c.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] assoc;
  vector[N] educ;
}
transformed data {
  vector[N] c_dist100;
  vector[N] c_arsenic;
  vector[N] da_inter;
  vector[N] educ4;
  c_dist100 = (dist - mean(dist)) / 100.0;
  c_arsenic = arsenic - mean(arsenic);
  da_inter = c_dist100 .* c_arsenic;
  educ4 = educ / 4.0;
}
parameters {
  vector[6] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_arsenic + beta[4] * da_inter
                             + beta[5] * assoc + beta[6] * educ4);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dae.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] dist100;
  vector[N] educ4;
  dist100 = dist / 100.0;
  educ4 = educ / 4.0;
}
parameters {
  vector[4] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist100 + beta[3] * arsenic
                             + beta[4] * educ4);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dae_c.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] c_dist100;
  vector[N] c_arsenic;
  vector[N] da_inter;
  vector[N] educ4;
  c_dist100 = (dist - mean(dist)) / 100.0;
  c_arsenic = arsenic - mean(arsenic);
  da_inter = c_dist100 .* c_arsenic;
  educ4 = educ / 4.0;
}
parameters {
  vector[5] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_arsenic + beta[4] * da_inter
                             + beta[5] * educ4);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dae_inter.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] dist100;
  vector[N] educ4;
  vector[N] inter;
  dist100 = dist / 100.0;
  educ4 = educ / 4.0;
  inter = dist100 .* arsenic;
}
parameters {
  vector[5] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist100 + beta[3] * arsenic
                             + beta[4] * educ4 + beta[5] * inter);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dae_inter_c.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] c_dist100;
  vector[N] c_arsenic;
  vector[N] c_educ4;
  vector[N] da_inter;
  vector[N] de_inter;
  vector[N] ae_inter;
  c_dist100 = (dist - mean(dist)) / 100.0;
  c_arsenic = arsenic - mean(arsenic);
  c_educ4 = (educ - mean(educ)) / 4.0;
  da_inter = c_dist100 .* c_arsenic;
  de_inter = c_dist100 .* c_educ4;
  ae_inter = c_arsenic .* c_educ4;
}
parameters {
  vector[7] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_arsenic + beta[4] * c_educ4
                             + beta[5] * da_inter + beta[6] * de_inter
                             + beta[7] * ae_inter);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dist.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
}
parameters {
  vector[2] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_dist100.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
}
transformed data {
  vector[N] dist100;
  dist100 = dist / 100.0;
}
parameters {
  vector[2] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist100);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_interaction.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
}
transformed data {
  vector[N] dist100;
  vector[N] inter;
  dist100 = dist / 100.0;
  inter = dist100 .* arsenic;
}
parameters {
  vector[4] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * dist100 + beta[3] * arsenic
                             + beta[4] * inter);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_interaction_c.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
}
transformed data {
  vector[N] c_dist100;
  vector[N] c_arsenic;
  vector[N] inter;
  c_dist100 = (dist - mean(dist)) / 100.0;
  c_arsenic = arsenic - mean(arsenic);
  inter = c_dist100 .* c_arsenic;
}
parameters {
  vector[4] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_arsenic + beta[4] * inter);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_predicted.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] c_dist100;
  vector[N] c_arsenic;
  vector[N] c_educ4;
  vector[N] da_inter;
  vector[N] de_inter;
  vector[N] ae_inter;
  c_dist100 = (dist - mean(dist)) / 100.0;
  c_arsenic = log(arsenic) - mean(log(arsenic));
  c_educ4 = (educ - mean(educ)) / 4.0;
  da_inter = c_dist100 .* c_arsenic;
  de_inter = c_dist100 .* c_educ4;
  ae_inter = c_arsenic .* c_educ4;
}
parameters {
  vector[7] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_arsenic + beta[4] * c_educ4
                             + beta[5] * da_inter + beta[6] * de_inter
                             + beta[7] * ae_inter);
}
generated quantities {
  vector[N] pred;
  for (i in 1 : N) 
    pred[i] = inv_logit(beta[1] + beta[2] * c_dist100[i]
                        + beta[3] * c_arsenic[i] + beta[4] * c_educ4[i]
                        + beta[5] * da_inter[i] + beta[6] * de_inter[i]
                        + beta[7] * ae_inter[i]);
}

  $ ../../../../../../install/default/bin/stanc --auto_format wells_predicted_log.stan
data {
  int<lower=0> N;
  int<lower=0, upper=1> switched[N];
  vector[N] dist;
  vector[N] arsenic;
  vector[N] educ;
}
transformed data {
  vector[N] c_dist100;
  vector[N] log_arsenic;
  vector[N] c_log_arsenic;
  vector[N] c_educ4;
  vector[N] da_inter;
  vector[N] de_inter;
  vector[N] ae_inter;
  c_dist100 = (dist - mean(dist)) / 100.0;
  log_arsenic = log(arsenic);
  c_log_arsenic = log_arsenic - mean(log_arsenic);
  c_educ4 = (educ - mean(educ)) / 4.0;
  da_inter = c_dist100 .* c_log_arsenic;
  de_inter = c_dist100 .* c_educ4;
  ae_inter = c_log_arsenic .* c_educ4;
}
parameters {
  vector[7] beta;
}
model {
  switched ~ bernoulli_logit(beta[1] + beta[2] * c_dist100
                             + beta[3] * c_log_arsenic + beta[4] * c_educ4
                             + beta[5] * da_inter + beta[6] * de_inter
                             + beta[7] * ae_inter);
}
generated quantities {
  vector[N] pred;
  for (i in 1 : N) 
    pred[i] = inv_logit(beta[1] + beta[2] * c_dist100[i]
                        + beta[3] * c_log_arsenic[i] + beta[4] * c_educ4[i]
                        + beta[5] * da_inter[i] + beta[6] * de_inter[i]
                        + beta[7] * ae_inter[i]);
}

