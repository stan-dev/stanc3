  $ ../../../../../install/default/bin/stanc --auto-format ode_adams_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_adams(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                    iaad, raad, md, rvd, vd, iad, rad, id,
                                    rd);
  zd = ode_adams(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                 iad, rad, id, rd);
  zd = ode_adams(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                 rad, id, rd);
  zd = ode_adams(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                 rd);
  zd = ode_adams(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_adams(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_adams(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zd = ode_adams(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zd = ode_adams(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zd = ode_adams(f_3_arg, vd, rd, rad, rad, id, rd);
  zd = ode_adams(f_2_arg, vd, rd, rad, id, rd);
  zd = ode_adams(f_1_arg, vd, rd, rad, rd);
  zd = ode_adams(f_0_arg, vd, rd, rad);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_adams(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_adams(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  z = ode_adams(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  z = ode_adams(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  z = ode_adams(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_adams(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  z = ode_adams(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  z = ode_adams(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  z = ode_adams(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  z = ode_adams(f_3_arg, vd, rd, rad, rad, id, rd);
  z = ode_adams(f_2_arg, vd, rd, rad, id, rd);
  z = ode_adams(f_1_arg, vd, rd, rad, rd);
  z = ode_adams(f_0_arg, vd, rd, rad);
  z = ode_adams(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                ra, id, r);
  z = ode_adams(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                id, r);
  z = ode_adams(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_adams(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_adams(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  z = ode_adams(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  z = ode_adams(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  z = ode_adams(f_5_arg, v, r, ra, v, iad, ra, id, r);
  z = ode_adams(f_4_arg, v, r, ra, iad, ra, id, r);
  z = ode_adams(f_3_arg, v, r, ra, ra, id, r);
  z = ode_adams(f_2_arg, v, r, ra, id, r);
  z = ode_adams(f_1_arg, v, r, ra, r);
  z = ode_adams(f_0_arg, v, r, ra);
}
model {
  array[N] vector[N] zm = ode_adams(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                    iaad, raad, md, rvd, vd, iad, rad, id,
                                    rd);
  zm = ode_adams(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                 iad, rad, id, rd);
  zm = ode_adams(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                 rad, id, rd);
  zm = ode_adams(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                 rd);
  zm = ode_adams(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_adams(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_adams(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zm = ode_adams(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zm = ode_adams(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zm = ode_adams(f_3_arg, vd, rd, rad, rad, id, rd);
  zm = ode_adams(f_2_arg, vd, rd, rad, id, rd);
  zm = ode_adams(f_1_arg, vd, rd, rad, rd);
  zm = ode_adams(f_0_arg, vd, rd, rad);
  zm = ode_adams(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                 ra, id, r);
  zm = ode_adams(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                 id, r);
  zm = ode_adams(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_adams(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_adams(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zm = ode_adams(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zm = ode_adams(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zm = ode_adams(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zm = ode_adams(f_4_arg, v, r, ra, iad, ra, id, r);
  zm = ode_adams(f_3_arg, v, r, ra, ra, id, r);
  zm = ode_adams(f_2_arg, v, r, ra, id, r);
  zm = ode_adams(f_1_arg, v, r, ra, r);
  zm = ode_adams(f_0_arg, v, r, ra);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_adams(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                    iaad, raad, md, rvd, vd, iad, rad, id,
                                    rd);
  zg = ode_adams(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                 iad, rad, id, rd);
  zg = ode_adams(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                 rad, id, rd);
  zg = ode_adams(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                 rd);
  zg = ode_adams(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_adams(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_adams(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zg = ode_adams(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zg = ode_adams(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zg = ode_adams(f_3_arg, vd, rd, rad, rad, id, rd);
  zg = ode_adams(f_2_arg, vd, rd, rad, id, rd);
  zg = ode_adams(f_1_arg, vd, rd, rad, rd);
  zg = ode_adams(f_0_arg, vd, rd, rad);
  zg = ode_adams(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                 ra, id, r);
  zg = ode_adams(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                 id, r);
  zg = ode_adams(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_adams(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_adams(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zg = ode_adams(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zg = ode_adams(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zg = ode_adams(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zg = ode_adams(f_4_arg, v, r, ra, iad, ra, id, r);
  zg = ode_adams(f_3_arg, v, r, ra, ra, id, r);
  zg = ode_adams(f_2_arg, v, r, ra, id, r);
  zg = ode_adams(f_1_arg, v, r, ra, r);
  zg = ode_adams(f_0_arg, v, r, ra);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_adams_tol_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_adams_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                        100, mad, rvad, vad, iaad, raad, md,
                                        rvd, vd, iad, rad, id, rd);
  zd = ode_adams_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                     raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_adams_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                     md, rvd, vd, iad, rad, id, rd);
  zd = ode_adams_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                     rvd, vd, iad, rad, id, rd);
  zd = ode_adams_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd,
                     vd, iad, rad, id, rd);
  zd = ode_adams_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                     rad, id, rd);
  zd = ode_adams_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad,
                     rad, id, rd);
  zd = ode_adams_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                     rd);
  zd = ode_adams_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zd = ode_adams_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zd = ode_adams_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zd = ode_adams_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zd = ode_adams_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_adams_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  z = ode_adams_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_adams_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  z = ode_adams_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  z = ode_adams_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  z = ode_adams_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  z = ode_adams_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  z = ode_adams_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  z = ode_adams_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  z = ode_adams_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  z = ode_adams_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  z = ode_adams_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  z = ode_adams_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  z = ode_adams_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                    raa, m, rv, v, iad, ra, id, r);
  z = ode_adams_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                    m, rv, v, iad, ra, id, r);
  z = ode_adams_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                    rv, v, iad, ra, id, r);
  z = ode_adams_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                    iad, ra, id, r);
  z = ode_adams_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                    ra, id, r);
  z = ode_adams_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                    id, r);
  z = ode_adams_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                    r);
  z = ode_adams_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  z = ode_adams_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  z = ode_adams_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  z = ode_adams_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  z = ode_adams_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  z = ode_adams_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}
model {
  array[N] vector[N] zm = ode_adams_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                        100, mad, rvad, vad, iaad, raad, md,
                                        rvd, vd, iad, rad, id, rd);
  zm = ode_adams_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                     raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_adams_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                     md, rvd, vd, iad, rad, id, rd);
  zm = ode_adams_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                     rvd, vd, iad, rad, id, rd);
  zm = ode_adams_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd,
                     vd, iad, rad, id, rd);
  zm = ode_adams_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                     rad, id, rd);
  zm = ode_adams_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad,
                     rad, id, rd);
  zm = ode_adams_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                     rd);
  zm = ode_adams_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zm = ode_adams_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zm = ode_adams_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zm = ode_adams_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zm = ode_adams_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zm = ode_adams_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                     raa, m, rv, v, iad, ra, id, r);
  zm = ode_adams_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                     m, rv, v, iad, ra, id, r);
  zm = ode_adams_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                     rv, v, iad, ra, id, r);
  zm = ode_adams_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                     iad, ra, id, r);
  zm = ode_adams_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                     ra, id, r);
  zm = ode_adams_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                     id, r);
  zm = ode_adams_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                     r);
  zm = ode_adams_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zm = ode_adams_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zm = ode_adams_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zm = ode_adams_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zm = ode_adams_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zm = ode_adams_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_adams_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                        100, mad, rvad, vad, iaad, raad, md,
                                        rvd, vd, iad, rad, id, rd);
  zg = ode_adams_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                     raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_adams_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                     md, rvd, vd, iad, rad, id, rd);
  zg = ode_adams_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                     rvd, vd, iad, rad, id, rd);
  zg = ode_adams_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd,
                     vd, iad, rad, id, rd);
  zg = ode_adams_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                     rad, id, rd);
  zg = ode_adams_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad,
                     rad, id, rd);
  zg = ode_adams_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                     rd);
  zg = ode_adams_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zg = ode_adams_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zg = ode_adams_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zg = ode_adams_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zg = ode_adams_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zg = ode_adams_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                     raa, m, rv, v, iad, ra, id, r);
  zg = ode_adams_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                     m, rv, v, iad, ra, id, r);
  zg = ode_adams_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                     rv, v, iad, ra, id, r);
  zg = ode_adams_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                     iad, ra, id, r);
  zg = ode_adams_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                     ra, id, r);
  zg = ode_adams_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                     id, r);
  zg = ode_adams_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                     r);
  zg = ode_adams_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zg = ode_adams_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zg = ode_adams_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zg = ode_adams_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zg = ode_adams_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zg = ode_adams_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_adjoint_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
}
data {
  int N;
  int M;
  int i;
}
transformed data {
  real rel_tol_f;
  vector[N] abs_tol_f;
  real rel_tol_b;
  vector[N] abs_tol_b;
  real rel_tol_q;
  real abs_tol_q;
  int max_num_steps;
  int num_checkpoints;
  int interpolation_polynomial;
  int solver_f;
  int solver_b;
}
parameters {
  real y;
  vector[N] y0;
  real t0;
  array[N] real times;
}
transformed parameters {
  array[M] vector[N] z;
  z = ode_adjoint_tol_ctl(f_0_arg, y0, t0, times, rel_tol_f, abs_tol_f,
                          rel_tol_b, abs_tol_b, rel_tol_q, abs_tol_q,
                          max_num_steps, num_checkpoints,
                          interpolation_polynomial, solver_f, solver_b);
  z = ode_adjoint_tol_ctl(f_1_arg, y0, t0, times, rel_tol_f, abs_tol_f,
                          rel_tol_b, abs_tol_b, rel_tol_q, abs_tol_q,
                          max_num_steps, num_checkpoints,
                          interpolation_polynomial, solver_f, solver_b, y);
  z = ode_adjoint_tol_ctl(f_2_arg, y0, t0, times, rel_tol_f, abs_tol_f,
                          rel_tol_b, abs_tol_b, rel_tol_q, abs_tol_q,
                          max_num_steps, num_checkpoints,
                          interpolation_polynomial, solver_f, solver_b, i, y);
}
model {
  y ~ normal(0, 1);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_bdf_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_bdf(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                  iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
               iad, rad, id, rd);
  zd = ode_bdf(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
               id, rd);
  zd = ode_bdf(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
               rd);
  zd = ode_bdf(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zd = ode_bdf(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zd = ode_bdf(f_3_arg, vd, rd, rad, rad, id, rd);
  zd = ode_bdf(f_2_arg, vd, rd, rad, id, rd);
  zd = ode_bdf(f_1_arg, vd, rd, rad, rd);
  zd = ode_bdf(f_0_arg, vd, rd, rad);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_bdf(f_12_arg, vd, rd, rad, mad, rvad, vad, iaad,
                                 raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_bdf(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd, iad,
              rad, id, rd);
  z = ode_bdf(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
              id, rd);
  z = ode_bdf(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
              rd);
  z = ode_bdf(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_bdf(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  z = ode_bdf(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  z = ode_bdf(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  z = ode_bdf(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  z = ode_bdf(f_3_arg, vd, rd, rad, rad, id, rd);
  z = ode_bdf(f_2_arg, vd, rd, rad, id, rd);
  z = ode_bdf(f_1_arg, vd, rd, rad, rd);
  z = ode_bdf(f_0_arg, vd, rd, rad);
  z = ode_bdf(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad, ra,
              id, r);
  z = ode_bdf(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra, id,
              r);
  z = ode_bdf(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_bdf(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_bdf(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  z = ode_bdf(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  z = ode_bdf(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  z = ode_bdf(f_5_arg, v, r, ra, v, iad, ra, id, r);
  z = ode_bdf(f_4_arg, v, r, ra, iad, ra, id, r);
  z = ode_bdf(f_3_arg, v, r, ra, ra, id, r);
  z = ode_bdf(f_2_arg, v, r, ra, id, r);
  z = ode_bdf(f_1_arg, v, r, ra, r);
  z = ode_bdf(f_0_arg, v, r, ra);
}
model {
  array[N] vector[N] zm = ode_bdf(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                  iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
               iad, rad, id, rd);
  zm = ode_bdf(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
               id, rd);
  zm = ode_bdf(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
               rd);
  zm = ode_bdf(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zm = ode_bdf(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zm = ode_bdf(f_3_arg, vd, rd, rad, rad, id, rd);
  zm = ode_bdf(f_2_arg, vd, rd, rad, id, rd);
  zm = ode_bdf(f_1_arg, vd, rd, rad, rd);
  zm = ode_bdf(f_0_arg, vd, rd, rad);
  zm = ode_bdf(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad, ra,
               id, r);
  zm = ode_bdf(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra, id,
               r);
  zm = ode_bdf(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_bdf(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_bdf(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zm = ode_bdf(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zm = ode_bdf(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zm = ode_bdf(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zm = ode_bdf(f_4_arg, v, r, ra, iad, ra, id, r);
  zm = ode_bdf(f_3_arg, v, r, ra, ra, id, r);
  zm = ode_bdf(f_2_arg, v, r, ra, id, r);
  zm = ode_bdf(f_1_arg, v, r, ra, r);
  zm = ode_bdf(f_0_arg, v, r, ra);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_bdf(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                  iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
               iad, rad, id, rd);
  zg = ode_bdf(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
               id, rd);
  zg = ode_bdf(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
               rd);
  zg = ode_bdf(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zg = ode_bdf(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zg = ode_bdf(f_3_arg, vd, rd, rad, rad, id, rd);
  zg = ode_bdf(f_2_arg, vd, rd, rad, id, rd);
  zg = ode_bdf(f_1_arg, vd, rd, rad, rd);
  zg = ode_bdf(f_0_arg, vd, rd, rad);
  zg = ode_bdf(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad, ra,
               id, r);
  zg = ode_bdf(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra, id,
               r);
  zg = ode_bdf(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_bdf(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_bdf(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zg = ode_bdf(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zg = ode_bdf(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zg = ode_bdf(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zg = ode_bdf(f_4_arg, v, r, ra, iad, ra, id, r);
  zg = ode_bdf(f_3_arg, v, r, ra, ra, id, r);
  zg = ode_bdf(f_2_arg, v, r, ra, id, r);
  zg = ode_bdf(f_1_arg, v, r, ra, r);
  zg = ode_bdf(f_0_arg, v, r, ra);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_bdf_tol_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_bdf_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                      mad, rvad, vad, iaad, raad, md, rvd,
                                      vd, iad, rad, id, rd);
  zd = ode_bdf_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                   raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                   md, rvd, vd, iad, rad, id, rd);
  zd = ode_bdf_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                   rvd, vd, iad, rad, id, rd);
  zd = ode_bdf_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                   iad, rad, id, rd);
  zd = ode_bdf_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                   rad, id, rd);
  zd = ode_bdf_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                   id, rd);
  zd = ode_bdf_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                   rd);
  zd = ode_bdf_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zd = ode_bdf_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zd = ode_bdf_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zd = ode_bdf_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zd = ode_bdf_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_bdf_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                     mad, rvad, vad, iaad, raad, md, rvd, vd,
                                     iad, rad, id, rd);
  z = ode_bdf_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                  raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_bdf_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                  md, rvd, vd, iad, rad, id, rd);
  z = ode_bdf_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md, rvd,
                  vd, iad, rad, id, rd);
  z = ode_bdf_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                  iad, rad, id, rd);
  z = ode_bdf_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                  rad, id, rd);
  z = ode_bdf_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                  id, rd);
  z = ode_bdf_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                  rd);
  z = ode_bdf_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  z = ode_bdf_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  z = ode_bdf_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  z = ode_bdf_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  z = ode_bdf_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  z = ode_bdf_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                  raa, m, rv, v, iad, ra, id, r);
  z = ode_bdf_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa, m,
                  rv, v, iad, ra, id, r);
  z = ode_bdf_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m, rv,
                  v, iad, ra, id, r);
  z = ode_bdf_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                  iad, ra, id, r);
  z = ode_bdf_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad, ra,
                  id, r);
  z = ode_bdf_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra, id,
                  r);
  z = ode_bdf_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id, r);
  z = ode_bdf_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  z = ode_bdf_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  z = ode_bdf_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  z = ode_bdf_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  z = ode_bdf_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  z = ode_bdf_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}
model {
  array[N] vector[N] zm = ode_bdf_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                      mad, rvad, vad, iaad, raad, md, rvd,
                                      vd, iad, rad, id, rd);
  zm = ode_bdf_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                   raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                   md, rvd, vd, iad, rad, id, rd);
  zm = ode_bdf_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                   rvd, vd, iad, rad, id, rd);
  zm = ode_bdf_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                   iad, rad, id, rd);
  zm = ode_bdf_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                   rad, id, rd);
  zm = ode_bdf_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                   id, rd);
  zm = ode_bdf_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                   rd);
  zm = ode_bdf_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zm = ode_bdf_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zm = ode_bdf_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zm = ode_bdf_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zm = ode_bdf_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zm = ode_bdf_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                   raa, m, rv, v, iad, ra, id, r);
  zm = ode_bdf_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                   m, rv, v, iad, ra, id, r);
  zm = ode_bdf_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m, rv,
                   v, iad, ra, id, r);
  zm = ode_bdf_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                   iad, ra, id, r);
  zm = ode_bdf_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                   ra, id, r);
  zm = ode_bdf_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra, id,
                   r);
  zm = ode_bdf_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id, r);
  zm = ode_bdf_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zm = ode_bdf_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zm = ode_bdf_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zm = ode_bdf_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zm = ode_bdf_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zm = ode_bdf_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_bdf_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                      mad, rvad, vad, iaad, raad, md, rvd,
                                      vd, iad, rad, id, rd);
  zg = ode_bdf_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                   raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                   md, rvd, vd, iad, rad, id, rd);
  zg = ode_bdf_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                   rvd, vd, iad, rad, id, rd);
  zg = ode_bdf_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                   iad, rad, id, rd);
  zg = ode_bdf_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                   rad, id, rd);
  zg = ode_bdf_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                   id, rd);
  zg = ode_bdf_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                   rd);
  zg = ode_bdf_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zg = ode_bdf_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zg = ode_bdf_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zg = ode_bdf_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zg = ode_bdf_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zg = ode_bdf_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                   raa, m, rv, v, iad, ra, id, r);
  zg = ode_bdf_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                   m, rv, v, iad, ra, id, r);
  zg = ode_bdf_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m, rv,
                   v, iad, ra, id, r);
  zg = ode_bdf_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                   iad, ra, id, r);
  zg = ode_bdf_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                   ra, id, r);
  zg = ode_bdf_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra, id,
                   r);
  zg = ode_bdf_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id, r);
  zg = ode_bdf_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zg = ode_bdf_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zg = ode_bdf_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zg = ode_bdf_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zg = ode_bdf_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zg = ode_bdf_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_ckrk_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_ckrk(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zd = ode_ckrk(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zd = ode_ckrk(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zd = ode_ckrk(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zd = ode_ckrk(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zd = ode_ckrk(f_3_arg, vd, rd, rad, rad, id, rd);
  zd = ode_ckrk(f_2_arg, vd, rd, rad, id, rd);
  zd = ode_ckrk(f_1_arg, vd, rd, rad, rd);
  zd = ode_ckrk(f_0_arg, vd, rd, rad);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_ckrk(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                  iaad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
               iad, rad, id, rd);
  z = ode_ckrk(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
               id, rd);
  z = ode_ckrk(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
               rd);
  z = ode_ckrk(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  z = ode_ckrk(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  z = ode_ckrk(f_3_arg, vd, rd, rad, rad, id, rd);
  z = ode_ckrk(f_2_arg, vd, rd, rad, id, rd);
  z = ode_ckrk(f_1_arg, vd, rd, rad, rd);
  z = ode_ckrk(f_0_arg, vd, rd, rad);
  z = ode_ckrk(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad, ra,
               id, r);
  z = ode_ckrk(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra, id,
               r);
  z = ode_ckrk(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_ckrk(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_ckrk(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  z = ode_ckrk(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  z = ode_ckrk(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  z = ode_ckrk(f_5_arg, v, r, ra, v, iad, ra, id, r);
  z = ode_ckrk(f_4_arg, v, r, ra, iad, ra, id, r);
  z = ode_ckrk(f_3_arg, v, r, ra, ra, id, r);
  z = ode_ckrk(f_2_arg, v, r, ra, id, r);
  z = ode_ckrk(f_1_arg, v, r, ra, r);
  z = ode_ckrk(f_0_arg, v, r, ra);
}
model {
  array[N] vector[N] zm = ode_ckrk(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zm = ode_ckrk(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zm = ode_ckrk(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zm = ode_ckrk(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zm = ode_ckrk(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zm = ode_ckrk(f_3_arg, vd, rd, rad, rad, id, rd);
  zm = ode_ckrk(f_2_arg, vd, rd, rad, id, rd);
  zm = ode_ckrk(f_1_arg, vd, rd, rad, rd);
  zm = ode_ckrk(f_0_arg, vd, rd, rad);
  zm = ode_ckrk(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                ra, id, r);
  zm = ode_ckrk(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                id, r);
  zm = ode_ckrk(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_ckrk(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_ckrk(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zm = ode_ckrk(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zm = ode_ckrk(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zm = ode_ckrk(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zm = ode_ckrk(f_4_arg, v, r, ra, iad, ra, id, r);
  zm = ode_ckrk(f_3_arg, v, r, ra, ra, id, r);
  zm = ode_ckrk(f_2_arg, v, r, ra, id, r);
  zm = ode_ckrk(f_1_arg, v, r, ra, r);
  zm = ode_ckrk(f_0_arg, v, r, ra);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_ckrk(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zg = ode_ckrk(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zg = ode_ckrk(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zg = ode_ckrk(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zg = ode_ckrk(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zg = ode_ckrk(f_3_arg, vd, rd, rad, rad, id, rd);
  zg = ode_ckrk(f_2_arg, vd, rd, rad, id, rd);
  zg = ode_ckrk(f_1_arg, vd, rd, rad, rd);
  zg = ode_ckrk(f_0_arg, vd, rd, rad);
  zg = ode_ckrk(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                ra, id, r);
  zg = ode_ckrk(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                id, r);
  zg = ode_ckrk(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_ckrk(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_ckrk(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zg = ode_ckrk(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zg = ode_ckrk(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zg = ode_ckrk(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zg = ode_ckrk(f_4_arg, v, r, ra, iad, ra, id, r);
  zg = ode_ckrk(f_3_arg, v, r, ra, ra, id, r);
  zg = ode_ckrk(f_2_arg, v, r, ra, id, r);
  zg = ode_ckrk(f_1_arg, v, r, ra, r);
  zg = ode_ckrk(f_0_arg, v, r, ra);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_ckrk_tol_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_ckrk_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zd = ode_ckrk_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zd = ode_ckrk_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zd = ode_ckrk_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zd = ode_ckrk_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zd = ode_ckrk_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zd = ode_ckrk_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zd = ode_ckrk_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zd = ode_ckrk_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zd = ode_ckrk_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_ckrk_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                      mad, rvad, vad, iaad, raad, md, rvd,
                                      vd, iad, rad, id, rd);
  z = ode_ckrk_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                   raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                   md, rvd, vd, iad, rad, id, rd);
  z = ode_ckrk_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                   rvd, vd, iad, rad, id, rd);
  z = ode_ckrk_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                   iad, rad, id, rd);
  z = ode_ckrk_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                   rad, id, rd);
  z = ode_ckrk_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                   id, rd);
  z = ode_ckrk_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                   rd);
  z = ode_ckrk_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  z = ode_ckrk_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  z = ode_ckrk_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  z = ode_ckrk_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  z = ode_ckrk_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  z = ode_ckrk_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                   raa, m, rv, v, iad, ra, id, r);
  z = ode_ckrk_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                   m, rv, v, iad, ra, id, r);
  z = ode_ckrk_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m, rv,
                   v, iad, ra, id, r);
  z = ode_ckrk_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                   iad, ra, id, r);
  z = ode_ckrk_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                   ra, id, r);
  z = ode_ckrk_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra, id,
                   r);
  z = ode_ckrk_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id, r);
  z = ode_ckrk_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  z = ode_ckrk_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  z = ode_ckrk_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  z = ode_ckrk_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  z = ode_ckrk_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  z = ode_ckrk_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}
model {
  array[N] vector[N] zm = ode_ckrk_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zm = ode_ckrk_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zm = ode_ckrk_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zm = ode_ckrk_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zm = ode_ckrk_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zm = ode_ckrk_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zm = ode_ckrk_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zm = ode_ckrk_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zm = ode_ckrk_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zm = ode_ckrk_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zm = ode_ckrk_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                    raa, m, rv, v, iad, ra, id, r);
  zm = ode_ckrk_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                    m, rv, v, iad, ra, id, r);
  zm = ode_ckrk_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                    rv, v, iad, ra, id, r);
  zm = ode_ckrk_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                    iad, ra, id, r);
  zm = ode_ckrk_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                    ra, id, r);
  zm = ode_ckrk_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                    id, r);
  zm = ode_ckrk_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                    r);
  zm = ode_ckrk_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zm = ode_ckrk_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zm = ode_ckrk_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zm = ode_ckrk_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zm = ode_ckrk_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zm = ode_ckrk_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_ckrk_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zg = ode_ckrk_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zg = ode_ckrk_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zg = ode_ckrk_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zg = ode_ckrk_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zg = ode_ckrk_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zg = ode_ckrk_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zg = ode_ckrk_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zg = ode_ckrk_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zg = ode_ckrk_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zg = ode_ckrk_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                    raa, m, rv, v, iad, ra, id, r);
  zg = ode_ckrk_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                    m, rv, v, iad, ra, id, r);
  zg = ode_ckrk_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                    rv, v, iad, ra, id, r);
  zg = ode_ckrk_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                    iad, ra, id, r);
  zg = ode_ckrk_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                    ra, id, r);
  zg = ode_ckrk_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                    id, r);
  zg = ode_ckrk_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                    r);
  zg = ode_ckrk_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zg = ode_ckrk_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zg = ode_ckrk_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zg = ode_ckrk_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zg = ode_ckrk_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zg = ode_ckrk_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_rk45_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_rk45(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zd = ode_rk45(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zd = ode_rk45(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zd = ode_rk45(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zd = ode_rk45(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zd = ode_rk45(f_3_arg, vd, rd, rad, rad, id, rd);
  zd = ode_rk45(f_2_arg, vd, rd, rad, id, rd);
  zd = ode_rk45(f_1_arg, vd, rd, rad, rd);
  zd = ode_rk45(f_0_arg, vd, rd, rad);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_rk45(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                  iaad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_rk45(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
               iad, rad, id, rd);
  z = ode_rk45(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad, rad,
               id, rd);
  z = ode_rk45(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
               rd);
  z = ode_rk45(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_rk45(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  z = ode_rk45(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  z = ode_rk45(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  z = ode_rk45(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  z = ode_rk45(f_3_arg, vd, rd, rad, rad, id, rd);
  z = ode_rk45(f_2_arg, vd, rd, rad, id, rd);
  z = ode_rk45(f_1_arg, vd, rd, rad, rd);
  z = ode_rk45(f_0_arg, vd, rd, rad);
  z = ode_rk45(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad, ra,
               id, r);
  z = ode_rk45(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra, id,
               r);
  z = ode_rk45(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_rk45(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  z = ode_rk45(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  z = ode_rk45(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  z = ode_rk45(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  z = ode_rk45(f_5_arg, v, r, ra, v, iad, ra, id, r);
  z = ode_rk45(f_4_arg, v, r, ra, iad, ra, id, r);
  z = ode_rk45(f_3_arg, v, r, ra, ra, id, r);
  z = ode_rk45(f_2_arg, v, r, ra, id, r);
  z = ode_rk45(f_1_arg, v, r, ra, r);
  z = ode_rk45(f_0_arg, v, r, ra);
}
model {
  array[N] vector[N] zm = ode_rk45(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zm = ode_rk45(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zm = ode_rk45(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zm = ode_rk45(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zm = ode_rk45(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zm = ode_rk45(f_3_arg, vd, rd, rad, rad, id, rd);
  zm = ode_rk45(f_2_arg, vd, rd, rad, id, rd);
  zm = ode_rk45(f_1_arg, vd, rd, rad, rd);
  zm = ode_rk45(f_0_arg, vd, rd, rad);
  zm = ode_rk45(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                ra, id, r);
  zm = ode_rk45(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                id, r);
  zm = ode_rk45(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_rk45(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zm = ode_rk45(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zm = ode_rk45(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zm = ode_rk45(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zm = ode_rk45(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zm = ode_rk45(f_4_arg, v, r, ra, iad, ra, id, r);
  zm = ode_rk45(f_3_arg, v, r, ra, ra, id, r);
  zm = ode_rk45(f_2_arg, v, r, ra, id, r);
  zm = ode_rk45(f_1_arg, v, r, ra, r);
  zm = ode_rk45(f_0_arg, v, r, ra);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_rk45(f_12_arg, vd, rd, rad, mad, rvad, vad,
                                   iaad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45(f_11_arg, vd, rd, rad, rvad, vad, iaad, raad, md, rvd, vd,
                iad, rad, id, rd);
  zg = ode_rk45(f_10_arg, vd, rd, rad, vad, iaad, raad, md, rvd, vd, iad,
                rad, id, rd);
  zg = ode_rk45(f_9_arg, vd, rd, rad, iaad, raad, md, rvd, vd, iad, rad, id,
                rd);
  zg = ode_rk45(f_8_arg, vd, rd, rad, raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45(f_7_arg, vd, rd, rad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45(f_6_arg, vd, rd, rad, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45(f_5_arg, vd, rd, rad, vd, iad, rad, id, rd);
  zg = ode_rk45(f_4_arg, vd, rd, rad, iad, rad, id, rd);
  zg = ode_rk45(f_3_arg, vd, rd, rad, rad, id, rd);
  zg = ode_rk45(f_2_arg, vd, rd, rad, id, rd);
  zg = ode_rk45(f_1_arg, vd, rd, rad, rd);
  zg = ode_rk45(f_0_arg, vd, rd, rad);
  zg = ode_rk45(f_12_arg, v, r, ra, ma, rva, va, iaad, raa, m, rv, v, iad,
                ra, id, r);
  zg = ode_rk45(f_11_arg, v, r, ra, rva, va, iaad, raa, m, rv, v, iad, ra,
                id, r);
  zg = ode_rk45(f_10_arg, v, r, ra, va, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_rk45(f_9_arg, v, r, ra, iaad, raa, m, rv, v, iad, ra, id, r);
  zg = ode_rk45(f_8_arg, v, r, ra, raa, m, rv, v, iad, ra, id, r);
  zg = ode_rk45(f_7_arg, v, r, ra, m, rv, v, iad, ra, id, r);
  zg = ode_rk45(f_6_arg, v, r, ra, rv, v, iad, ra, id, r);
  zg = ode_rk45(f_5_arg, v, r, ra, v, iad, ra, id, r);
  zg = ode_rk45(f_4_arg, v, r, ra, iad, ra, id, r);
  zg = ode_rk45(f_3_arg, v, r, ra, ra, id, r);
  zg = ode_rk45(f_2_arg, v, r, ra, id, r);
  zg = ode_rk45(f_1_arg, v, r, ra, r);
  zg = ode_rk45(f_0_arg, v, r, ra);
}

  $ ../../../../../install/default/bin/stanc --auto-format ode_rk45_tol_test_model.stan
functions {
  vector f_0_arg(real t, vector z) {
    return z;
  }
  vector f_1_arg(real t, vector z, real a) {
    return z;
  }
  vector f_2_arg(real t, vector z, int b, real a) {
    return z;
  }
  vector f_3_arg(real t, vector z, array[] real c, int b, real a) {
    return z;
  }
  vector f_4_arg(real t, vector z, array[] int d, array[] real c, int b,
                 real a) {
    return z;
  }
  vector f_5_arg(real t, vector z, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_6_arg(real t, vector z, row_vector f, vector e, array[] int d,
                 array[] real c, int b, real a) {
    return z;
  }
  vector f_7_arg(real t, vector z, matrix g, row_vector f, vector e,
                 array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_8_arg(real t, vector z, array[,] real h, matrix g, row_vector f,
                 vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_9_arg(real t, vector z, array[,] int i, array[,] real h, matrix g,
                 row_vector f, vector e, array[] int d, array[] real c,
                 int b, real a) {
    return z;
  }
  vector f_10_arg(real t, vector z, array[] vector j, array[,] int i,
                  array[,] real h, matrix g, row_vector f, vector e,
                  array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_11_arg(real t, vector z, array[] row_vector k, array[] vector j,
                  array[,] int i, array[,] real h, matrix g, row_vector f,
                  vector e, array[] int d, array[] real c, int b, real a) {
    return z;
  }
  vector f_12_arg(real t, vector z, array[] matrix l, array[] row_vector k,
                  array[] vector j, array[,] int i, array[,] real h,
                  matrix g, row_vector f, vector e, array[] int d,
                  array[] real c, int b, real a) {
    return z;
  }
}
data {
  int N;
  int id;
  real rd;
  array[N] real rad;
  array[N] int iad;
  vector[N] vd;
  row_vector[N] rvd;
  matrix[N, N] md;
  array[N, N] real raad;
  array[N, N] int iaad;
  array[N] vector[N] vad;
  array[N] row_vector[N] rvad;
  array[N] matrix[N, N] mad;
}
transformed data {
  array[N] vector[N] zd = ode_rk45_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zd = ode_rk45_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zd = ode_rk45_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zd = ode_rk45_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zd = ode_rk45_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zd = ode_rk45_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zd = ode_rk45_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zd = ode_rk45_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zd = ode_rk45_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zd = ode_rk45_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zd = ode_rk45_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zd = ode_rk45_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
}
parameters {
  real r;
  array[N] real ra;
  vector[N] v;
  row_vector[N] rv;
  matrix[N, N] m;
  array[N, N] real raa;
  array[N] vector[N] va;
  array[N] row_vector[N] rva;
  array[N] matrix[N, N] ma;
}
transformed parameters {
  array[N] vector[N] z = ode_rk45_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6, 100,
                                      mad, rvad, vad, iaad, raad, md, rvd,
                                      vd, iad, rad, id, rd);
  z = ode_rk45_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                   raad, md, rvd, vd, iad, rad, id, rd);
  z = ode_rk45_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                   md, rvd, vd, iad, rad, id, rd);
  z = ode_rk45_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                   rvd, vd, iad, rad, id, rd);
  z = ode_rk45_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                   iad, rad, id, rd);
  z = ode_rk45_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                   rad, id, rd);
  z = ode_rk45_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                   id, rd);
  z = ode_rk45_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                   rd);
  z = ode_rk45_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  z = ode_rk45_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  z = ode_rk45_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  z = ode_rk45_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  z = ode_rk45_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  z = ode_rk45_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                   raa, m, rv, v, iad, ra, id, r);
  z = ode_rk45_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                   m, rv, v, iad, ra, id, r);
  z = ode_rk45_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m, rv,
                   v, iad, ra, id, r);
  z = ode_rk45_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                   iad, ra, id, r);
  z = ode_rk45_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                   ra, id, r);
  z = ode_rk45_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra, id,
                   r);
  z = ode_rk45_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id, r);
  z = ode_rk45_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  z = ode_rk45_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  z = ode_rk45_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  z = ode_rk45_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  z = ode_rk45_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  z = ode_rk45_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}
model {
  array[N] vector[N] zm = ode_rk45_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zm = ode_rk45_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zm = ode_rk45_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zm = ode_rk45_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zm = ode_rk45_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zm = ode_rk45_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zm = ode_rk45_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zm = ode_rk45_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zm = ode_rk45_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zm = ode_rk45_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zm = ode_rk45_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zm = ode_rk45_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zm = ode_rk45_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                    raa, m, rv, v, iad, ra, id, r);
  zm = ode_rk45_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                    m, rv, v, iad, ra, id, r);
  zm = ode_rk45_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                    rv, v, iad, ra, id, r);
  zm = ode_rk45_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                    iad, ra, id, r);
  zm = ode_rk45_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                    ra, id, r);
  zm = ode_rk45_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                    id, r);
  zm = ode_rk45_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                    r);
  zm = ode_rk45_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zm = ode_rk45_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zm = ode_rk45_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zm = ode_rk45_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zm = ode_rk45_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zm = ode_rk45_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
  r ~ normal(0, 1);
}
generated quantities {
  array[N] vector[N] zg = ode_rk45_tol(f_12_arg, vd, rd, rad, 1e-6, 1e-6,
                                       100, mad, rvad, vad, iaad, raad, md,
                                       rvd, vd, iad, rad, id, rd);
  zg = ode_rk45_tol(f_11_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvad, vad, iaad,
                    raad, md, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45_tol(f_10_arg, vd, rd, rad, 1e-6, 1e-6, 100, vad, iaad, raad,
                    md, rvd, vd, iad, rad, id, rd);
  zg = ode_rk45_tol(f_9_arg, vd, rd, rad, 1e-6, 1e-6, 100, iaad, raad, md,
                    rvd, vd, iad, rad, id, rd);
  zg = ode_rk45_tol(f_8_arg, vd, rd, rad, 1e-6, 1e-6, 100, raad, md, rvd, vd,
                    iad, rad, id, rd);
  zg = ode_rk45_tol(f_7_arg, vd, rd, rad, 1e-6, 1e-6, 100, md, rvd, vd, iad,
                    rad, id, rd);
  zg = ode_rk45_tol(f_6_arg, vd, rd, rad, 1e-6, 1e-6, 100, rvd, vd, iad, rad,
                    id, rd);
  zg = ode_rk45_tol(f_5_arg, vd, rd, rad, 1e-6, 1e-6, 100, vd, iad, rad, id,
                    rd);
  zg = ode_rk45_tol(f_4_arg, vd, rd, rad, 1e-6, 1e-6, 100, iad, rad, id, rd);
  zg = ode_rk45_tol(f_3_arg, vd, rd, rad, 1e-6, 1e-6, 100, rad, id, rd);
  zg = ode_rk45_tol(f_2_arg, vd, rd, rad, 1e-6, 1e-6, 100, id, rd);
  zg = ode_rk45_tol(f_1_arg, vd, rd, rad, 1e-6, 1e-6, 100, rd);
  zg = ode_rk45_tol(f_0_arg, vd, rd, rad, 1e-6, 1e-6, 100);
  zg = ode_rk45_tol(f_12_arg, v, r, ra, 1e-6, 1e-6, 100, ma, rva, va, iaad,
                    raa, m, rv, v, iad, ra, id, r);
  zg = ode_rk45_tol(f_11_arg, v, r, ra, 1e-6, 1e-6, 100, rva, va, iaad, raa,
                    m, rv, v, iad, ra, id, r);
  zg = ode_rk45_tol(f_10_arg, v, r, ra, 1e-6, 1e-6, 100, va, iaad, raa, m,
                    rv, v, iad, ra, id, r);
  zg = ode_rk45_tol(f_9_arg, v, r, ra, 1e-6, 1e-6, 100, iaad, raa, m, rv, v,
                    iad, ra, id, r);
  zg = ode_rk45_tol(f_8_arg, v, r, ra, 1e-6, 1e-6, 100, raa, m, rv, v, iad,
                    ra, id, r);
  zg = ode_rk45_tol(f_7_arg, v, r, ra, 1e-6, 1e-6, 100, m, rv, v, iad, ra,
                    id, r);
  zg = ode_rk45_tol(f_6_arg, v, r, ra, 1e-6, 1e-6, 100, rv, v, iad, ra, id,
                    r);
  zg = ode_rk45_tol(f_5_arg, v, r, ra, 1e-6, 1e-6, 100, v, iad, ra, id, r);
  zg = ode_rk45_tol(f_4_arg, v, r, ra, 1e-6, 1e-6, 100, iad, ra, id, r);
  zg = ode_rk45_tol(f_3_arg, v, r, ra, 1e-6, 1e-6, 100, ra, id, r);
  zg = ode_rk45_tol(f_2_arg, v, r, ra, 1e-6, 1e-6, 100, id, r);
  zg = ode_rk45_tol(f_1_arg, v, r, ra, 1e-6, 1e-6, 100, r);
  zg = ode_rk45_tol(f_0_arg, v, r, ra, 1e-6, 1e-6, 100);
}

