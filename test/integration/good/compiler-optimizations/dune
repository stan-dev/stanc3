(rule
 (targets cpp.output)
 (deps
  (package stanc)
  (:stanfiles
   optimizations.stan
   expr-prop-fail8.stan
   lcm-experiment2.stan
   expr-prop-fail7.stan
   expr-prop-experiment2.stan
   lcm-experiment.stan
   expr-prop-fail6.stan
   expr-prop-experiment.stan
   expr-prop-fail5.stan
   expr-prop-fail4.stan
   lcm-fails2.stan
   lcm-fails.stan
   unroll-limit.stan
   expr-prop-fail3.stan
   expr-prop-fail2.stan
   inlining-fail2.stan
   dce-fail.stan
   partial-eval.stan
   copy_fail.stan
   fails-test.stan
   off-small.stan
   off-dce.stan
   stalled1-failure.stan
   expr-prop-fail.stan
   ad-level-failing.stan
   ad-level-deep-dependence.stan
   overloaded-fn.stan
   lupdf-inlining.stan
   unenforce-initialize.stan
   partial_eval_multiply.stan
   inline-functions-varmat.stan))
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args} "%{bin:stanc} --O --print-cpp" %{stanfiles}))))

(rule
 (alias runtest)
 (action
  (diff cpp.expected cpp.output)))

(rule
 (targets cppO1.output)
 (deps
  (package stanc)
  (:stanfiles
   optimizations.stan
   expr-prop-fail8.stan
   lcm-experiment2.stan
   expr-prop-fail7.stan
   expr-prop-experiment2.stan
   lcm-experiment.stan
   expr-prop-fail6.stan
   expr-prop-experiment.stan
   expr-prop-fail5.stan
   expr-prop-fail4.stan
   lcm-fails2.stan
   lcm-fails.stan
   unroll-limit.stan
   expr-prop-fail3.stan
   expr-prop-fail2.stan
   inlining-fail2.stan
   dce-fail.stan
   partial-eval.stan
   copy_fail.stan
   fails-test.stan
   off-small.stan
   off-dce.stan
   stalled1-failure.stan
   expr-prop-fail.stan
   ad-level-failing.stan
   ad-level-deep-dependence.stan
   lupdf-inlining.stan
   unenforce-initialize.stan
   unenforce-initialize-should-fail.stan
   partial_eval_multiply.stan
   inline-functions-varmat.stan))
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args} "%{bin:stanc} --O1 --print-cpp" %{stanfiles}))))

(rule
 (alias runtest)
 (action
  (diff cppO1.expected cppO1.output)))

(rule
 (targets cppO0.output)
 (deps
  (package stanc)
  (:stanfiles
   (glob_files *.stan)))
 (action
  (with-stdout-to
   %{targets}
   (run %{bin:run_bin_on_args} "%{bin:stanc} --print-cpp --O0" %{stanfiles}))))

(rule
 (alias runtest)
 (action
  (diff cppO0.expected cppO0.output)))
