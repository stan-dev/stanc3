$ node allow-undefined.js
Semantic error in 'string', line 3, column 8 to column 11: 
Function is declared without specifying a definition.

$ node auto-format.js
parameters {
  real y;
}
transformed parameters {
  print("this line is much, much, much ", "too long", " to print on one line");
}
model {
  y ~ std_normal();
}

parameters {
  real y;
}
transformed parameters {
  print("this line is much, much, much ",
        "too long",
        " to print on one line");
}
model {
  y ~ std_normal();
}

$ node basic.js
Semantic error in 'string', line 6, column 4 to column 5: 
Identifier 'z' not in scope.

$ node canonical.js
transformed data {
  real a = lmultiply(4, 5);
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

transformed data {
  real a = lmultiply(4, 5);
}
parameters {
  real y;
}
model {
  y ~ normal(((((((((0)))))))), 1);
}

transformed data {
  real a = multiply_log(4, 5);
}
parameters {
  real y;
}
model {
  y ~ normal(0, 1);
}

$ node data-generation.js
dim(x) = (3, 4)
dim(y) = (5, 2, 4)
dim(z) = (3, 4)
dim(w) = (3)
dim(p) = (4, 3)

$ node filename.js
Semantic error in 'good_filename', line 6, column 4 to column 5: 
Identifier 'z' not in scope.

Semantic error in 'string', line 6, column 4 to column 5: 
Identifier 'z' not in scope.

$ node functions-only.js
real my_log1p_exp(real x) {
  return log1p_exp(x);
}

real array_fun(array[] real a) {
  return sum(a);
}

real int_array_fun(array[] int a) {
  return sum(a);
}

vector my_vector_mul_by_5(vector x) {
  vector[num_elements(x)] result = x * 5.0;
  return result;
}

int int_only_multiplication(int a, int b) {
  return a * b;
}

real test_lgamma(real x) {
  return lgamma(x);
}

// test special functions
void test_lp(real a) {
  a ~ normal(0, 1);
}

real test_rng(real a) {
  return normal_rng(a, 1);
}

real test_lpdf(real a, real b) {
  return normal_lpdf(a | b, 1);
}
real my_log1p_exp(real x) {
  return log1p_exp(x);
}

real array_fun(array[] real a) {
  return sum(a);
}

real int_array_fun(array[] int a) {
  return sum(a);
}

vector my_vector_mul_by_5(vector x) {
  vector[num_elements(x)] result = x * 5.0;
  return result;
}

int int_only_multiplication(int a, int b) {
  return a * b;
}

real test_lgamma(real x) {
  return lgamma(x);
}

// test special functions
void test_lp(real a) {
  a ~ normal(0, 1);
}

real test_rng(real a) {
  return normal_rng(a, 1);
}

real test_lpdf(real a, real b) {
  return normal_lpdf(a | b, 1);
}
$ node good_after_bad.js
Syntax error in 'string', line 8, column 0 to column 5, parsing error:
Expected "generated quantities {" or end of file after end of model block.

$ node info.js
{ "inputs": { "a": { "type": "int", "dimensions": 0},
              "b": { "type": "real", "dimensions": 0},
              "c": { "type": "real", "dimensions": 1},
              "d": { "type": "real", "dimensions": 1},
              "e": { "type": "real", "dimensions": 2},
              "f": { "type": "int", "dimensions": 1},
              "g": { "type": "real", "dimensions": 1},
              "h": { "type": "real", "dimensions": 2},
              "i": { "type": "real", "dimensions": 3},
              "j": { "type": "int", "dimensions": 3} },
  "parameters": { "l": { "type": "real", "dimensions": 1},
                  "m": { "type": "real", "dimensions": 1},
                  "n": { "type": "real", "dimensions": 1},
                  "o": { "type": "real", "dimensions": 1},
                  "p": { "type": "real", "dimensions": 2},
                  "q": { "type": "real", "dimensions": 2},
                  "r": { "type": "real", "dimensions": 2},
                  "s": { "type": "real", "dimensions": 2},
                  "y": { "type": "real", "dimensions": 0} },
  "transformed parameters": {  },
  "generated quantities": {  },
  "functions": [  ],
  "distributions": [  ],
  "included_files": [  ] }

$ node optimization.js
Semantic error in 'string', line 3, column 8 to column 11: 
Function is declared without specifying a definition.

$ node pedantic.js
["Warning in 'string', line 7, column 17: Argument 10000 suggests there may be\n    parameters that are not unit scale; consider rescaling with a multiplier\n    (see manual section 22.12).","Warning: The parameter k was declared but was not used in the density\n    calculation."]
[]
["Warning in 'string', line 4, column 9: The variable tt may not have been\n    assigned a value before its use."]
[]
$ node standalone-functions.js

$ node version.js
%%NAME%% %%VERSION%%
%%NAME%% %%VERSION%%
%%NAME%% %%VERSION%%
$ node warnings.js
["Warning in 'string', line 4, column 4: Comments beginning with # are\n    deprecated and this syntax will be removed in Stan 2.32.0. Use // to\n    begin line comments; this can be done automatically using the auto-format\n    flag to stanc"]
